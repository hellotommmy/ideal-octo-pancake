#define rand	pan_rand
#define pthread_equal(a,b)	((a)==(b))
#if defined(HAS_CODE) && defined(VERBOSE)
	#ifdef BFS_PAR
		bfs_printf("Pr: %d Tr: %d\n", II, t->forw);
	#else
		cpu_printf("Pr: %d Tr: %d\n", II, t->forw);
	#endif
#endif
	switch (t->forw) {
	default: Uerror("bad forward move");
	case 0:	/* if without executable clauses */
		continue;
	case 1: /* generic 'goto' or 'skip' */
		IfNotBlocked
		_m = 3; goto P999;
	case 2: /* generic 'else' */
		IfNotBlocked
		if (trpt->o_pm&1) continue;
		_m = 3; goto P999;

		 /* CLAIM all_starvation_free */
	case 3: // STATE 1 - _spin_nvr.tmp:47 - [(((!(!((tcb[4].state==1)))&&!((EP==4)))&&(!(!((tcb[1].state==1)))||(!(!((tcb[2].state==1)))||(!(!((tcb[3].state==1)))||!(!((tcb[4].state==1))))))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][1] = 1;
		if (!((( !( !((((int)now.tcb[4].state)==1)))&& !((((int)now.EP)==4)))&&( !( !((((int)now.tcb[1].state)==1)))||( !( !((((int)now.tcb[2].state)==1)))||( !( !((((int)now.tcb[3].state)==1)))|| !( !((((int)now.tcb[4].state)==1)))))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 4: // STATE 3 - _spin_nvr.tmp:48 - [(((!(!((tcb[3].state==1)))&&!((EP==3)))&&(!(!((tcb[1].state==1)))||(!(!((tcb[2].state==1)))||(!(!((tcb[3].state==1)))||!(!((tcb[4].state==1))))))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][3] = 1;
		if (!((( !( !((((int)now.tcb[3].state)==1)))&& !((((int)now.EP)==3)))&&( !( !((((int)now.tcb[1].state)==1)))||( !( !((((int)now.tcb[2].state)==1)))||( !( !((((int)now.tcb[3].state)==1)))|| !( !((((int)now.tcb[4].state)==1)))))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 5: // STATE 5 - _spin_nvr.tmp:49 - [((!(!((tcb[2].state==1)))&&!((EP==2))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][5] = 1;
		if (!(( !( !((((int)now.tcb[2].state)==1)))&& !((((int)now.EP)==2)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 6: // STATE 7 - _spin_nvr.tmp:50 - [((!(!((tcb[1].state==1)))&&!((EP==1))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][7] = 1;
		if (!(( !( !((((int)now.tcb[1].state)==1)))&& !((((int)now.EP)==1)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 7: // STATE 14 - _spin_nvr.tmp:55 - [(!((EP==4)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported14 = 0;
			if (verbose && !reported14)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported14 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported14 = 0;
			if (verbose && !reported14)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported14 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][14] = 1;
		if (!( !((((int)now.EP)==4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 8: // STATE 19 - _spin_nvr.tmp:59 - [(!((EP==3)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][19] = 1;
		if (!( !((((int)now.EP)==3))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 9: // STATE 24 - _spin_nvr.tmp:63 - [(!((EP==2)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported24 = 0;
			if (verbose && !reported24)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported24 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported24 = 0;
			if (verbose && !reported24)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported24 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][24] = 1;
		if (!( !((((int)now.EP)==2))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 10: // STATE 29 - _spin_nvr.tmp:67 - [(!((EP==1)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported29 = 0;
			if (verbose && !reported29)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported29 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported29 = 0;
			if (verbose && !reported29)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported29 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][29] = 1;
		if (!( !((((int)now.EP)==1))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 11: // STATE 34 - _spin_nvr.tmp:69 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported34 = 0;
			if (verbose && !reported34)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported34 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported34 = 0;
			if (verbose && !reported34)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported34 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][34] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM starvation_free_task4 */
	case 12: // STATE 1 - _spin_nvr.tmp:36 - [((!(!((tcb[4].state==1)))&&!((EP==4))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[8][1] = 1;
		if (!(( !( !((((int)now.tcb[4].state)==1)))&& !((((int)now.EP)==4)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 13: // STATE 8 - _spin_nvr.tmp:41 - [(!((EP==4)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[8][8] = 1;
		if (!( !((((int)now.EP)==4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 14: // STATE 13 - _spin_nvr.tmp:43 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[8][13] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM starvation_free_task3 */
	case 15: // STATE 1 - _spin_nvr.tmp:25 - [((!(!((tcb[3].state==1)))&&!((EP==3))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[7][1] = 1;
		if (!(( !( !((((int)now.tcb[3].state)==1)))&& !((((int)now.EP)==3)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 16: // STATE 8 - _spin_nvr.tmp:30 - [(!((EP==3)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[7][8] = 1;
		if (!( !((((int)now.EP)==3))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 17: // STATE 13 - _spin_nvr.tmp:32 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[7][13] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM starvation_free_task2 */
	case 18: // STATE 1 - _spin_nvr.tmp:14 - [((!(!((tcb[2].state==1)))&&!((EP==2))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[6][1] = 1;
		if (!(( !( !((((int)now.tcb[2].state)==1)))&& !((((int)now.EP)==2)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 19: // STATE 8 - _spin_nvr.tmp:19 - [(!((EP==2)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[6][8] = 1;
		if (!( !((((int)now.EP)==2))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 20: // STATE 13 - _spin_nvr.tmp:21 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[6][13] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM starvation_free_task1 */
	case 21: // STATE 1 - _spin_nvr.tmp:3 - [((!(!((tcb[1].state==1)))&&!((EP==1))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[5][1] = 1;
		if (!(( !( !((((int)now.tcb[1].state)==1)))&& !((((int)now.EP)==1)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 22: // STATE 8 - _spin_nvr.tmp:8 - [(!((EP==1)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[5][8] = 1;
		if (!( !((((int)now.EP)==1))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 23: // STATE 13 - _spin_nvr.tmp:10 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[5][13] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC :init: */
	case 24: // STATE 1 - resume_suspend.pml:546 - [i = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][1] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->i);
		((P4 *)_this)->i = 0;
#ifdef VAR_RANGES
		logval(":init::i", ((int)((P4 *)_this)->i));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 25: // STATE 2 - resume_suspend.pml:548 - [((i<4))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][2] = 1;
		if (!((((int)((P4 *)_this)->i)<4)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 26: // STATE 3 - resume_suspend.pml:121 - [init_rq_idx = 0] (0:10:2 - 1)
		IfNotBlocked
		reached[4][3] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P4 *)_this)->_8_25_init_rq_idx);
		((P4 *)_this)->_8_25_init_rq_idx = 0;
#ifdef VAR_RANGES
		logval(":init::init_rq_idx", ((int)((P4 *)_this)->_8_25_init_rq_idx));
#endif
		;
		/* merge: init_rq_idx = 0(10, 4, 10) */
		reached[4][4] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P4 *)_this)->_8_25_init_rq_idx);
		((P4 *)_this)->_8_25_init_rq_idx = 0;
#ifdef VAR_RANGES
		logval(":init::init_rq_idx", ((int)((P4 *)_this)->_8_25_init_rq_idx));
#endif
		;
		/* merge: .(goto)(0, 11, 10) */
		reached[4][11] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 27: // STATE 5 - resume_suspend.pml:123 - [((init_rq_idx<8))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][5] = 1;
		if (!((((int)((P4 *)_this)->_8_25_init_rq_idx)<8)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 28: // STATE 6 - resume_suspend.pml:124 - [readyQueue[i].tasks[init_rq_idx] = 255] (0:0:1 - 1)
		IfNotBlocked
		reached[4][6] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)((P4 *)_this)->i), 4) ].tasks[ Index(((int)((P4 *)_this)->_8_25_init_rq_idx), 8) ]);
		now.readyQueue[ Index(((P4 *)_this)->i, 4) ].tasks[ Index(((P4 *)_this)->_8_25_init_rq_idx, 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[:init::i].tasks[:init::init_rq_idx]", ((int)now.readyQueue[ Index(((int)((P4 *)_this)->i), 4) ].tasks[ Index(((int)((P4 *)_this)->_8_25_init_rq_idx), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 29: // STATE 7 - resume_suspend.pml:125 - [init_rq_idx = (init_rq_idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][7] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->_8_25_init_rq_idx);
		((P4 *)_this)->_8_25_init_rq_idx = (((int)((P4 *)_this)->_8_25_init_rq_idx)+1);
#ifdef VAR_RANGES
		logval(":init::init_rq_idx", ((int)((P4 *)_this)->_8_25_init_rq_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 30: // STATE 8 - resume_suspend.pml:126 - [((init_rq_idx>=8))] (0:0:1 - 1)
		IfNotBlocked
		reached[4][8] = 1;
		if (!((((int)((P4 *)_this)->_8_25_init_rq_idx)>=8)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _8_25_init_rq_idx */  (trpt+1)->bup.oval = ((P4 *)_this)->_8_25_init_rq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P4 *)_this)->_8_25_init_rq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 31: // STATE 13 - resume_suspend.pml:128 - [readyQueue[i].tailIndex = 0] (0:0:1 - 3)
		IfNotBlocked
		reached[4][13] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)((P4 *)_this)->i), 4) ].tailIndex);
		now.readyQueue[ Index(((P4 *)_this)->i, 4) ].tailIndex = 0;
#ifdef VAR_RANGES
		logval("readyQueue[:init::i].tailIndex", ((int)now.readyQueue[ Index(((int)((P4 *)_this)->i), 4) ].tailIndex));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 32: // STATE 15 - resume_suspend.pml:550 - [i = (i+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][15] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->i);
		((P4 *)_this)->i = (((int)((P4 *)_this)->i)+1);
#ifdef VAR_RANGES
		logval(":init::i", ((int)((P4 *)_this)->i));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 33: // STATE 16 - resume_suspend.pml:551 - [((i>=4))] (0:0:1 - 1)
		IfNotBlocked
		reached[4][16] = 1;
		if (!((((int)((P4 *)_this)->i)>=4)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: i */  (trpt+1)->bup.oval = ((P4 *)_this)->i;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P4 *)_this)->i = 0;
		_m = 3; goto P999; /* 0 */
	case 34: // STATE 21 - resume_suspend.pml:57 - [init_sl_idx = 0] (0:28:2 - 1)
		IfNotBlocked
		reached[4][21] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P4 *)_this)->_8_26_init_sl_idx);
		((P4 *)_this)->_8_26_init_sl_idx = 0;
#ifdef VAR_RANGES
		logval(":init::init_sl_idx", ((int)((P4 *)_this)->_8_26_init_sl_idx));
#endif
		;
		/* merge: init_sl_idx = 0(28, 22, 28) */
		reached[4][22] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P4 *)_this)->_8_26_init_sl_idx);
		((P4 *)_this)->_8_26_init_sl_idx = 0;
#ifdef VAR_RANGES
		logval(":init::init_sl_idx", ((int)((P4 *)_this)->_8_26_init_sl_idx));
#endif
		;
		/* merge: .(goto)(0, 29, 28) */
		reached[4][29] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 35: // STATE 23 - resume_suspend.pml:59 - [((init_sl_idx<8))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][23] = 1;
		if (!((((int)((P4 *)_this)->_8_26_init_sl_idx)<8)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 36: // STATE 24 - resume_suspend.pml:60 - [sortLink.tasks[init_sl_idx] = 255] (0:0:1 - 1)
		IfNotBlocked
		reached[4][24] = 1;
		(trpt+1)->bup.oval = ((int)now.sortLink.tasks[ Index(((int)((P4 *)_this)->_8_26_init_sl_idx), 8) ]);
		now.sortLink.tasks[ Index(((P4 *)_this)->_8_26_init_sl_idx, 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[:init::init_sl_idx]", ((int)now.sortLink.tasks[ Index(((int)((P4 *)_this)->_8_26_init_sl_idx), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 37: // STATE 25 - resume_suspend.pml:61 - [init_sl_idx = (init_sl_idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][25] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->_8_26_init_sl_idx);
		((P4 *)_this)->_8_26_init_sl_idx = (((int)((P4 *)_this)->_8_26_init_sl_idx)+1);
#ifdef VAR_RANGES
		logval(":init::init_sl_idx", ((int)((P4 *)_this)->_8_26_init_sl_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 38: // STATE 26 - resume_suspend.pml:62 - [((init_sl_idx>=8))] (0:0:1 - 1)
		IfNotBlocked
		reached[4][26] = 1;
		if (!((((int)((P4 *)_this)->_8_26_init_sl_idx)>=8)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _8_26_init_sl_idx */  (trpt+1)->bup.oval = ((P4 *)_this)->_8_26_init_sl_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P4 *)_this)->_8_26_init_sl_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 39: // STATE 31 - resume_suspend.pml:64 - [sortLink.count = 0] (0:0:1 - 3)
		IfNotBlocked
		reached[4][31] = 1;
		(trpt+1)->bup.oval = ((int)now.sortLink.count);
		now.sortLink.count = 0;
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 40: // STATE 33 - resume_suspend.pml:558 - [tcb[1].prio = 2] (0:0:1 - 1)
		IfNotBlocked
		reached[4][33] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[1].prio);
		now.tcb[1].prio = 2;
#ifdef VAR_RANGES
		logval("tcb[1].prio", ((int)now.tcb[1].prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 41: // STATE 34 - resume_suspend.pml:559 - [tcb[1].state = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[4][34] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[1].state);
		now.tcb[1].state = 1;
#ifdef VAR_RANGES
		logval("tcb[1].state", ((int)now.tcb[1].state));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 42: // STATE 35 - resume_suspend.pml:560 - [tcb[1].responseTime = 10] (0:0:1 - 1)
		IfNotBlocked
		reached[4][35] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[1].responseTime);
		now.tcb[1].responseTime = 10;
#ifdef VAR_RANGES
		logval("tcb[1].responseTime", ((int)now.tcb[1].responseTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 43: // STATE 36 - resume_suspend.pml:561 - [tcb[1].wakeupTime = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][36] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[1].wakeupTime);
		now.tcb[1].wakeupTime = 0;
#ifdef VAR_RANGES
		logval("tcb[1].wakeupTime", ((int)now.tcb[1].wakeupTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 44: // STATE 37 - resume_suspend.pml:562 - [tcb[1].delayTicks = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][37] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[1].delayTicks);
		now.tcb[1].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[1].delayTicks", ((int)now.tcb[1].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 45: // STATE 38 - resume_suspend.pml:137 - [((readyQueue[tcb[1].prio].tailIndex<8))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][38] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tailIndex)<8)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 46: // STATE 39 - resume_suspend.pml:138 - [readyQueue[tcb[1].prio].tasks[readyQueue[tcb[1].prio].tailIndex] = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[4][39] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[1].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[1].prio, 4) ].tailIndex, 8) ] = 1;
#ifdef VAR_RANGES
		logval("readyQueue[tcb[1].prio].tasks[readyQueue[tcb[1].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 47: // STATE 40 - resume_suspend.pml:139 - [readyQueue[tcb[1].prio].tailIndex = (readyQueue[tcb[1].prio].tailIndex+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][40] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[1].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[1].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[1].prio), 4) ].tailIndex));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 48: // STATE 42 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[4][42] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 49: // STATE 46 - resume_suspend.pml:565 - [tcb[2].prio = 2] (0:0:1 - 3)
		IfNotBlocked
		reached[4][46] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[2].prio);
		now.tcb[2].prio = 2;
#ifdef VAR_RANGES
		logval("tcb[2].prio", ((int)now.tcb[2].prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 50: // STATE 47 - resume_suspend.pml:566 - [tcb[2].state = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[4][47] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[2].state);
		now.tcb[2].state = 1;
#ifdef VAR_RANGES
		logval("tcb[2].state", ((int)now.tcb[2].state));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 51: // STATE 48 - resume_suspend.pml:567 - [tcb[2].responseTime = 20] (0:0:1 - 1)
		IfNotBlocked
		reached[4][48] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[2].responseTime);
		now.tcb[2].responseTime = 20;
#ifdef VAR_RANGES
		logval("tcb[2].responseTime", ((int)now.tcb[2].responseTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 52: // STATE 49 - resume_suspend.pml:568 - [tcb[2].wakeupTime = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][49] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[2].wakeupTime);
		now.tcb[2].wakeupTime = 0;
#ifdef VAR_RANGES
		logval("tcb[2].wakeupTime", ((int)now.tcb[2].wakeupTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 53: // STATE 50 - resume_suspend.pml:569 - [tcb[2].delayTicks = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][50] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[2].delayTicks);
		now.tcb[2].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[2].delayTicks", ((int)now.tcb[2].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 54: // STATE 51 - resume_suspend.pml:137 - [((readyQueue[tcb[2].prio].tailIndex<8))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][51] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tailIndex)<8)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 55: // STATE 52 - resume_suspend.pml:138 - [readyQueue[tcb[2].prio].tasks[readyQueue[tcb[2].prio].tailIndex] = 2] (0:0:1 - 1)
		IfNotBlocked
		reached[4][52] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[2].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[2].prio, 4) ].tailIndex, 8) ] = 2;
#ifdef VAR_RANGES
		logval("readyQueue[tcb[2].prio].tasks[readyQueue[tcb[2].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 56: // STATE 53 - resume_suspend.pml:139 - [readyQueue[tcb[2].prio].tailIndex = (readyQueue[tcb[2].prio].tailIndex+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][53] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[2].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[2].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[2].prio), 4) ].tailIndex));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 57: // STATE 55 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[4][55] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 58: // STATE 59 - resume_suspend.pml:572 - [tcb[3].prio = 1] (0:0:1 - 3)
		IfNotBlocked
		reached[4][59] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[3].prio);
		now.tcb[3].prio = 1;
#ifdef VAR_RANGES
		logval("tcb[3].prio", ((int)now.tcb[3].prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 59: // STATE 60 - resume_suspend.pml:573 - [tcb[3].state = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[4][60] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[3].state);
		now.tcb[3].state = 1;
#ifdef VAR_RANGES
		logval("tcb[3].state", ((int)now.tcb[3].state));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 60: // STATE 61 - resume_suspend.pml:574 - [tcb[3].responseTime = 15] (0:0:1 - 1)
		IfNotBlocked
		reached[4][61] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[3].responseTime);
		now.tcb[3].responseTime = 15;
#ifdef VAR_RANGES
		logval("tcb[3].responseTime", ((int)now.tcb[3].responseTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 61: // STATE 62 - resume_suspend.pml:575 - [tcb[3].wakeupTime = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][62] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[3].wakeupTime);
		now.tcb[3].wakeupTime = 0;
#ifdef VAR_RANGES
		logval("tcb[3].wakeupTime", ((int)now.tcb[3].wakeupTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 62: // STATE 63 - resume_suspend.pml:576 - [tcb[3].delayTicks = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][63] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[3].delayTicks);
		now.tcb[3].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[3].delayTicks", ((int)now.tcb[3].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 63: // STATE 64 - resume_suspend.pml:137 - [((readyQueue[tcb[3].prio].tailIndex<8))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][64] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tailIndex)<8)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 64: // STATE 65 - resume_suspend.pml:138 - [readyQueue[tcb[3].prio].tasks[readyQueue[tcb[3].prio].tailIndex] = 3] (0:0:1 - 1)
		IfNotBlocked
		reached[4][65] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[3].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[3].prio, 4) ].tailIndex, 8) ] = 3;
#ifdef VAR_RANGES
		logval("readyQueue[tcb[3].prio].tasks[readyQueue[tcb[3].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 65: // STATE 66 - resume_suspend.pml:139 - [readyQueue[tcb[3].prio].tailIndex = (readyQueue[tcb[3].prio].tailIndex+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][66] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[3].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[3].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[3].prio), 4) ].tailIndex));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 66: // STATE 68 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[4][68] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 67: // STATE 72 - resume_suspend.pml:579 - [tcb[4].prio = 3] (0:0:1 - 3)
		IfNotBlocked
		reached[4][72] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[4].prio);
		now.tcb[4].prio = 3;
#ifdef VAR_RANGES
		logval("tcb[4].prio", ((int)now.tcb[4].prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 68: // STATE 73 - resume_suspend.pml:580 - [tcb[4].state = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[4][73] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[4].state);
		now.tcb[4].state = 1;
#ifdef VAR_RANGES
		logval("tcb[4].state", ((int)now.tcb[4].state));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 69: // STATE 74 - resume_suspend.pml:581 - [tcb[4].responseTime = 25] (0:0:1 - 1)
		IfNotBlocked
		reached[4][74] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[4].responseTime);
		now.tcb[4].responseTime = 25;
#ifdef VAR_RANGES
		logval("tcb[4].responseTime", ((int)now.tcb[4].responseTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 70: // STATE 75 - resume_suspend.pml:582 - [tcb[4].wakeupTime = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][75] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[4].wakeupTime);
		now.tcb[4].wakeupTime = 0;
#ifdef VAR_RANGES
		logval("tcb[4].wakeupTime", ((int)now.tcb[4].wakeupTime));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 71: // STATE 76 - resume_suspend.pml:583 - [tcb[4].delayTicks = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[4][76] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[4].delayTicks);
		now.tcb[4].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[4].delayTicks", ((int)now.tcb[4].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 72: // STATE 77 - resume_suspend.pml:137 - [((readyQueue[tcb[4].prio].tailIndex<8))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][77] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tailIndex)<8)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 73: // STATE 78 - resume_suspend.pml:138 - [readyQueue[tcb[4].prio].tasks[readyQueue[tcb[4].prio].tailIndex] = 4] (0:0:1 - 1)
		IfNotBlocked
		reached[4][78] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[4].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[4].prio, 4) ].tailIndex, 8) ] = 4;
#ifdef VAR_RANGES
		logval("readyQueue[tcb[4].prio].tasks[readyQueue[tcb[4].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 74: // STATE 79 - resume_suspend.pml:139 - [readyQueue[tcb[4].prio].tailIndex = (readyQueue[tcb[4].prio].tailIndex+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][79] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[4].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[4].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[4].prio), 4) ].tailIndex));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 75: // STATE 81 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[4][81] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 76: // STATE 85 - resume_suspend.pml:208 - [prio = 0] (0:101:6 - 1)
		IfNotBlocked
		reached[4][85] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P4 *)_this)->_8_31_prio);
		((P4 *)_this)->_8_31_prio = 0;
#ifdef VAR_RANGES
		logval(":init::prio", ((int)((P4 *)_this)->_8_31_prio));
#endif
		;
		/* merge: top_task = 0(101, 86, 101) */
		reached[4][86] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P4 *)_this)->_8_31_top_task);
		((P4 *)_this)->_8_31_top_task = 0;
#ifdef VAR_RANGES
		logval(":init::top_task", ((int)((P4 *)_this)->_8_31_top_task));
#endif
		;
		/* merge: found = 0(101, 87, 101) */
		reached[4][87] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P4 *)_this)->_8_31_found);
		((P4 *)_this)->_8_31_found = 0;
#ifdef VAR_RANGES
		logval(":init::found", ((int)((P4 *)_this)->_8_31_found));
#endif
		;
		/* merge: prio = 0(101, 88, 101) */
		reached[4][88] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P4 *)_this)->_8_31_prio);
		((P4 *)_this)->_8_31_prio = 0;
#ifdef VAR_RANGES
		logval(":init::prio", ((int)((P4 *)_this)->_8_31_prio));
#endif
		;
		/* merge: top_task = 0(101, 89, 101) */
		reached[4][89] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P4 *)_this)->_8_31_top_task);
		((P4 *)_this)->_8_31_top_task = 0;
#ifdef VAR_RANGES
		logval(":init::top_task", ((int)((P4 *)_this)->_8_31_top_task));
#endif
		;
		/* merge: found = 0(101, 90, 101) */
		reached[4][90] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P4 *)_this)->_8_31_found);
		((P4 *)_this)->_8_31_found = 0;
#ifdef VAR_RANGES
		logval(":init::found", ((int)((P4 *)_this)->_8_31_found));
#endif
		;
		/* merge: .(goto)(0, 102, 101) */
		reached[4][102] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 77: // STATE 91 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][91] = 1;
		if (!(((((int)((P4 *)_this)->_8_31_prio)<4)&& !(((int)((P4 *)_this)->_8_31_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 78: // STATE 92 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][92] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P4 *)_this)->_8_31_prio), 4) ].tailIndex)>0)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 79: // STATE 93 - resume_suspend.pml:221 - [top_task = readyQueue[prio].tasks[0]] (0:0:1 - 1)
		IfNotBlocked
		reached[4][93] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->_8_31_top_task);
		((P4 *)_this)->_8_31_top_task = ((int)now.readyQueue[ Index(((int)((P4 *)_this)->_8_31_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval(":init::top_task", ((int)((P4 *)_this)->_8_31_top_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 80: // STATE 94 - resume_suspend.pml:224 - [found = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[4][94] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->_8_31_found);
		((P4 *)_this)->_8_31_found = 1;
#ifdef VAR_RANGES
		logval(":init::found", ((int)((P4 *)_this)->_8_31_found));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 81: // STATE 96 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][96] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->_8_31_prio);
		((P4 *)_this)->_8_31_prio = (((int)((P4 *)_this)->_8_31_prio)+1);
#ifdef VAR_RANGES
		logval(":init::prio", ((int)((P4 *)_this)->_8_31_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 82: // STATE 99 - resume_suspend.pml:227 - [(((prio>=4)||found))] (0:0:1 - 1)
		IfNotBlocked
		reached[4][99] = 1;
		if (!(((((int)((P4 *)_this)->_8_31_prio)>=4)||((int)((P4 *)_this)->_8_31_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _8_31_found */  (trpt+1)->bup.oval = ((P4 *)_this)->_8_31_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P4 *)_this)->_8_31_found = 0;
		_m = 3; goto P999; /* 0 */
	case 83: // STATE 104 - resume_suspend.pml:231 - [EP = top_task] (0:0:1 - 3)
		IfNotBlocked
		reached[4][104] = 1;
		(trpt+1)->bup.oval = ((int)now.EP);
		now.EP = ((int)((P4 *)_this)->_8_31_top_task);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 84: // STATE 105 - resume_suspend.pml:232 - [topPrio = prio] (0:0:1 - 1)
		IfNotBlocked
		reached[4][105] = 1;
		(trpt+1)->bup.oval = ((int)now.topPrio);
		now.topPrio = ((int)((P4 *)_this)->_8_31_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 85: // STATE 107 - resume_suspend.pml:177 - [deq_idx = 0] (0:114:2 - 1)
		IfNotBlocked
		reached[4][107] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P4 *)_this)->_8_32_deq_idx);
		((P4 *)_this)->_8_32_deq_idx = 0;
#ifdef VAR_RANGES
		logval(":init::deq_idx", ((int)((P4 *)_this)->_8_32_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(114, 108, 114) */
		reached[4][108] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P4 *)_this)->_8_32_deq_idx);
		((P4 *)_this)->_8_32_deq_idx = 0;
#ifdef VAR_RANGES
		logval(":init::deq_idx", ((int)((P4 *)_this)->_8_32_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 115, 114) */
		reached[4][115] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 86: // STATE 109 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][109] = 1;
		if (!((((int)((P4 *)_this)->_8_32_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 87: // STATE 110 - resume_suspend.pml:182 - [readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)]] (0:0:1 - 1)
		IfNotBlocked
		reached[4][110] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P4 *)_this)->_8_32_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P4 *)_this)->_8_32_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P4 *)_this)->_8_32_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[:init::deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P4 *)_this)->_8_32_deq_idx), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 88: // STATE 111 - resume_suspend.pml:183 - [deq_idx = (deq_idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][111] = 1;
		(trpt+1)->bup.oval = ((int)((P4 *)_this)->_8_32_deq_idx);
		((P4 *)_this)->_8_32_deq_idx = (((int)((P4 *)_this)->_8_32_deq_idx)+1);
#ifdef VAR_RANGES
		logval(":init::deq_idx", ((int)((P4 *)_this)->_8_32_deq_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 89: // STATE 112 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[4][112] = 1;
		if (!((((int)((P4 *)_this)->_8_32_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _8_32_deq_idx */  (trpt+1)->bup.oval = ((P4 *)_this)->_8_32_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P4 *)_this)->_8_32_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 90: // STATE 117 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][117] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 91: // STATE 118 - resume_suspend.pml:190 - [readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255] (0:0:1 - 1)
		IfNotBlocked
		reached[4][118] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 92: // STATE 119 - resume_suspend.pml:191 - [readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)] (0:0:1 - 1)
		IfNotBlocked
		reached[4][119] = 1;
		(trpt+1)->bup.oval = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 93: // STATE 125 - resume_suspend.pml:589 - [tcb[EP].state = 4] (0:0:1 - 3)
		IfNotBlocked
		reached[4][125] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)now.EP), 5) ].state);
		now.tcb[ Index(now.EP, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[EP].state", ((int)now.tcb[ Index(((int)now.EP), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 94: // STATE 126 - resume_suspend.pml:591 - [(run Process1())] (0:0:0 - 1)
		IfNotBlocked
		reached[4][126] = 1;
		if (!(addproc(II, 1, 0)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 95: // STATE 127 - resume_suspend.pml:592 - [(run Process2())] (0:0:0 - 1)
		IfNotBlocked
		reached[4][127] = 1;
		if (!(addproc(II, 1, 1)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 96: // STATE 128 - resume_suspend.pml:593 - [(run Process3())] (0:0:0 - 1)
		IfNotBlocked
		reached[4][128] = 1;
		if (!(addproc(II, 1, 2)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 97: // STATE 129 - resume_suspend.pml:594 - [(run Process4())] (0:0:0 - 1)
		IfNotBlocked
		reached[4][129] = 1;
		if (!(addproc(II, 1, 3)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 98: // STATE 130 - resume_suspend.pml:595 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[4][130] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC Process4 */
	case 99: // STATE 1 - resume_suspend.pml:516 - [((EP==4))] (130:0:0 - 1)
		IfNotBlocked
		reached[3][1] = 1;
		if (!((((int)now.EP)==4)))
			continue;
		/* merge: printf('Process 4 running, counter=%d\\n',counter)(0, 2, 130) */
		reached[3][2] = 1;
		Printf("Process 4 running, counter=%d\n", ((int)((P3 *)_this)->counter));
		_m = 3; goto P999; /* 1 */
	case 100: // STATE 3 - resume_suspend.pml:401 - [interrupted_task = 0] (0:11:6 - 1)
		IfNotBlocked
		reached[3][3] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_interrupted_task);
		((P3 *)_this)->_7_19_25_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_19_25_interrupted_task));
#endif
		;
		/* merge: idx = 0(11, 4, 11) */
		reached[3][4] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_idx);
		((P3 *)_this)->_7_19_25_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_19_25_idx));
#endif
		;
		/* merge: taskId = 0(11, 5, 11) */
		reached[3][5] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_19_25_taskId);
		((P3 *)_this)->_7_19_25_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_19_25_taskId));
#endif
		;
		/* merge: needResched = 0(11, 6, 11) */
		reached[3][6] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_19_25_needResched);
		((P3 *)_this)->_7_19_25_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_19_25_needResched));
#endif
		;
		/* merge: interrupted_task = 0(11, 7, 11) */
		reached[3][7] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_19_25_interrupted_task);
		((P3 *)_this)->_7_19_25_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_19_25_interrupted_task));
#endif
		;
		/* merge: needResched = 0(11, 8, 11) */
		reached[3][8] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_19_25_needResched);
		((P3 *)_this)->_7_19_25_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_19_25_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 101: // STATE 9 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:68:4 - 1)
		IfNotBlocked
		reached[3][9] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(68, 10, 68) */
		reached[3][10] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(68, 12, 68) */
		reached[3][12] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(68, 13, 68) */
		reached[3][13] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_19_25_idx);
		((P3 *)_this)->_7_19_25_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_19_25_idx));
#endif
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[3][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 102: // STATE 14 - resume_suspend.pml:416 - [((idx<sortLink.count))] (64:0:1 - 1)
		IfNotBlocked
		reached[3][14] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 15, 64) */
		reached[3][15] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_19_25_taskId);
		((P3 *)_this)->_7_19_25_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_19_25_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_19_25_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 103: // STATE 16 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (52:0:2 - 1)
		IfNotBlocked
		reached[3][16] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(52, 17, 52) */
		reached[3][17] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_19_25_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(52, 18, 52) */
		reached[3][18] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_19_25_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 104: // STATE 19 - resume_suspend.pml:81 - [removePos = 0] (0:33:5 - 1)
		IfNotBlocked
		reached[3][19] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_152_removePos);
		((P3 *)_this)->_7_19_25_152_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_19_25_152_removePos));
#endif
		;
		/* merge: found = 0(33, 20, 33) */
		reached[3][20] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_152_found);
		((P3 *)_this)->_7_19_25_152_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_19_25_152_found));
#endif
		;
		/* merge: shiftIdx = 0(33, 21, 33) */
		reached[3][21] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_19_25_152_shiftIdx);
		((P3 *)_this)->_7_19_25_152_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_19_25_152_shiftIdx));
#endif
		;
		/* merge: removePos = 0(33, 22, 33) */
		reached[3][22] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_19_25_152_removePos);
		((P3 *)_this)->_7_19_25_152_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_19_25_152_removePos));
#endif
		;
		/* merge: found = 0(33, 23, 33) */
		reached[3][23] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_19_25_152_found);
		((P3 *)_this)->_7_19_25_152_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_19_25_152_found));
#endif
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[3][34] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 105: // STATE 24 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][24] = 1;
		if (!(((((int)((P3 *)_this)->_7_19_25_152_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_19_25_152_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 106: // STATE 25 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (33:0:1 - 1)
		IfNotBlocked
		reached[3][25] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_19_25_152_removePos), 8) ])==((int)((P3 *)_this)->_7_19_25_taskId))))
			continue;
		/* merge: found = 1(0, 26, 33) */
		reached[3][26] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_19_25_152_found);
		((P3 *)_this)->_7_19_25_152_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_19_25_152_found));
#endif
		;
		/* merge: .(goto)(0, 30, 33) */
		reached[3][30] = 1;
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[3][34] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 107: // STATE 28 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][28] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_19_25_152_removePos);
		((P3 *)_this)->_7_19_25_152_removePos = (((int)((P3 *)_this)->_7_19_25_152_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_19_25_152_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 108: // STATE 36 - resume_suspend.pml:100 - [((found==1))] (43:0:2 - 1)
		IfNotBlocked
		reached[3][36] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_152_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_19_25_152_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_19_25_152_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_152_found = 0;
		/* merge: shiftIdx = removePos(0, 37, 43) */
		reached[3][37] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_152_shiftIdx);
		((P3 *)_this)->_7_19_25_152_shiftIdx = ((int)((P3 *)_this)->_7_19_25_152_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_19_25_152_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[3][44] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 109: // STATE 38 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (43:0:2 - 1)
		IfNotBlocked
		reached[3][38] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_152_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](43, 39, 43) */
		reached[3][39] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_19_25_152_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_19_25_152_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_19_25_152_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_19_25_152_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(43, 40, 43) */
		reached[3][40] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_152_shiftIdx);
		((P3 *)_this)->_7_19_25_152_shiftIdx = (((int)((P3 *)_this)->_7_19_25_152_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_19_25_152_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[3][44] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 110: // STATE 41 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (60:0:3 - 1)
		IfNotBlocked
		reached[3][41] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_152_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_19_25_152_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_19_25_152_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_152_shiftIdx = 0;
		/* merge: goto :b126(60, 42, 60) */
		reached[3][42] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(60, 46, 60) */
		reached[3][46] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[3][47] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[3][51] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 111: // STATE 46 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:60:2 - 3)
		IfNotBlocked
		reached[3][46] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[3][47] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[3][51] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 112: // STATE 53 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (68:0:4 - 1)
		IfNotBlocked
		reached[3][53] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(68, 54, 68) */
		reached[3][54] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_19_25_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_19_25_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_19_25_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(68, 55, 68) */
		reached[3][55] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_19_25_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(68, 59, 68) */
		reached[3][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[3][61] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_19_25_needResched);
		((P3 *)_this)->_7_19_25_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_19_25_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_19_25_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[3][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[3][69] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 113: // STATE 57 - resume_suspend.pml:140 - [assert(0)] (0:68:2 - 1)
		IfNotBlocked
		reached[3][57] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(68, 59, 68) */
		reached[3][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[3][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_needResched);
		((P3 *)_this)->_7_19_25_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_19_25_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_19_25_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[3][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[3][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 114: // STATE 61 - resume_suspend.pml:433 - [needResched = 1] (0:68:2 - 3)
		IfNotBlocked
		reached[3][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_needResched);
		((P3 *)_this)->_7_19_25_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_19_25_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_19_25_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[3][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[3][69] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 115: // STATE 63 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][63] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_19_25_idx);
		((P3 *)_this)->_7_19_25_idx = (((int)((P3 *)_this)->_7_19_25_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_19_25_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 116: // STATE 66 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (84:0:2 - 1)
		IfNotBlocked
		reached[3][66] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_19_25_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_19_25_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_idx = 0;
		/* merge: goto :b124(84, 67, 84) */
		reached[3][67] = 1;
		;
		/* merge: interrupted_task = EP(84, 71, 84) */
		reached[3][71] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_interrupted_task);
		((P3 *)_this)->_7_19_25_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_19_25_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 117: // STATE 71 - resume_suspend.pml:442 - [interrupted_task = EP] (0:84:1 - 3)
		IfNotBlocked
		reached[3][71] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_19_25_interrupted_task);
		((P3 *)_this)->_7_19_25_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_19_25_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 118: // STATE 72 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (81:0:1 - 1)
		IfNotBlocked
		reached[3][72] = 1;
		if (!((((((int)((P3 *)_this)->_7_19_25_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_19_25_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 73, 81) */
		reached[3][73] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_19_25_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 119: // STATE 74 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (107:0:2 - 1)
		IfNotBlocked
		reached[3][74] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(107, 75, 107) */
		reached[3][75] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_19_25_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_19_25_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_19_25_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(107, 76, 107) */
		reached[3][76] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_19_25_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_19_25_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 80, 107) */
		reached[3][80] = 1;
		;
		/* merge: .(goto)(0, 85, 107) */
		reached[3][85] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 120: // STATE 78 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][78] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 121: // STATE 86 - resume_suspend.pml:208 - [prio = 0] (0:102:6 - 1)
		IfNotBlocked
		reached[3][86] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_155_prio);
		((P3 *)_this)->_7_19_25_155_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_19_25_155_prio));
#endif
		;
		/* merge: top_task = 0(102, 87, 102) */
		reached[3][87] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_155_top_task);
		((P3 *)_this)->_7_19_25_155_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_19_25_155_top_task));
#endif
		;
		/* merge: found = 0(102, 88, 102) */
		reached[3][88] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_19_25_155_found);
		((P3 *)_this)->_7_19_25_155_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_19_25_155_found));
#endif
		;
		/* merge: prio = 0(102, 89, 102) */
		reached[3][89] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_19_25_155_prio);
		((P3 *)_this)->_7_19_25_155_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_19_25_155_prio));
#endif
		;
		/* merge: top_task = 0(102, 90, 102) */
		reached[3][90] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_19_25_155_top_task);
		((P3 *)_this)->_7_19_25_155_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_19_25_155_top_task));
#endif
		;
		/* merge: found = 0(102, 91, 102) */
		reached[3][91] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_19_25_155_found);
		((P3 *)_this)->_7_19_25_155_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_19_25_155_found));
#endif
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[3][103] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 122: // STATE 92 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][92] = 1;
		if (!(((((int)((P3 *)_this)->_7_19_25_155_prio)<4)&& !(((int)((P3 *)_this)->_7_19_25_155_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 123: // STATE 93 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (102:0:2 - 1)
		IfNotBlocked
		reached[3][93] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_19_25_155_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](102, 94, 102) */
		reached[3][94] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_155_top_task);
		((P3 *)_this)->_7_19_25_155_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_19_25_155_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_19_25_155_top_task));
#endif
		;
		/* merge: found = 1(102, 95, 102) */
		reached[3][95] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_155_found);
		((P3 *)_this)->_7_19_25_155_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_19_25_155_found));
#endif
		;
		/* merge: .(goto)(0, 99, 102) */
		reached[3][99] = 1;
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[3][103] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 124: // STATE 97 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][97] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_19_25_155_prio);
		((P3 *)_this)->_7_19_25_155_prio = (((int)((P3 *)_this)->_7_19_25_155_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_19_25_155_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 125: // STATE 100 - resume_suspend.pml:227 - [(((prio>=4)||found))] (125:0:3 - 1)
		IfNotBlocked
		reached[3][100] = 1;
		if (!(((((int)((P3 *)_this)->_7_19_25_155_prio)>=4)||((int)((P3 *)_this)->_7_19_25_155_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_19_25_155_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_19_25_155_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_155_found = 0;
		/* merge: goto :b127(125, 101, 125) */
		reached[3][101] = 1;
		;
		/* merge: newTask = top_task(125, 105, 125) */
		reached[3][105] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_19_25_155_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[3][106] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_19_25_155_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 126: // STATE 105 - resume_suspend.pml:231 - [newTask = top_task] (0:125:2 - 3)
		IfNotBlocked
		reached[3][105] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_19_25_155_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[3][106] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_19_25_155_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 127: // STATE 108 - resume_suspend.pml:177 - [deq_idx = 0] (0:115:2 - 1)
		IfNotBlocked
		reached[3][108] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_19_25_156_deq_idx);
		((P3 *)_this)->_7_19_25_156_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_19_25_156_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(115, 109, 115) */
		reached[3][109] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_156_deq_idx);
		((P3 *)_this)->_7_19_25_156_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_19_25_156_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[3][116] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 128: // STATE 110 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (115:0:2 - 1)
		IfNotBlocked
		reached[3][110] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_156_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](115, 111, 115) */
		reached[3][111] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_19_25_156_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_19_25_156_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_19_25_156_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_19_25_156_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(115, 112, 115) */
		reached[3][112] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_19_25_156_deq_idx);
		((P3 *)_this)->_7_19_25_156_deq_idx = (((int)((P3 *)_this)->_7_19_25_156_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_19_25_156_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[3][116] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 129: // STATE 113 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][113] = 1;
		if (!((((int)((P3 *)_this)->_7_19_25_156_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_19_25_156_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_19_25_156_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_19_25_156_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 130: // STATE 118 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (129:0:4 - 1)
		IfNotBlocked
		reached[3][118] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(129, 119, 129) */
		reached[3][119] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(129, 120, 129) */
		reached[3][120] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(129, 124, 129) */
		reached[3][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[3][126] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[3][127] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 131: // STATE 122 - resume_suspend.pml:192 - [(1)] (129:0:2 - 1)
		IfNotBlocked
		reached[3][122] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(129, 124, 129) */
		reached[3][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[3][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[3][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 132: // STATE 126 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:129:2 - 3)
		IfNotBlocked
		reached[3][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[3][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 133: // STATE 128 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][128] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 134: // STATE 132 - resume_suspend.pml:517 - [((EP==4))] (261:0:1 - 1)
		IfNotBlocked
		reached[3][132] = 1;
		if (!((((int)now.EP)==4)))
			continue;
		/* merge: counter = (counter+1)(0, 133, 261) */
		reached[3][133] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->counter);
		((P3 *)_this)->counter = (((int)((P3 *)_this)->counter)+1);
#ifdef VAR_RANGES
		logval("Process4:counter", ((int)((P3 *)_this)->counter));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 135: // STATE 134 - resume_suspend.pml:401 - [interrupted_task = 0] (0:142:6 - 1)
		IfNotBlocked
		reached[3][134] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_interrupted_task);
		((P3 *)_this)->_7_20_26_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_20_26_interrupted_task));
#endif
		;
		/* merge: idx = 0(142, 135, 142) */
		reached[3][135] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_idx);
		((P3 *)_this)->_7_20_26_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_20_26_idx));
#endif
		;
		/* merge: taskId = 0(142, 136, 142) */
		reached[3][136] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_20_26_taskId);
		((P3 *)_this)->_7_20_26_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_20_26_taskId));
#endif
		;
		/* merge: needResched = 0(142, 137, 142) */
		reached[3][137] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_20_26_needResched);
		((P3 *)_this)->_7_20_26_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_20_26_needResched));
#endif
		;
		/* merge: interrupted_task = 0(142, 138, 142) */
		reached[3][138] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_20_26_interrupted_task);
		((P3 *)_this)->_7_20_26_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_20_26_interrupted_task));
#endif
		;
		/* merge: needResched = 0(142, 139, 142) */
		reached[3][139] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_20_26_needResched);
		((P3 *)_this)->_7_20_26_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_20_26_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 136: // STATE 140 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:199:4 - 1)
		IfNotBlocked
		reached[3][140] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(199, 141, 199) */
		reached[3][141] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(199, 143, 199) */
		reached[3][143] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(199, 144, 199) */
		reached[3][144] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_20_26_idx);
		((P3 *)_this)->_7_20_26_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_20_26_idx));
#endif
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[3][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 137: // STATE 145 - resume_suspend.pml:416 - [((idx<sortLink.count))] (195:0:1 - 1)
		IfNotBlocked
		reached[3][145] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 146, 195) */
		reached[3][146] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_20_26_taskId);
		((P3 *)_this)->_7_20_26_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_20_26_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_20_26_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 138: // STATE 147 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (183:0:2 - 1)
		IfNotBlocked
		reached[3][147] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(183, 148, 183) */
		reached[3][148] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_20_26_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(183, 149, 183) */
		reached[3][149] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_20_26_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 139: // STATE 150 - resume_suspend.pml:81 - [removePos = 0] (0:164:5 - 1)
		IfNotBlocked
		reached[3][150] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_159_removePos);
		((P3 *)_this)->_7_20_26_159_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_20_26_159_removePos));
#endif
		;
		/* merge: found = 0(164, 151, 164) */
		reached[3][151] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_159_found);
		((P3 *)_this)->_7_20_26_159_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_20_26_159_found));
#endif
		;
		/* merge: shiftIdx = 0(164, 152, 164) */
		reached[3][152] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_20_26_159_shiftIdx);
		((P3 *)_this)->_7_20_26_159_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_20_26_159_shiftIdx));
#endif
		;
		/* merge: removePos = 0(164, 153, 164) */
		reached[3][153] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_20_26_159_removePos);
		((P3 *)_this)->_7_20_26_159_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_20_26_159_removePos));
#endif
		;
		/* merge: found = 0(164, 154, 164) */
		reached[3][154] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_20_26_159_found);
		((P3 *)_this)->_7_20_26_159_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_20_26_159_found));
#endif
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[3][165] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 140: // STATE 155 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][155] = 1;
		if (!(((((int)((P3 *)_this)->_7_20_26_159_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_20_26_159_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 141: // STATE 156 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (164:0:1 - 1)
		IfNotBlocked
		reached[3][156] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_20_26_159_removePos), 8) ])==((int)((P3 *)_this)->_7_20_26_taskId))))
			continue;
		/* merge: found = 1(0, 157, 164) */
		reached[3][157] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_20_26_159_found);
		((P3 *)_this)->_7_20_26_159_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_20_26_159_found));
#endif
		;
		/* merge: .(goto)(0, 161, 164) */
		reached[3][161] = 1;
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[3][165] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 142: // STATE 159 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][159] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_20_26_159_removePos);
		((P3 *)_this)->_7_20_26_159_removePos = (((int)((P3 *)_this)->_7_20_26_159_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_20_26_159_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 143: // STATE 167 - resume_suspend.pml:100 - [((found==1))] (174:0:2 - 1)
		IfNotBlocked
		reached[3][167] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_159_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_20_26_159_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_20_26_159_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_159_found = 0;
		/* merge: shiftIdx = removePos(0, 168, 174) */
		reached[3][168] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_159_shiftIdx);
		((P3 *)_this)->_7_20_26_159_shiftIdx = ((int)((P3 *)_this)->_7_20_26_159_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_20_26_159_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[3][175] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 144: // STATE 169 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (174:0:2 - 1)
		IfNotBlocked
		reached[3][169] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_159_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](174, 170, 174) */
		reached[3][170] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_20_26_159_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_20_26_159_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_20_26_159_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_20_26_159_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(174, 171, 174) */
		reached[3][171] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_159_shiftIdx);
		((P3 *)_this)->_7_20_26_159_shiftIdx = (((int)((P3 *)_this)->_7_20_26_159_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_20_26_159_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[3][175] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 145: // STATE 172 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (191:0:3 - 1)
		IfNotBlocked
		reached[3][172] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_159_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_20_26_159_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_20_26_159_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_159_shiftIdx = 0;
		/* merge: goto :b131(191, 173, 191) */
		reached[3][173] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(191, 177, 191) */
		reached[3][177] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[3][178] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[3][182] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 146: // STATE 177 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:191:2 - 3)
		IfNotBlocked
		reached[3][177] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[3][178] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[3][182] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 147: // STATE 184 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (199:0:4 - 1)
		IfNotBlocked
		reached[3][184] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(199, 185, 199) */
		reached[3][185] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_20_26_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_20_26_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_20_26_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(199, 186, 199) */
		reached[3][186] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_20_26_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(199, 190, 199) */
		reached[3][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[3][192] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_20_26_needResched);
		((P3 *)_this)->_7_20_26_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_20_26_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_20_26_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[3][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[3][200] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 148: // STATE 188 - resume_suspend.pml:140 - [assert(0)] (0:199:2 - 1)
		IfNotBlocked
		reached[3][188] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(199, 190, 199) */
		reached[3][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[3][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_needResched);
		((P3 *)_this)->_7_20_26_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_20_26_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_20_26_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[3][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[3][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 149: // STATE 192 - resume_suspend.pml:433 - [needResched = 1] (0:199:2 - 3)
		IfNotBlocked
		reached[3][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_needResched);
		((P3 *)_this)->_7_20_26_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_20_26_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_20_26_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[3][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[3][200] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 150: // STATE 194 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][194] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_20_26_idx);
		((P3 *)_this)->_7_20_26_idx = (((int)((P3 *)_this)->_7_20_26_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_20_26_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 151: // STATE 197 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (215:0:2 - 1)
		IfNotBlocked
		reached[3][197] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_20_26_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_20_26_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_idx = 0;
		/* merge: goto :b129(215, 198, 215) */
		reached[3][198] = 1;
		;
		/* merge: interrupted_task = EP(215, 202, 215) */
		reached[3][202] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_interrupted_task);
		((P3 *)_this)->_7_20_26_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_20_26_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 152: // STATE 202 - resume_suspend.pml:442 - [interrupted_task = EP] (0:215:1 - 3)
		IfNotBlocked
		reached[3][202] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_20_26_interrupted_task);
		((P3 *)_this)->_7_20_26_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_20_26_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 153: // STATE 203 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (212:0:1 - 1)
		IfNotBlocked
		reached[3][203] = 1;
		if (!((((((int)((P3 *)_this)->_7_20_26_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_20_26_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 204, 212) */
		reached[3][204] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_20_26_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 154: // STATE 205 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (238:0:2 - 1)
		IfNotBlocked
		reached[3][205] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(238, 206, 238) */
		reached[3][206] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_20_26_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_20_26_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_20_26_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(238, 207, 238) */
		reached[3][207] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_20_26_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_20_26_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 211, 238) */
		reached[3][211] = 1;
		;
		/* merge: .(goto)(0, 216, 238) */
		reached[3][216] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 155: // STATE 209 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][209] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 156: // STATE 217 - resume_suspend.pml:208 - [prio = 0] (0:233:6 - 1)
		IfNotBlocked
		reached[3][217] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_162_prio);
		((P3 *)_this)->_7_20_26_162_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_20_26_162_prio));
#endif
		;
		/* merge: top_task = 0(233, 218, 233) */
		reached[3][218] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_162_top_task);
		((P3 *)_this)->_7_20_26_162_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_20_26_162_top_task));
#endif
		;
		/* merge: found = 0(233, 219, 233) */
		reached[3][219] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_20_26_162_found);
		((P3 *)_this)->_7_20_26_162_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_20_26_162_found));
#endif
		;
		/* merge: prio = 0(233, 220, 233) */
		reached[3][220] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_20_26_162_prio);
		((P3 *)_this)->_7_20_26_162_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_20_26_162_prio));
#endif
		;
		/* merge: top_task = 0(233, 221, 233) */
		reached[3][221] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_20_26_162_top_task);
		((P3 *)_this)->_7_20_26_162_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_20_26_162_top_task));
#endif
		;
		/* merge: found = 0(233, 222, 233) */
		reached[3][222] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_20_26_162_found);
		((P3 *)_this)->_7_20_26_162_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_20_26_162_found));
#endif
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[3][234] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 157: // STATE 223 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][223] = 1;
		if (!(((((int)((P3 *)_this)->_7_20_26_162_prio)<4)&& !(((int)((P3 *)_this)->_7_20_26_162_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 158: // STATE 224 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (233:0:2 - 1)
		IfNotBlocked
		reached[3][224] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_20_26_162_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](233, 225, 233) */
		reached[3][225] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_162_top_task);
		((P3 *)_this)->_7_20_26_162_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_20_26_162_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_20_26_162_top_task));
#endif
		;
		/* merge: found = 1(233, 226, 233) */
		reached[3][226] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_162_found);
		((P3 *)_this)->_7_20_26_162_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_20_26_162_found));
#endif
		;
		/* merge: .(goto)(0, 230, 233) */
		reached[3][230] = 1;
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[3][234] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 159: // STATE 228 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][228] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_20_26_162_prio);
		((P3 *)_this)->_7_20_26_162_prio = (((int)((P3 *)_this)->_7_20_26_162_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_20_26_162_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 160: // STATE 231 - resume_suspend.pml:227 - [(((prio>=4)||found))] (256:0:3 - 1)
		IfNotBlocked
		reached[3][231] = 1;
		if (!(((((int)((P3 *)_this)->_7_20_26_162_prio)>=4)||((int)((P3 *)_this)->_7_20_26_162_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_20_26_162_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_20_26_162_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_162_found = 0;
		/* merge: goto :b132(256, 232, 256) */
		reached[3][232] = 1;
		;
		/* merge: newTask = top_task(256, 236, 256) */
		reached[3][236] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_20_26_162_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[3][237] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_20_26_162_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 161: // STATE 236 - resume_suspend.pml:231 - [newTask = top_task] (0:256:2 - 3)
		IfNotBlocked
		reached[3][236] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_20_26_162_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[3][237] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_20_26_162_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 162: // STATE 239 - resume_suspend.pml:177 - [deq_idx = 0] (0:246:2 - 1)
		IfNotBlocked
		reached[3][239] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_20_26_163_deq_idx);
		((P3 *)_this)->_7_20_26_163_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_20_26_163_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(246, 240, 246) */
		reached[3][240] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_163_deq_idx);
		((P3 *)_this)->_7_20_26_163_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_20_26_163_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[3][247] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 163: // STATE 241 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (246:0:2 - 1)
		IfNotBlocked
		reached[3][241] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_163_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](246, 242, 246) */
		reached[3][242] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_20_26_163_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_20_26_163_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_20_26_163_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_20_26_163_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(246, 243, 246) */
		reached[3][243] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_20_26_163_deq_idx);
		((P3 *)_this)->_7_20_26_163_deq_idx = (((int)((P3 *)_this)->_7_20_26_163_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_20_26_163_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[3][247] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 164: // STATE 244 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][244] = 1;
		if (!((((int)((P3 *)_this)->_7_20_26_163_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_20_26_163_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_20_26_163_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_20_26_163_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 165: // STATE 249 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (260:0:4 - 1)
		IfNotBlocked
		reached[3][249] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(260, 250, 260) */
		reached[3][250] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(260, 251, 260) */
		reached[3][251] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(260, 255, 260) */
		reached[3][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[3][257] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[3][258] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 166: // STATE 253 - resume_suspend.pml:192 - [(1)] (260:0:2 - 1)
		IfNotBlocked
		reached[3][253] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(260, 255, 260) */
		reached[3][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[3][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[3][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 167: // STATE 257 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:260:2 - 3)
		IfNotBlocked
		reached[3][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[3][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 168: // STATE 259 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][259] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 169: // STATE 263 - resume_suspend.pml:518 - [((EP==4))] (392:0:1 - 1)
		IfNotBlocked
		reached[3][263] = 1;
		if (!((((int)now.EP)==4)))
			continue;
		/* merge: work = ((work+(counter*4))%100)(0, 264, 392) */
		reached[3][264] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->work);
		((P3 *)_this)->work = ((((int)((P3 *)_this)->work)+(((int)((P3 *)_this)->counter)*4))%100);
#ifdef VAR_RANGES
		logval("Process4:work", ((int)((P3 *)_this)->work));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 170: // STATE 265 - resume_suspend.pml:401 - [interrupted_task = 0] (0:273:6 - 1)
		IfNotBlocked
		reached[3][265] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_interrupted_task);
		((P3 *)_this)->_7_21_27_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_21_27_interrupted_task));
#endif
		;
		/* merge: idx = 0(273, 266, 273) */
		reached[3][266] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_idx);
		((P3 *)_this)->_7_21_27_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_21_27_idx));
#endif
		;
		/* merge: taskId = 0(273, 267, 273) */
		reached[3][267] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_21_27_taskId);
		((P3 *)_this)->_7_21_27_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_21_27_taskId));
#endif
		;
		/* merge: needResched = 0(273, 268, 273) */
		reached[3][268] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_21_27_needResched);
		((P3 *)_this)->_7_21_27_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_21_27_needResched));
#endif
		;
		/* merge: interrupted_task = 0(273, 269, 273) */
		reached[3][269] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_21_27_interrupted_task);
		((P3 *)_this)->_7_21_27_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_21_27_interrupted_task));
#endif
		;
		/* merge: needResched = 0(273, 270, 273) */
		reached[3][270] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_21_27_needResched);
		((P3 *)_this)->_7_21_27_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_21_27_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 171: // STATE 271 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:330:4 - 1)
		IfNotBlocked
		reached[3][271] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(330, 272, 330) */
		reached[3][272] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(330, 274, 330) */
		reached[3][274] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(330, 275, 330) */
		reached[3][275] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_21_27_idx);
		((P3 *)_this)->_7_21_27_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_21_27_idx));
#endif
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[3][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 172: // STATE 276 - resume_suspend.pml:416 - [((idx<sortLink.count))] (326:0:1 - 1)
		IfNotBlocked
		reached[3][276] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 277, 326) */
		reached[3][277] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_21_27_taskId);
		((P3 *)_this)->_7_21_27_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_21_27_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_21_27_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 173: // STATE 278 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (314:0:2 - 1)
		IfNotBlocked
		reached[3][278] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(314, 279, 314) */
		reached[3][279] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_21_27_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(314, 280, 314) */
		reached[3][280] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_21_27_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 174: // STATE 281 - resume_suspend.pml:81 - [removePos = 0] (0:295:5 - 1)
		IfNotBlocked
		reached[3][281] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_166_removePos);
		((P3 *)_this)->_7_21_27_166_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_21_27_166_removePos));
#endif
		;
		/* merge: found = 0(295, 282, 295) */
		reached[3][282] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_166_found);
		((P3 *)_this)->_7_21_27_166_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_21_27_166_found));
#endif
		;
		/* merge: shiftIdx = 0(295, 283, 295) */
		reached[3][283] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_21_27_166_shiftIdx);
		((P3 *)_this)->_7_21_27_166_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_21_27_166_shiftIdx));
#endif
		;
		/* merge: removePos = 0(295, 284, 295) */
		reached[3][284] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_21_27_166_removePos);
		((P3 *)_this)->_7_21_27_166_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_21_27_166_removePos));
#endif
		;
		/* merge: found = 0(295, 285, 295) */
		reached[3][285] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_21_27_166_found);
		((P3 *)_this)->_7_21_27_166_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_21_27_166_found));
#endif
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[3][296] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 175: // STATE 286 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][286] = 1;
		if (!(((((int)((P3 *)_this)->_7_21_27_166_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_21_27_166_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 176: // STATE 287 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (295:0:1 - 1)
		IfNotBlocked
		reached[3][287] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_21_27_166_removePos), 8) ])==((int)((P3 *)_this)->_7_21_27_taskId))))
			continue;
		/* merge: found = 1(0, 288, 295) */
		reached[3][288] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_21_27_166_found);
		((P3 *)_this)->_7_21_27_166_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_21_27_166_found));
#endif
		;
		/* merge: .(goto)(0, 292, 295) */
		reached[3][292] = 1;
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[3][296] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 177: // STATE 290 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][290] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_21_27_166_removePos);
		((P3 *)_this)->_7_21_27_166_removePos = (((int)((P3 *)_this)->_7_21_27_166_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_21_27_166_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 178: // STATE 298 - resume_suspend.pml:100 - [((found==1))] (305:0:2 - 1)
		IfNotBlocked
		reached[3][298] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_166_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_21_27_166_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_21_27_166_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_166_found = 0;
		/* merge: shiftIdx = removePos(0, 299, 305) */
		reached[3][299] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_166_shiftIdx);
		((P3 *)_this)->_7_21_27_166_shiftIdx = ((int)((P3 *)_this)->_7_21_27_166_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_21_27_166_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[3][306] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 179: // STATE 300 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (305:0:2 - 1)
		IfNotBlocked
		reached[3][300] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_166_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](305, 301, 305) */
		reached[3][301] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_21_27_166_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_21_27_166_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_21_27_166_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_21_27_166_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(305, 302, 305) */
		reached[3][302] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_166_shiftIdx);
		((P3 *)_this)->_7_21_27_166_shiftIdx = (((int)((P3 *)_this)->_7_21_27_166_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_21_27_166_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[3][306] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 180: // STATE 303 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (322:0:3 - 1)
		IfNotBlocked
		reached[3][303] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_166_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_21_27_166_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_21_27_166_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_166_shiftIdx = 0;
		/* merge: goto :b136(322, 304, 322) */
		reached[3][304] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(322, 308, 322) */
		reached[3][308] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[3][309] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[3][313] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 181: // STATE 308 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:322:2 - 3)
		IfNotBlocked
		reached[3][308] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[3][309] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[3][313] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 182: // STATE 315 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (330:0:4 - 1)
		IfNotBlocked
		reached[3][315] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(330, 316, 330) */
		reached[3][316] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_21_27_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_21_27_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_21_27_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(330, 317, 330) */
		reached[3][317] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_21_27_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(330, 321, 330) */
		reached[3][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[3][323] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_21_27_needResched);
		((P3 *)_this)->_7_21_27_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_21_27_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_21_27_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[3][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[3][331] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 183: // STATE 319 - resume_suspend.pml:140 - [assert(0)] (0:330:2 - 1)
		IfNotBlocked
		reached[3][319] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(330, 321, 330) */
		reached[3][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[3][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_needResched);
		((P3 *)_this)->_7_21_27_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_21_27_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_21_27_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[3][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[3][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 184: // STATE 323 - resume_suspend.pml:433 - [needResched = 1] (0:330:2 - 3)
		IfNotBlocked
		reached[3][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_needResched);
		((P3 *)_this)->_7_21_27_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_21_27_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_21_27_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[3][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[3][331] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 185: // STATE 325 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][325] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_21_27_idx);
		((P3 *)_this)->_7_21_27_idx = (((int)((P3 *)_this)->_7_21_27_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_21_27_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 186: // STATE 328 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (346:0:2 - 1)
		IfNotBlocked
		reached[3][328] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_21_27_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_21_27_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_idx = 0;
		/* merge: goto :b134(346, 329, 346) */
		reached[3][329] = 1;
		;
		/* merge: interrupted_task = EP(346, 333, 346) */
		reached[3][333] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_interrupted_task);
		((P3 *)_this)->_7_21_27_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_21_27_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 187: // STATE 333 - resume_suspend.pml:442 - [interrupted_task = EP] (0:346:1 - 3)
		IfNotBlocked
		reached[3][333] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_21_27_interrupted_task);
		((P3 *)_this)->_7_21_27_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_21_27_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 188: // STATE 334 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (343:0:1 - 1)
		IfNotBlocked
		reached[3][334] = 1;
		if (!((((((int)((P3 *)_this)->_7_21_27_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_21_27_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 335, 343) */
		reached[3][335] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_21_27_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 189: // STATE 336 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (369:0:2 - 1)
		IfNotBlocked
		reached[3][336] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(369, 337, 369) */
		reached[3][337] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_21_27_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_21_27_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_21_27_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(369, 338, 369) */
		reached[3][338] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_21_27_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_21_27_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 342, 369) */
		reached[3][342] = 1;
		;
		/* merge: .(goto)(0, 347, 369) */
		reached[3][347] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 190: // STATE 340 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][340] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 191: // STATE 348 - resume_suspend.pml:208 - [prio = 0] (0:364:6 - 1)
		IfNotBlocked
		reached[3][348] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_169_prio);
		((P3 *)_this)->_7_21_27_169_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_21_27_169_prio));
#endif
		;
		/* merge: top_task = 0(364, 349, 364) */
		reached[3][349] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_169_top_task);
		((P3 *)_this)->_7_21_27_169_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_21_27_169_top_task));
#endif
		;
		/* merge: found = 0(364, 350, 364) */
		reached[3][350] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_21_27_169_found);
		((P3 *)_this)->_7_21_27_169_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_21_27_169_found));
#endif
		;
		/* merge: prio = 0(364, 351, 364) */
		reached[3][351] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_21_27_169_prio);
		((P3 *)_this)->_7_21_27_169_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_21_27_169_prio));
#endif
		;
		/* merge: top_task = 0(364, 352, 364) */
		reached[3][352] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_21_27_169_top_task);
		((P3 *)_this)->_7_21_27_169_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_21_27_169_top_task));
#endif
		;
		/* merge: found = 0(364, 353, 364) */
		reached[3][353] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_21_27_169_found);
		((P3 *)_this)->_7_21_27_169_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_21_27_169_found));
#endif
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[3][365] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 192: // STATE 354 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][354] = 1;
		if (!(((((int)((P3 *)_this)->_7_21_27_169_prio)<4)&& !(((int)((P3 *)_this)->_7_21_27_169_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 193: // STATE 355 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (364:0:2 - 1)
		IfNotBlocked
		reached[3][355] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_21_27_169_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](364, 356, 364) */
		reached[3][356] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_169_top_task);
		((P3 *)_this)->_7_21_27_169_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_21_27_169_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_21_27_169_top_task));
#endif
		;
		/* merge: found = 1(364, 357, 364) */
		reached[3][357] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_169_found);
		((P3 *)_this)->_7_21_27_169_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_21_27_169_found));
#endif
		;
		/* merge: .(goto)(0, 361, 364) */
		reached[3][361] = 1;
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[3][365] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 194: // STATE 359 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][359] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_21_27_169_prio);
		((P3 *)_this)->_7_21_27_169_prio = (((int)((P3 *)_this)->_7_21_27_169_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_21_27_169_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 195: // STATE 362 - resume_suspend.pml:227 - [(((prio>=4)||found))] (387:0:3 - 1)
		IfNotBlocked
		reached[3][362] = 1;
		if (!(((((int)((P3 *)_this)->_7_21_27_169_prio)>=4)||((int)((P3 *)_this)->_7_21_27_169_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_21_27_169_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_21_27_169_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_169_found = 0;
		/* merge: goto :b137(387, 363, 387) */
		reached[3][363] = 1;
		;
		/* merge: newTask = top_task(387, 367, 387) */
		reached[3][367] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_21_27_169_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[3][368] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_21_27_169_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 196: // STATE 367 - resume_suspend.pml:231 - [newTask = top_task] (0:387:2 - 3)
		IfNotBlocked
		reached[3][367] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_21_27_169_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[3][368] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_21_27_169_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 197: // STATE 370 - resume_suspend.pml:177 - [deq_idx = 0] (0:377:2 - 1)
		IfNotBlocked
		reached[3][370] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_21_27_170_deq_idx);
		((P3 *)_this)->_7_21_27_170_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_21_27_170_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(377, 371, 377) */
		reached[3][371] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_170_deq_idx);
		((P3 *)_this)->_7_21_27_170_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_21_27_170_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[3][378] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 198: // STATE 372 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (377:0:2 - 1)
		IfNotBlocked
		reached[3][372] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_170_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](377, 373, 377) */
		reached[3][373] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_21_27_170_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_21_27_170_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_21_27_170_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_21_27_170_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(377, 374, 377) */
		reached[3][374] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_21_27_170_deq_idx);
		((P3 *)_this)->_7_21_27_170_deq_idx = (((int)((P3 *)_this)->_7_21_27_170_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_21_27_170_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[3][378] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 199: // STATE 375 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][375] = 1;
		if (!((((int)((P3 *)_this)->_7_21_27_170_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_21_27_170_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_21_27_170_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_21_27_170_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 200: // STATE 380 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (391:0:4 - 1)
		IfNotBlocked
		reached[3][380] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(391, 381, 391) */
		reached[3][381] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(391, 382, 391) */
		reached[3][382] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(391, 386, 391) */
		reached[3][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[3][388] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[3][389] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 201: // STATE 384 - resume_suspend.pml:192 - [(1)] (391:0:2 - 1)
		IfNotBlocked
		reached[3][384] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(391, 386, 391) */
		reached[3][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[3][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[3][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 202: // STATE 388 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:391:2 - 3)
		IfNotBlocked
		reached[3][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[3][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 203: // STATE 390 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][390] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 204: // STATE 394 - resume_suspend.pml:519 - [((EP==4))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][394] = 1;
		if (!((((int)now.EP)==4)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 205: // STATE 395 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[3][395] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_currentTask);
		((P3 *)_this)->_7_22_28_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process4:currentTask", ((int)((P3 *)_this)->_7_22_28_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 206: // STATE 396 - resume_suspend.pml:377 - [((((2>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][396] = 1;
		if (!((((2>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 207: // STATE 397 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:411:6 - 1)
		IfNotBlocked
		reached[3][397] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(411, 398, 411) */
		reached[3][398] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(411, 400, 411) */
		reached[3][400] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_28_currentTask);
		((P3 *)_this)->_7_22_28_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:currentTask", ((int)((P3 *)_this)->_7_22_28_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(411, 401, 411) */
		reached[3][401] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_currentTask), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_22_28_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process4:currentTask].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+2)(411, 402, 411) */
		reached[3][402] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P3 *)_this)->_7_22_28_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+2);
#ifdef VAR_RANGES
		logval("tcb[Process4:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 2(411, 403, 411) */
		reached[3][403] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_22_28_currentTask, 5) ].delayTicks = 2;
#ifdef VAR_RANGES
		logval("tcb[Process4:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 208: // STATE 404 - resume_suspend.pml:70 - [((sortLink.count<8))] (539:0:2 - 1)
		IfNotBlocked
		reached[3][404] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(539, 405, 539) */
		reached[3][405] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P3 *)_this)->_7_22_28_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(539, 406, 539) */
		reached[3][406] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 410, 539) */
		reached[3][410] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 209: // STATE 408 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][408] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 210: // STATE 412 - resume_suspend.pml:401 - [interrupted_task = 0] (0:420:6 - 1)
		IfNotBlocked
		reached[3][412] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_interrupted_task);
		((P3 *)_this)->_7_22_28_174_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_28_174_interrupted_task));
#endif
		;
		/* merge: idx = 0(420, 413, 420) */
		reached[3][413] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_idx);
		((P3 *)_this)->_7_22_28_174_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_22_28_174_idx));
#endif
		;
		/* merge: taskId = 0(420, 414, 420) */
		reached[3][414] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_28_174_taskId);
		((P3 *)_this)->_7_22_28_174_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_22_28_174_taskId));
#endif
		;
		/* merge: needResched = 0(420, 415, 420) */
		reached[3][415] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_28_174_needResched);
		((P3 *)_this)->_7_22_28_174_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_28_174_needResched));
#endif
		;
		/* merge: interrupted_task = 0(420, 416, 420) */
		reached[3][416] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_22_28_174_interrupted_task);
		((P3 *)_this)->_7_22_28_174_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_28_174_interrupted_task));
#endif
		;
		/* merge: needResched = 0(420, 417, 420) */
		reached[3][417] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_22_28_174_needResched);
		((P3 *)_this)->_7_22_28_174_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_28_174_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 211: // STATE 418 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:477:4 - 1)
		IfNotBlocked
		reached[3][418] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(477, 419, 477) */
		reached[3][419] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(477, 421, 477) */
		reached[3][421] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(477, 422, 477) */
		reached[3][422] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_28_174_idx);
		((P3 *)_this)->_7_22_28_174_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_22_28_174_idx));
#endif
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[3][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 212: // STATE 423 - resume_suspend.pml:416 - [((idx<sortLink.count))] (473:0:1 - 1)
		IfNotBlocked
		reached[3][423] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 424, 473) */
		reached[3][424] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_174_taskId);
		((P3 *)_this)->_7_22_28_174_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_28_174_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_22_28_174_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 213: // STATE 425 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (461:0:2 - 1)
		IfNotBlocked
		reached[3][425] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(461, 426, 461) */
		reached[3][426] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_22_28_174_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(461, 427, 461) */
		reached[3][427] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_22_28_174_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 214: // STATE 428 - resume_suspend.pml:81 - [removePos = 0] (0:442:5 - 1)
		IfNotBlocked
		reached[3][428] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_44_removePos);
		((P3 *)_this)->_7_22_28_174_44_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_22_28_174_44_removePos));
#endif
		;
		/* merge: found = 0(442, 429, 442) */
		reached[3][429] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_44_found);
		((P3 *)_this)->_7_22_28_174_44_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_28_174_44_found));
#endif
		;
		/* merge: shiftIdx = 0(442, 430, 442) */
		reached[3][430] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx);
		((P3 *)_this)->_7_22_28_174_44_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx));
#endif
		;
		/* merge: removePos = 0(442, 431, 442) */
		reached[3][431] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_28_174_44_removePos);
		((P3 *)_this)->_7_22_28_174_44_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_22_28_174_44_removePos));
#endif
		;
		/* merge: found = 0(442, 432, 442) */
		reached[3][432] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_22_28_174_44_found);
		((P3 *)_this)->_7_22_28_174_44_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_28_174_44_found));
#endif
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[3][443] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 215: // STATE 433 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][433] = 1;
		if (!(((((int)((P3 *)_this)->_7_22_28_174_44_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_22_28_174_44_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 216: // STATE 434 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (442:0:1 - 1)
		IfNotBlocked
		reached[3][434] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_28_174_44_removePos), 8) ])==((int)((P3 *)_this)->_7_22_28_174_taskId))))
			continue;
		/* merge: found = 1(0, 435, 442) */
		reached[3][435] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_174_44_found);
		((P3 *)_this)->_7_22_28_174_44_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_28_174_44_found));
#endif
		;
		/* merge: .(goto)(0, 439, 442) */
		reached[3][439] = 1;
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[3][443] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 217: // STATE 437 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][437] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_174_44_removePos);
		((P3 *)_this)->_7_22_28_174_44_removePos = (((int)((P3 *)_this)->_7_22_28_174_44_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_22_28_174_44_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 218: // STATE 445 - resume_suspend.pml:100 - [((found==1))] (452:0:2 - 1)
		IfNotBlocked
		reached[3][445] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_44_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_28_174_44_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_28_174_44_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_44_found = 0;
		/* merge: shiftIdx = removePos(0, 446, 452) */
		reached[3][446] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx);
		((P3 *)_this)->_7_22_28_174_44_shiftIdx = ((int)((P3 *)_this)->_7_22_28_174_44_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[3][453] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 219: // STATE 447 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (452:0:2 - 1)
		IfNotBlocked
		reached[3][447] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](452, 448, 452) */
		reached[3][448] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_22_28_174_44_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(452, 449, 452) */
		reached[3][449] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx);
		((P3 *)_this)->_7_22_28_174_44_shiftIdx = (((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[3][453] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 220: // STATE 450 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (469:0:3 - 1)
		IfNotBlocked
		reached[3][450] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_44_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_28_174_44_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_28_174_44_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_44_shiftIdx = 0;
		/* merge: goto :b141(469, 451, 469) */
		reached[3][451] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(469, 455, 469) */
		reached[3][455] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[3][456] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[3][460] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 221: // STATE 455 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:469:2 - 3)
		IfNotBlocked
		reached[3][455] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[3][456] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[3][460] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 222: // STATE 462 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (477:0:4 - 1)
		IfNotBlocked
		reached[3][462] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(477, 463, 477) */
		reached[3][463] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_28_174_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_28_174_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_22_28_174_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(477, 464, 477) */
		reached[3][464] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_28_174_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(477, 468, 477) */
		reached[3][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[3][470] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_28_174_needResched);
		((P3 *)_this)->_7_22_28_174_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_28_174_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_22_28_174_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[3][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[3][478] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 223: // STATE 466 - resume_suspend.pml:140 - [assert(0)] (0:477:2 - 1)
		IfNotBlocked
		reached[3][466] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(477, 468, 477) */
		reached[3][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[3][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_needResched);
		((P3 *)_this)->_7_22_28_174_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_28_174_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_22_28_174_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[3][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[3][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 224: // STATE 470 - resume_suspend.pml:433 - [needResched = 1] (0:477:2 - 3)
		IfNotBlocked
		reached[3][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_needResched);
		((P3 *)_this)->_7_22_28_174_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_28_174_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_22_28_174_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[3][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[3][478] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 225: // STATE 472 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][472] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_174_idx);
		((P3 *)_this)->_7_22_28_174_idx = (((int)((P3 *)_this)->_7_22_28_174_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_22_28_174_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 226: // STATE 475 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (493:0:2 - 1)
		IfNotBlocked
		reached[3][475] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_28_174_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_28_174_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_idx = 0;
		/* merge: goto :b139(493, 476, 493) */
		reached[3][476] = 1;
		;
		/* merge: interrupted_task = EP(493, 480, 493) */
		reached[3][480] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_interrupted_task);
		((P3 *)_this)->_7_22_28_174_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_28_174_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 227: // STATE 480 - resume_suspend.pml:442 - [interrupted_task = EP] (0:493:1 - 3)
		IfNotBlocked
		reached[3][480] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_174_interrupted_task);
		((P3 *)_this)->_7_22_28_174_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_28_174_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 228: // STATE 481 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (490:0:1 - 1)
		IfNotBlocked
		reached[3][481] = 1;
		if (!((((((int)((P3 *)_this)->_7_22_28_174_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_22_28_174_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 482, 490) */
		reached[3][482] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_22_28_174_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 229: // STATE 483 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (516:0:2 - 1)
		IfNotBlocked
		reached[3][483] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(516, 484, 516) */
		reached[3][484] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_28_174_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_28_174_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_22_28_174_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(516, 485, 516) */
		reached[3][485] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_28_174_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_28_174_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 489, 516) */
		reached[3][489] = 1;
		;
		/* merge: .(goto)(0, 494, 516) */
		reached[3][494] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 230: // STATE 487 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][487] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 231: // STATE 495 - resume_suspend.pml:208 - [prio = 0] (0:511:6 - 1)
		IfNotBlocked
		reached[3][495] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_47_prio);
		((P3 *)_this)->_7_22_28_174_47_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_22_28_174_47_prio));
#endif
		;
		/* merge: top_task = 0(511, 496, 511) */
		reached[3][496] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_47_top_task);
		((P3 *)_this)->_7_22_28_174_47_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_22_28_174_47_top_task));
#endif
		;
		/* merge: found = 0(511, 497, 511) */
		reached[3][497] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_28_174_47_found);
		((P3 *)_this)->_7_22_28_174_47_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_28_174_47_found));
#endif
		;
		/* merge: prio = 0(511, 498, 511) */
		reached[3][498] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_28_174_47_prio);
		((P3 *)_this)->_7_22_28_174_47_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_22_28_174_47_prio));
#endif
		;
		/* merge: top_task = 0(511, 499, 511) */
		reached[3][499] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_22_28_174_47_top_task);
		((P3 *)_this)->_7_22_28_174_47_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_22_28_174_47_top_task));
#endif
		;
		/* merge: found = 0(511, 500, 511) */
		reached[3][500] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_22_28_174_47_found);
		((P3 *)_this)->_7_22_28_174_47_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_28_174_47_found));
#endif
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[3][512] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 232: // STATE 501 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][501] = 1;
		if (!(((((int)((P3 *)_this)->_7_22_28_174_47_prio)<4)&& !(((int)((P3 *)_this)->_7_22_28_174_47_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 233: // STATE 502 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (511:0:2 - 1)
		IfNotBlocked
		reached[3][502] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_22_28_174_47_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](511, 503, 511) */
		reached[3][503] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_47_top_task);
		((P3 *)_this)->_7_22_28_174_47_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_22_28_174_47_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_22_28_174_47_top_task));
#endif
		;
		/* merge: found = 1(511, 504, 511) */
		reached[3][504] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_47_found);
		((P3 *)_this)->_7_22_28_174_47_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_28_174_47_found));
#endif
		;
		/* merge: .(goto)(0, 508, 511) */
		reached[3][508] = 1;
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[3][512] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 234: // STATE 506 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][506] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_28_174_47_prio);
		((P3 *)_this)->_7_22_28_174_47_prio = (((int)((P3 *)_this)->_7_22_28_174_47_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_22_28_174_47_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 235: // STATE 509 - resume_suspend.pml:227 - [(((prio>=4)||found))] (534:0:3 - 1)
		IfNotBlocked
		reached[3][509] = 1;
		if (!(((((int)((P3 *)_this)->_7_22_28_174_47_prio)>=4)||((int)((P3 *)_this)->_7_22_28_174_47_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_28_174_47_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_28_174_47_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_47_found = 0;
		/* merge: goto :b142(534, 510, 534) */
		reached[3][510] = 1;
		;
		/* merge: newTask = top_task(534, 514, 534) */
		reached[3][514] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_22_28_174_47_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[3][515] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_22_28_174_47_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 236: // STATE 514 - resume_suspend.pml:231 - [newTask = top_task] (0:534:2 - 3)
		IfNotBlocked
		reached[3][514] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_22_28_174_47_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[3][515] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_22_28_174_47_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 237: // STATE 517 - resume_suspend.pml:177 - [deq_idx = 0] (0:524:2 - 1)
		IfNotBlocked
		reached[3][517] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_28_174_48_deq_idx);
		((P3 *)_this)->_7_22_28_174_48_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_22_28_174_48_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(524, 518, 524) */
		reached[3][518] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_48_deq_idx);
		((P3 *)_this)->_7_22_28_174_48_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_22_28_174_48_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[3][525] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 238: // STATE 519 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (524:0:2 - 1)
		IfNotBlocked
		reached[3][519] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_48_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](524, 520, 524) */
		reached[3][520] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_22_28_174_48_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_22_28_174_48_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_22_28_174_48_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_22_28_174_48_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(524, 521, 524) */
		reached[3][521] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_28_174_48_deq_idx);
		((P3 *)_this)->_7_22_28_174_48_deq_idx = (((int)((P3 *)_this)->_7_22_28_174_48_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_22_28_174_48_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[3][525] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 239: // STATE 522 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][522] = 1;
		if (!((((int)((P3 *)_this)->_7_22_28_174_48_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_28_174_48_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_22_28_174_48_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_28_174_48_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 240: // STATE 527 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (538:0:4 - 1)
		IfNotBlocked
		reached[3][527] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(538, 528, 538) */
		reached[3][528] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(538, 529, 538) */
		reached[3][529] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(538, 533, 538) */
		reached[3][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[3][535] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[3][536] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 241: // STATE 531 - resume_suspend.pml:192 - [(1)] (538:0:2 - 1)
		IfNotBlocked
		reached[3][531] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(538, 533, 538) */
		reached[3][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[3][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[3][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 242: // STATE 535 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:538:2 - 3)
		IfNotBlocked
		reached[3][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[3][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 243: // STATE 537 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][537] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 244: // STATE 540 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][540] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 245: // STATE 547 - resume_suspend.pml:401 - [interrupted_task = 0] (0:555:6 - 1)
		IfNotBlocked
		reached[3][547] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_interrupted_task);
		((P3 *)_this)->_7_22_29_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_29_interrupted_task));
#endif
		;
		/* merge: idx = 0(555, 548, 555) */
		reached[3][548] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_idx);
		((P3 *)_this)->_7_22_29_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_22_29_idx));
#endif
		;
		/* merge: taskId = 0(555, 549, 555) */
		reached[3][549] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_29_taskId);
		((P3 *)_this)->_7_22_29_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_22_29_taskId));
#endif
		;
		/* merge: needResched = 0(555, 550, 555) */
		reached[3][550] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_29_needResched);
		((P3 *)_this)->_7_22_29_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_29_needResched));
#endif
		;
		/* merge: interrupted_task = 0(555, 551, 555) */
		reached[3][551] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_22_29_interrupted_task);
		((P3 *)_this)->_7_22_29_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_29_interrupted_task));
#endif
		;
		/* merge: needResched = 0(555, 552, 555) */
		reached[3][552] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_22_29_needResched);
		((P3 *)_this)->_7_22_29_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_29_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 246: // STATE 553 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:612:4 - 1)
		IfNotBlocked
		reached[3][553] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(612, 554, 612) */
		reached[3][554] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(612, 556, 612) */
		reached[3][556] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(612, 557, 612) */
		reached[3][557] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_29_idx);
		((P3 *)_this)->_7_22_29_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_22_29_idx));
#endif
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[3][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 247: // STATE 558 - resume_suspend.pml:416 - [((idx<sortLink.count))] (608:0:1 - 1)
		IfNotBlocked
		reached[3][558] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 559, 608) */
		reached[3][559] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_29_taskId);
		((P3 *)_this)->_7_22_29_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_29_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_22_29_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 248: // STATE 560 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (596:0:2 - 1)
		IfNotBlocked
		reached[3][560] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(596, 561, 596) */
		reached[3][561] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_22_29_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(596, 562, 596) */
		reached[3][562] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_22_29_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 249: // STATE 563 - resume_suspend.pml:81 - [removePos = 0] (0:577:5 - 1)
		IfNotBlocked
		reached[3][563] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_177_removePos);
		((P3 *)_this)->_7_22_29_177_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_22_29_177_removePos));
#endif
		;
		/* merge: found = 0(577, 564, 577) */
		reached[3][564] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_177_found);
		((P3 *)_this)->_7_22_29_177_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_29_177_found));
#endif
		;
		/* merge: shiftIdx = 0(577, 565, 577) */
		reached[3][565] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_29_177_shiftIdx);
		((P3 *)_this)->_7_22_29_177_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_22_29_177_shiftIdx));
#endif
		;
		/* merge: removePos = 0(577, 566, 577) */
		reached[3][566] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_29_177_removePos);
		((P3 *)_this)->_7_22_29_177_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_22_29_177_removePos));
#endif
		;
		/* merge: found = 0(577, 567, 577) */
		reached[3][567] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_22_29_177_found);
		((P3 *)_this)->_7_22_29_177_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_29_177_found));
#endif
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[3][578] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 250: // STATE 568 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][568] = 1;
		if (!(((((int)((P3 *)_this)->_7_22_29_177_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_22_29_177_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 251: // STATE 569 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (577:0:1 - 1)
		IfNotBlocked
		reached[3][569] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_29_177_removePos), 8) ])==((int)((P3 *)_this)->_7_22_29_taskId))))
			continue;
		/* merge: found = 1(0, 570, 577) */
		reached[3][570] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_29_177_found);
		((P3 *)_this)->_7_22_29_177_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_29_177_found));
#endif
		;
		/* merge: .(goto)(0, 574, 577) */
		reached[3][574] = 1;
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[3][578] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 252: // STATE 572 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][572] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_29_177_removePos);
		((P3 *)_this)->_7_22_29_177_removePos = (((int)((P3 *)_this)->_7_22_29_177_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_22_29_177_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 253: // STATE 580 - resume_suspend.pml:100 - [((found==1))] (587:0:2 - 1)
		IfNotBlocked
		reached[3][580] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_177_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_29_177_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_29_177_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_177_found = 0;
		/* merge: shiftIdx = removePos(0, 581, 587) */
		reached[3][581] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_177_shiftIdx);
		((P3 *)_this)->_7_22_29_177_shiftIdx = ((int)((P3 *)_this)->_7_22_29_177_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_22_29_177_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[3][588] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 254: // STATE 582 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (587:0:2 - 1)
		IfNotBlocked
		reached[3][582] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_177_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](587, 583, 587) */
		reached[3][583] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_29_177_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_22_29_177_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_22_29_177_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_22_29_177_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(587, 584, 587) */
		reached[3][584] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_177_shiftIdx);
		((P3 *)_this)->_7_22_29_177_shiftIdx = (((int)((P3 *)_this)->_7_22_29_177_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_22_29_177_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[3][588] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 255: // STATE 585 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (604:0:3 - 1)
		IfNotBlocked
		reached[3][585] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_177_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_29_177_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_29_177_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_177_shiftIdx = 0;
		/* merge: goto :b146(604, 586, 604) */
		reached[3][586] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(604, 590, 604) */
		reached[3][590] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[3][591] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[3][595] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 256: // STATE 590 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:604:2 - 3)
		IfNotBlocked
		reached[3][590] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[3][591] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[3][595] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 257: // STATE 597 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (612:0:4 - 1)
		IfNotBlocked
		reached[3][597] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(612, 598, 612) */
		reached[3][598] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_29_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_29_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_22_29_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(612, 599, 612) */
		reached[3][599] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_29_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(612, 603, 612) */
		reached[3][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[3][605] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_29_needResched);
		((P3 *)_this)->_7_22_29_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_29_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_22_29_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[3][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[3][613] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 258: // STATE 601 - resume_suspend.pml:140 - [assert(0)] (0:612:2 - 1)
		IfNotBlocked
		reached[3][601] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(612, 603, 612) */
		reached[3][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[3][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_needResched);
		((P3 *)_this)->_7_22_29_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_29_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_22_29_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[3][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[3][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 259: // STATE 605 - resume_suspend.pml:433 - [needResched = 1] (0:612:2 - 3)
		IfNotBlocked
		reached[3][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_needResched);
		((P3 *)_this)->_7_22_29_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_22_29_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_22_29_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[3][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[3][613] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 260: // STATE 607 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][607] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_29_idx);
		((P3 *)_this)->_7_22_29_idx = (((int)((P3 *)_this)->_7_22_29_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_22_29_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 261: // STATE 610 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (628:0:2 - 1)
		IfNotBlocked
		reached[3][610] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_29_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_29_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_idx = 0;
		/* merge: goto :b144(628, 611, 628) */
		reached[3][611] = 1;
		;
		/* merge: interrupted_task = EP(628, 615, 628) */
		reached[3][615] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_interrupted_task);
		((P3 *)_this)->_7_22_29_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_29_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 262: // STATE 615 - resume_suspend.pml:442 - [interrupted_task = EP] (0:628:1 - 3)
		IfNotBlocked
		reached[3][615] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_29_interrupted_task);
		((P3 *)_this)->_7_22_29_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_22_29_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 263: // STATE 616 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (625:0:1 - 1)
		IfNotBlocked
		reached[3][616] = 1;
		if (!((((((int)((P3 *)_this)->_7_22_29_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_22_29_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 617, 625) */
		reached[3][617] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_22_29_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 264: // STATE 618 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (651:0:2 - 1)
		IfNotBlocked
		reached[3][618] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(651, 619, 651) */
		reached[3][619] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_29_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_29_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_22_29_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(651, 620, 651) */
		reached[3][620] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_22_29_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_22_29_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 624, 651) */
		reached[3][624] = 1;
		;
		/* merge: .(goto)(0, 629, 651) */
		reached[3][629] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 265: // STATE 622 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][622] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 266: // STATE 630 - resume_suspend.pml:208 - [prio = 0] (0:646:6 - 1)
		IfNotBlocked
		reached[3][630] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_180_prio);
		((P3 *)_this)->_7_22_29_180_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_22_29_180_prio));
#endif
		;
		/* merge: top_task = 0(646, 631, 646) */
		reached[3][631] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_180_top_task);
		((P3 *)_this)->_7_22_29_180_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_22_29_180_top_task));
#endif
		;
		/* merge: found = 0(646, 632, 646) */
		reached[3][632] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_22_29_180_found);
		((P3 *)_this)->_7_22_29_180_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_29_180_found));
#endif
		;
		/* merge: prio = 0(646, 633, 646) */
		reached[3][633] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_22_29_180_prio);
		((P3 *)_this)->_7_22_29_180_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_22_29_180_prio));
#endif
		;
		/* merge: top_task = 0(646, 634, 646) */
		reached[3][634] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_22_29_180_top_task);
		((P3 *)_this)->_7_22_29_180_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_22_29_180_top_task));
#endif
		;
		/* merge: found = 0(646, 635, 646) */
		reached[3][635] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_22_29_180_found);
		((P3 *)_this)->_7_22_29_180_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_29_180_found));
#endif
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[3][647] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 267: // STATE 636 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][636] = 1;
		if (!(((((int)((P3 *)_this)->_7_22_29_180_prio)<4)&& !(((int)((P3 *)_this)->_7_22_29_180_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 268: // STATE 637 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (646:0:2 - 1)
		IfNotBlocked
		reached[3][637] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_22_29_180_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](646, 638, 646) */
		reached[3][638] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_180_top_task);
		((P3 *)_this)->_7_22_29_180_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_22_29_180_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_22_29_180_top_task));
#endif
		;
		/* merge: found = 1(646, 639, 646) */
		reached[3][639] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_180_found);
		((P3 *)_this)->_7_22_29_180_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_22_29_180_found));
#endif
		;
		/* merge: .(goto)(0, 643, 646) */
		reached[3][643] = 1;
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[3][647] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 269: // STATE 641 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][641] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_22_29_180_prio);
		((P3 *)_this)->_7_22_29_180_prio = (((int)((P3 *)_this)->_7_22_29_180_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_22_29_180_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 270: // STATE 644 - resume_suspend.pml:227 - [(((prio>=4)||found))] (669:0:3 - 1)
		IfNotBlocked
		reached[3][644] = 1;
		if (!(((((int)((P3 *)_this)->_7_22_29_180_prio)>=4)||((int)((P3 *)_this)->_7_22_29_180_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_29_180_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_22_29_180_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_180_found = 0;
		/* merge: goto :b147(669, 645, 669) */
		reached[3][645] = 1;
		;
		/* merge: newTask = top_task(669, 649, 669) */
		reached[3][649] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_22_29_180_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[3][650] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_22_29_180_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 271: // STATE 649 - resume_suspend.pml:231 - [newTask = top_task] (0:669:2 - 3)
		IfNotBlocked
		reached[3][649] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_22_29_180_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[3][650] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_22_29_180_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 272: // STATE 652 - resume_suspend.pml:177 - [deq_idx = 0] (0:659:2 - 1)
		IfNotBlocked
		reached[3][652] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_22_29_181_deq_idx);
		((P3 *)_this)->_7_22_29_181_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_22_29_181_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(659, 653, 659) */
		reached[3][653] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_181_deq_idx);
		((P3 *)_this)->_7_22_29_181_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_22_29_181_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[3][660] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 273: // STATE 654 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (659:0:2 - 1)
		IfNotBlocked
		reached[3][654] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_181_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](659, 655, 659) */
		reached[3][655] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_22_29_181_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_22_29_181_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_22_29_181_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_22_29_181_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(659, 656, 659) */
		reached[3][656] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_22_29_181_deq_idx);
		((P3 *)_this)->_7_22_29_181_deq_idx = (((int)((P3 *)_this)->_7_22_29_181_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_22_29_181_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[3][660] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 274: // STATE 657 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][657] = 1;
		if (!((((int)((P3 *)_this)->_7_22_29_181_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_22_29_181_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_22_29_181_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_22_29_181_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 275: // STATE 662 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (673:0:4 - 1)
		IfNotBlocked
		reached[3][662] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(673, 663, 673) */
		reached[3][663] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(673, 664, 673) */
		reached[3][664] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(673, 668, 673) */
		reached[3][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[3][670] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[3][671] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 276: // STATE 666 - resume_suspend.pml:192 - [(1)] (673:0:2 - 1)
		IfNotBlocked
		reached[3][666] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(673, 668, 673) */
		reached[3][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[3][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[3][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 277: // STATE 670 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:673:2 - 3)
		IfNotBlocked
		reached[3][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[3][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 278: // STATE 672 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][672] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 279: // STATE 676 - resume_suspend.pml:520 - [((EP==4))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][676] = 1;
		if (!((((int)now.EP)==4)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 280: // STATE 677 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[3][677] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_currentTask);
		((P3 *)_this)->_7_23_30_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process4:currentTask", ((int)((P3 *)_this)->_7_23_30_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 281: // STATE 678 - resume_suspend.pml:377 - [((((5>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][678] = 1;
		if (!((((5>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 282: // STATE 679 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:693:6 - 1)
		IfNotBlocked
		reached[3][679] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(693, 680, 693) */
		reached[3][680] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(693, 682, 693) */
		reached[3][682] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_30_currentTask);
		((P3 *)_this)->_7_23_30_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:currentTask", ((int)((P3 *)_this)->_7_23_30_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(693, 683, 693) */
		reached[3][683] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_currentTask), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_23_30_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process4:currentTask].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+5)(693, 684, 693) */
		reached[3][684] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P3 *)_this)->_7_23_30_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+5);
#ifdef VAR_RANGES
		logval("tcb[Process4:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 5(693, 685, 693) */
		reached[3][685] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_23_30_currentTask, 5) ].delayTicks = 5;
#ifdef VAR_RANGES
		logval("tcb[Process4:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 283: // STATE 686 - resume_suspend.pml:70 - [((sortLink.count<8))] (821:0:2 - 1)
		IfNotBlocked
		reached[3][686] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(821, 687, 821) */
		reached[3][687] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P3 *)_this)->_7_23_30_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(821, 688, 821) */
		reached[3][688] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 692, 821) */
		reached[3][692] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 284: // STATE 690 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][690] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 285: // STATE 694 - resume_suspend.pml:401 - [interrupted_task = 0] (0:702:6 - 1)
		IfNotBlocked
		reached[3][694] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_interrupted_task);
		((P3 *)_this)->_7_23_30_185_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_30_185_interrupted_task));
#endif
		;
		/* merge: idx = 0(702, 695, 702) */
		reached[3][695] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_idx);
		((P3 *)_this)->_7_23_30_185_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_23_30_185_idx));
#endif
		;
		/* merge: taskId = 0(702, 696, 702) */
		reached[3][696] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_30_185_taskId);
		((P3 *)_this)->_7_23_30_185_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_23_30_185_taskId));
#endif
		;
		/* merge: needResched = 0(702, 697, 702) */
		reached[3][697] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_30_185_needResched);
		((P3 *)_this)->_7_23_30_185_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_30_185_needResched));
#endif
		;
		/* merge: interrupted_task = 0(702, 698, 702) */
		reached[3][698] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_23_30_185_interrupted_task);
		((P3 *)_this)->_7_23_30_185_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_30_185_interrupted_task));
#endif
		;
		/* merge: needResched = 0(702, 699, 702) */
		reached[3][699] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_23_30_185_needResched);
		((P3 *)_this)->_7_23_30_185_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_30_185_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 286: // STATE 700 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:759:4 - 1)
		IfNotBlocked
		reached[3][700] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(759, 701, 759) */
		reached[3][701] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(759, 703, 759) */
		reached[3][703] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(759, 704, 759) */
		reached[3][704] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_30_185_idx);
		((P3 *)_this)->_7_23_30_185_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_23_30_185_idx));
#endif
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[3][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 287: // STATE 705 - resume_suspend.pml:416 - [((idx<sortLink.count))] (755:0:1 - 1)
		IfNotBlocked
		reached[3][705] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 706, 755) */
		reached[3][706] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_185_taskId);
		((P3 *)_this)->_7_23_30_185_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_30_185_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_23_30_185_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 288: // STATE 707 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (743:0:2 - 1)
		IfNotBlocked
		reached[3][707] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(743, 708, 743) */
		reached[3][708] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_23_30_185_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(743, 709, 743) */
		reached[3][709] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_23_30_185_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 289: // STATE 710 - resume_suspend.pml:81 - [removePos = 0] (0:724:5 - 1)
		IfNotBlocked
		reached[3][710] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_51_removePos);
		((P3 *)_this)->_7_23_30_185_51_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_23_30_185_51_removePos));
#endif
		;
		/* merge: found = 0(724, 711, 724) */
		reached[3][711] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_51_found);
		((P3 *)_this)->_7_23_30_185_51_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_30_185_51_found));
#endif
		;
		/* merge: shiftIdx = 0(724, 712, 724) */
		reached[3][712] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx);
		((P3 *)_this)->_7_23_30_185_51_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx));
#endif
		;
		/* merge: removePos = 0(724, 713, 724) */
		reached[3][713] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_30_185_51_removePos);
		((P3 *)_this)->_7_23_30_185_51_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_23_30_185_51_removePos));
#endif
		;
		/* merge: found = 0(724, 714, 724) */
		reached[3][714] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_23_30_185_51_found);
		((P3 *)_this)->_7_23_30_185_51_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_30_185_51_found));
#endif
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[3][725] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 290: // STATE 715 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][715] = 1;
		if (!(((((int)((P3 *)_this)->_7_23_30_185_51_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_23_30_185_51_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 291: // STATE 716 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (724:0:1 - 1)
		IfNotBlocked
		reached[3][716] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_30_185_51_removePos), 8) ])==((int)((P3 *)_this)->_7_23_30_185_taskId))))
			continue;
		/* merge: found = 1(0, 717, 724) */
		reached[3][717] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_185_51_found);
		((P3 *)_this)->_7_23_30_185_51_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_30_185_51_found));
#endif
		;
		/* merge: .(goto)(0, 721, 724) */
		reached[3][721] = 1;
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[3][725] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 292: // STATE 719 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][719] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_185_51_removePos);
		((P3 *)_this)->_7_23_30_185_51_removePos = (((int)((P3 *)_this)->_7_23_30_185_51_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_23_30_185_51_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 293: // STATE 727 - resume_suspend.pml:100 - [((found==1))] (734:0:2 - 1)
		IfNotBlocked
		reached[3][727] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_51_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_30_185_51_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_30_185_51_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_51_found = 0;
		/* merge: shiftIdx = removePos(0, 728, 734) */
		reached[3][728] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx);
		((P3 *)_this)->_7_23_30_185_51_shiftIdx = ((int)((P3 *)_this)->_7_23_30_185_51_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[3][735] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 294: // STATE 729 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (734:0:2 - 1)
		IfNotBlocked
		reached[3][729] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](734, 730, 734) */
		reached[3][730] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_23_30_185_51_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(734, 731, 734) */
		reached[3][731] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx);
		((P3 *)_this)->_7_23_30_185_51_shiftIdx = (((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[3][735] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 295: // STATE 732 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (751:0:3 - 1)
		IfNotBlocked
		reached[3][732] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_51_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_30_185_51_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_30_185_51_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_51_shiftIdx = 0;
		/* merge: goto :b151(751, 733, 751) */
		reached[3][733] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(751, 737, 751) */
		reached[3][737] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[3][738] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[3][742] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 296: // STATE 737 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:751:2 - 3)
		IfNotBlocked
		reached[3][737] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[3][738] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[3][742] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 297: // STATE 744 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (759:0:4 - 1)
		IfNotBlocked
		reached[3][744] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(759, 745, 759) */
		reached[3][745] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_30_185_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_30_185_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_23_30_185_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(759, 746, 759) */
		reached[3][746] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_30_185_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(759, 750, 759) */
		reached[3][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[3][752] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_30_185_needResched);
		((P3 *)_this)->_7_23_30_185_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_30_185_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_23_30_185_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[3][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[3][760] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 298: // STATE 748 - resume_suspend.pml:140 - [assert(0)] (0:759:2 - 1)
		IfNotBlocked
		reached[3][748] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(759, 750, 759) */
		reached[3][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[3][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_needResched);
		((P3 *)_this)->_7_23_30_185_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_30_185_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_23_30_185_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[3][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[3][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 299: // STATE 752 - resume_suspend.pml:433 - [needResched = 1] (0:759:2 - 3)
		IfNotBlocked
		reached[3][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_needResched);
		((P3 *)_this)->_7_23_30_185_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_30_185_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_23_30_185_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[3][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[3][760] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 300: // STATE 754 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][754] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_185_idx);
		((P3 *)_this)->_7_23_30_185_idx = (((int)((P3 *)_this)->_7_23_30_185_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_23_30_185_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 301: // STATE 757 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (775:0:2 - 1)
		IfNotBlocked
		reached[3][757] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_30_185_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_30_185_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_idx = 0;
		/* merge: goto :b149(775, 758, 775) */
		reached[3][758] = 1;
		;
		/* merge: interrupted_task = EP(775, 762, 775) */
		reached[3][762] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_interrupted_task);
		((P3 *)_this)->_7_23_30_185_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_30_185_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 302: // STATE 762 - resume_suspend.pml:442 - [interrupted_task = EP] (0:775:1 - 3)
		IfNotBlocked
		reached[3][762] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_185_interrupted_task);
		((P3 *)_this)->_7_23_30_185_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_30_185_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 303: // STATE 763 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (772:0:1 - 1)
		IfNotBlocked
		reached[3][763] = 1;
		if (!((((((int)((P3 *)_this)->_7_23_30_185_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_23_30_185_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 764, 772) */
		reached[3][764] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_23_30_185_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 304: // STATE 765 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (798:0:2 - 1)
		IfNotBlocked
		reached[3][765] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(798, 766, 798) */
		reached[3][766] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_30_185_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_30_185_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_23_30_185_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(798, 767, 798) */
		reached[3][767] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_30_185_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_30_185_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 771, 798) */
		reached[3][771] = 1;
		;
		/* merge: .(goto)(0, 776, 798) */
		reached[3][776] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 305: // STATE 769 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][769] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 306: // STATE 777 - resume_suspend.pml:208 - [prio = 0] (0:793:6 - 1)
		IfNotBlocked
		reached[3][777] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_54_prio);
		((P3 *)_this)->_7_23_30_185_54_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_23_30_185_54_prio));
#endif
		;
		/* merge: top_task = 0(793, 778, 793) */
		reached[3][778] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_54_top_task);
		((P3 *)_this)->_7_23_30_185_54_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_23_30_185_54_top_task));
#endif
		;
		/* merge: found = 0(793, 779, 793) */
		reached[3][779] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_30_185_54_found);
		((P3 *)_this)->_7_23_30_185_54_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_30_185_54_found));
#endif
		;
		/* merge: prio = 0(793, 780, 793) */
		reached[3][780] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_30_185_54_prio);
		((P3 *)_this)->_7_23_30_185_54_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_23_30_185_54_prio));
#endif
		;
		/* merge: top_task = 0(793, 781, 793) */
		reached[3][781] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_23_30_185_54_top_task);
		((P3 *)_this)->_7_23_30_185_54_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_23_30_185_54_top_task));
#endif
		;
		/* merge: found = 0(793, 782, 793) */
		reached[3][782] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_23_30_185_54_found);
		((P3 *)_this)->_7_23_30_185_54_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_30_185_54_found));
#endif
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[3][794] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 307: // STATE 783 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][783] = 1;
		if (!(((((int)((P3 *)_this)->_7_23_30_185_54_prio)<4)&& !(((int)((P3 *)_this)->_7_23_30_185_54_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 308: // STATE 784 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (793:0:2 - 1)
		IfNotBlocked
		reached[3][784] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_23_30_185_54_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](793, 785, 793) */
		reached[3][785] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_54_top_task);
		((P3 *)_this)->_7_23_30_185_54_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_23_30_185_54_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_23_30_185_54_top_task));
#endif
		;
		/* merge: found = 1(793, 786, 793) */
		reached[3][786] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_54_found);
		((P3 *)_this)->_7_23_30_185_54_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_30_185_54_found));
#endif
		;
		/* merge: .(goto)(0, 790, 793) */
		reached[3][790] = 1;
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[3][794] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 309: // STATE 788 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][788] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_30_185_54_prio);
		((P3 *)_this)->_7_23_30_185_54_prio = (((int)((P3 *)_this)->_7_23_30_185_54_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_23_30_185_54_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 310: // STATE 791 - resume_suspend.pml:227 - [(((prio>=4)||found))] (816:0:3 - 1)
		IfNotBlocked
		reached[3][791] = 1;
		if (!(((((int)((P3 *)_this)->_7_23_30_185_54_prio)>=4)||((int)((P3 *)_this)->_7_23_30_185_54_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_30_185_54_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_30_185_54_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_54_found = 0;
		/* merge: goto :b152(816, 792, 816) */
		reached[3][792] = 1;
		;
		/* merge: newTask = top_task(816, 796, 816) */
		reached[3][796] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_23_30_185_54_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[3][797] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_23_30_185_54_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 311: // STATE 796 - resume_suspend.pml:231 - [newTask = top_task] (0:816:2 - 3)
		IfNotBlocked
		reached[3][796] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_23_30_185_54_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[3][797] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_23_30_185_54_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 312: // STATE 799 - resume_suspend.pml:177 - [deq_idx = 0] (0:806:2 - 1)
		IfNotBlocked
		reached[3][799] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_30_185_55_deq_idx);
		((P3 *)_this)->_7_23_30_185_55_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_23_30_185_55_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(806, 800, 806) */
		reached[3][800] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_55_deq_idx);
		((P3 *)_this)->_7_23_30_185_55_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_23_30_185_55_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[3][807] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 313: // STATE 801 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (806:0:2 - 1)
		IfNotBlocked
		reached[3][801] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_55_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](806, 802, 806) */
		reached[3][802] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_23_30_185_55_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_23_30_185_55_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_23_30_185_55_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_23_30_185_55_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(806, 803, 806) */
		reached[3][803] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_30_185_55_deq_idx);
		((P3 *)_this)->_7_23_30_185_55_deq_idx = (((int)((P3 *)_this)->_7_23_30_185_55_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_23_30_185_55_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[3][807] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 314: // STATE 804 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][804] = 1;
		if (!((((int)((P3 *)_this)->_7_23_30_185_55_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_30_185_55_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_23_30_185_55_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_30_185_55_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 315: // STATE 809 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (820:0:4 - 1)
		IfNotBlocked
		reached[3][809] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(820, 810, 820) */
		reached[3][810] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(820, 811, 820) */
		reached[3][811] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(820, 815, 820) */
		reached[3][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[3][817] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[3][818] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 316: // STATE 813 - resume_suspend.pml:192 - [(1)] (820:0:2 - 1)
		IfNotBlocked
		reached[3][813] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(820, 815, 820) */
		reached[3][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[3][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[3][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 317: // STATE 817 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:820:2 - 3)
		IfNotBlocked
		reached[3][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[3][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 318: // STATE 819 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][819] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 319: // STATE 822 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][822] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 320: // STATE 829 - resume_suspend.pml:401 - [interrupted_task = 0] (0:837:6 - 1)
		IfNotBlocked
		reached[3][829] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_interrupted_task);
		((P3 *)_this)->_7_23_31_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_31_interrupted_task));
#endif
		;
		/* merge: idx = 0(837, 830, 837) */
		reached[3][830] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_idx);
		((P3 *)_this)->_7_23_31_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_23_31_idx));
#endif
		;
		/* merge: taskId = 0(837, 831, 837) */
		reached[3][831] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_31_taskId);
		((P3 *)_this)->_7_23_31_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_23_31_taskId));
#endif
		;
		/* merge: needResched = 0(837, 832, 837) */
		reached[3][832] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_31_needResched);
		((P3 *)_this)->_7_23_31_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_31_needResched));
#endif
		;
		/* merge: interrupted_task = 0(837, 833, 837) */
		reached[3][833] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_23_31_interrupted_task);
		((P3 *)_this)->_7_23_31_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_31_interrupted_task));
#endif
		;
		/* merge: needResched = 0(837, 834, 837) */
		reached[3][834] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_23_31_needResched);
		((P3 *)_this)->_7_23_31_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_31_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 321: // STATE 835 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:894:4 - 1)
		IfNotBlocked
		reached[3][835] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(894, 836, 894) */
		reached[3][836] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(894, 838, 894) */
		reached[3][838] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(894, 839, 894) */
		reached[3][839] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_31_idx);
		((P3 *)_this)->_7_23_31_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_23_31_idx));
#endif
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[3][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 322: // STATE 840 - resume_suspend.pml:416 - [((idx<sortLink.count))] (890:0:1 - 1)
		IfNotBlocked
		reached[3][840] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 841, 890) */
		reached[3][841] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_31_taskId);
		((P3 *)_this)->_7_23_31_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_31_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_23_31_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 323: // STATE 842 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (878:0:2 - 1)
		IfNotBlocked
		reached[3][842] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(878, 843, 878) */
		reached[3][843] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_23_31_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(878, 844, 878) */
		reached[3][844] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_23_31_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 324: // STATE 845 - resume_suspend.pml:81 - [removePos = 0] (0:859:5 - 1)
		IfNotBlocked
		reached[3][845] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_188_removePos);
		((P3 *)_this)->_7_23_31_188_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_23_31_188_removePos));
#endif
		;
		/* merge: found = 0(859, 846, 859) */
		reached[3][846] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_188_found);
		((P3 *)_this)->_7_23_31_188_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_31_188_found));
#endif
		;
		/* merge: shiftIdx = 0(859, 847, 859) */
		reached[3][847] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_31_188_shiftIdx);
		((P3 *)_this)->_7_23_31_188_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_23_31_188_shiftIdx));
#endif
		;
		/* merge: removePos = 0(859, 848, 859) */
		reached[3][848] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_31_188_removePos);
		((P3 *)_this)->_7_23_31_188_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_23_31_188_removePos));
#endif
		;
		/* merge: found = 0(859, 849, 859) */
		reached[3][849] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_23_31_188_found);
		((P3 *)_this)->_7_23_31_188_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_31_188_found));
#endif
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[3][860] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 325: // STATE 850 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][850] = 1;
		if (!(((((int)((P3 *)_this)->_7_23_31_188_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_23_31_188_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 326: // STATE 851 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (859:0:1 - 1)
		IfNotBlocked
		reached[3][851] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_31_188_removePos), 8) ])==((int)((P3 *)_this)->_7_23_31_taskId))))
			continue;
		/* merge: found = 1(0, 852, 859) */
		reached[3][852] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_31_188_found);
		((P3 *)_this)->_7_23_31_188_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_31_188_found));
#endif
		;
		/* merge: .(goto)(0, 856, 859) */
		reached[3][856] = 1;
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[3][860] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 327: // STATE 854 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][854] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_31_188_removePos);
		((P3 *)_this)->_7_23_31_188_removePos = (((int)((P3 *)_this)->_7_23_31_188_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_23_31_188_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 328: // STATE 862 - resume_suspend.pml:100 - [((found==1))] (869:0:2 - 1)
		IfNotBlocked
		reached[3][862] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_188_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_31_188_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_31_188_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_188_found = 0;
		/* merge: shiftIdx = removePos(0, 863, 869) */
		reached[3][863] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_188_shiftIdx);
		((P3 *)_this)->_7_23_31_188_shiftIdx = ((int)((P3 *)_this)->_7_23_31_188_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_23_31_188_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[3][870] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 329: // STATE 864 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (869:0:2 - 1)
		IfNotBlocked
		reached[3][864] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_188_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](869, 865, 869) */
		reached[3][865] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_31_188_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_23_31_188_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_23_31_188_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_23_31_188_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(869, 866, 869) */
		reached[3][866] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_188_shiftIdx);
		((P3 *)_this)->_7_23_31_188_shiftIdx = (((int)((P3 *)_this)->_7_23_31_188_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_23_31_188_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[3][870] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 330: // STATE 867 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (886:0:3 - 1)
		IfNotBlocked
		reached[3][867] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_188_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_31_188_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_31_188_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_188_shiftIdx = 0;
		/* merge: goto :b156(886, 868, 886) */
		reached[3][868] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(886, 872, 886) */
		reached[3][872] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[3][873] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[3][877] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 331: // STATE 872 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:886:2 - 3)
		IfNotBlocked
		reached[3][872] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[3][873] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[3][877] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 332: // STATE 879 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (894:0:4 - 1)
		IfNotBlocked
		reached[3][879] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(894, 880, 894) */
		reached[3][880] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_31_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_31_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_23_31_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(894, 881, 894) */
		reached[3][881] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_31_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(894, 885, 894) */
		reached[3][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[3][887] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_31_needResched);
		((P3 *)_this)->_7_23_31_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_31_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_23_31_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[3][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[3][895] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 333: // STATE 883 - resume_suspend.pml:140 - [assert(0)] (0:894:2 - 1)
		IfNotBlocked
		reached[3][883] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(894, 885, 894) */
		reached[3][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[3][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_needResched);
		((P3 *)_this)->_7_23_31_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_31_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_23_31_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[3][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[3][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 334: // STATE 887 - resume_suspend.pml:433 - [needResched = 1] (0:894:2 - 3)
		IfNotBlocked
		reached[3][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_needResched);
		((P3 *)_this)->_7_23_31_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_23_31_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_23_31_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[3][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[3][895] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 335: // STATE 889 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][889] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_31_idx);
		((P3 *)_this)->_7_23_31_idx = (((int)((P3 *)_this)->_7_23_31_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_23_31_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 336: // STATE 892 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (910:0:2 - 1)
		IfNotBlocked
		reached[3][892] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_31_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_31_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_idx = 0;
		/* merge: goto :b154(910, 893, 910) */
		reached[3][893] = 1;
		;
		/* merge: interrupted_task = EP(910, 897, 910) */
		reached[3][897] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_interrupted_task);
		((P3 *)_this)->_7_23_31_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_31_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 337: // STATE 897 - resume_suspend.pml:442 - [interrupted_task = EP] (0:910:1 - 3)
		IfNotBlocked
		reached[3][897] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_31_interrupted_task);
		((P3 *)_this)->_7_23_31_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_23_31_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 338: // STATE 898 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (907:0:1 - 1)
		IfNotBlocked
		reached[3][898] = 1;
		if (!((((((int)((P3 *)_this)->_7_23_31_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_23_31_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 899, 907) */
		reached[3][899] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_23_31_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 339: // STATE 900 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (933:0:2 - 1)
		IfNotBlocked
		reached[3][900] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(933, 901, 933) */
		reached[3][901] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_31_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_31_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_23_31_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(933, 902, 933) */
		reached[3][902] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_23_31_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_23_31_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 906, 933) */
		reached[3][906] = 1;
		;
		/* merge: .(goto)(0, 911, 933) */
		reached[3][911] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 340: // STATE 904 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][904] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 341: // STATE 912 - resume_suspend.pml:208 - [prio = 0] (0:928:6 - 1)
		IfNotBlocked
		reached[3][912] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_191_prio);
		((P3 *)_this)->_7_23_31_191_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_23_31_191_prio));
#endif
		;
		/* merge: top_task = 0(928, 913, 928) */
		reached[3][913] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_191_top_task);
		((P3 *)_this)->_7_23_31_191_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_23_31_191_top_task));
#endif
		;
		/* merge: found = 0(928, 914, 928) */
		reached[3][914] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_23_31_191_found);
		((P3 *)_this)->_7_23_31_191_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_31_191_found));
#endif
		;
		/* merge: prio = 0(928, 915, 928) */
		reached[3][915] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_23_31_191_prio);
		((P3 *)_this)->_7_23_31_191_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_23_31_191_prio));
#endif
		;
		/* merge: top_task = 0(928, 916, 928) */
		reached[3][916] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_23_31_191_top_task);
		((P3 *)_this)->_7_23_31_191_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_23_31_191_top_task));
#endif
		;
		/* merge: found = 0(928, 917, 928) */
		reached[3][917] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_23_31_191_found);
		((P3 *)_this)->_7_23_31_191_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_31_191_found));
#endif
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[3][929] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 342: // STATE 918 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][918] = 1;
		if (!(((((int)((P3 *)_this)->_7_23_31_191_prio)<4)&& !(((int)((P3 *)_this)->_7_23_31_191_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 343: // STATE 919 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (928:0:2 - 1)
		IfNotBlocked
		reached[3][919] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_23_31_191_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](928, 920, 928) */
		reached[3][920] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_191_top_task);
		((P3 *)_this)->_7_23_31_191_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_23_31_191_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_23_31_191_top_task));
#endif
		;
		/* merge: found = 1(928, 921, 928) */
		reached[3][921] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_191_found);
		((P3 *)_this)->_7_23_31_191_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_23_31_191_found));
#endif
		;
		/* merge: .(goto)(0, 925, 928) */
		reached[3][925] = 1;
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[3][929] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 344: // STATE 923 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][923] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_23_31_191_prio);
		((P3 *)_this)->_7_23_31_191_prio = (((int)((P3 *)_this)->_7_23_31_191_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_23_31_191_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 345: // STATE 926 - resume_suspend.pml:227 - [(((prio>=4)||found))] (951:0:3 - 1)
		IfNotBlocked
		reached[3][926] = 1;
		if (!(((((int)((P3 *)_this)->_7_23_31_191_prio)>=4)||((int)((P3 *)_this)->_7_23_31_191_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_31_191_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_23_31_191_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_191_found = 0;
		/* merge: goto :b157(951, 927, 951) */
		reached[3][927] = 1;
		;
		/* merge: newTask = top_task(951, 931, 951) */
		reached[3][931] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_23_31_191_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[3][932] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_23_31_191_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 346: // STATE 931 - resume_suspend.pml:231 - [newTask = top_task] (0:951:2 - 3)
		IfNotBlocked
		reached[3][931] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_23_31_191_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[3][932] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_23_31_191_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 347: // STATE 934 - resume_suspend.pml:177 - [deq_idx = 0] (0:941:2 - 1)
		IfNotBlocked
		reached[3][934] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_23_31_192_deq_idx);
		((P3 *)_this)->_7_23_31_192_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_23_31_192_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(941, 935, 941) */
		reached[3][935] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_192_deq_idx);
		((P3 *)_this)->_7_23_31_192_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_23_31_192_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[3][942] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 348: // STATE 936 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (941:0:2 - 1)
		IfNotBlocked
		reached[3][936] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_192_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](941, 937, 941) */
		reached[3][937] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_23_31_192_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_23_31_192_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_23_31_192_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_23_31_192_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(941, 938, 941) */
		reached[3][938] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_23_31_192_deq_idx);
		((P3 *)_this)->_7_23_31_192_deq_idx = (((int)((P3 *)_this)->_7_23_31_192_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_23_31_192_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[3][942] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 349: // STATE 939 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][939] = 1;
		if (!((((int)((P3 *)_this)->_7_23_31_192_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_23_31_192_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_23_31_192_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_23_31_192_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 350: // STATE 944 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (955:0:4 - 1)
		IfNotBlocked
		reached[3][944] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(955, 945, 955) */
		reached[3][945] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(955, 946, 955) */
		reached[3][946] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(955, 950, 955) */
		reached[3][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[3][952] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[3][953] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 351: // STATE 948 - resume_suspend.pml:192 - [(1)] (955:0:2 - 1)
		IfNotBlocked
		reached[3][948] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(955, 950, 955) */
		reached[3][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[3][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[3][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 352: // STATE 952 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:955:2 - 3)
		IfNotBlocked
		reached[3][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[3][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 353: // STATE 954 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][954] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 354: // STATE 958 - resume_suspend.pml:521 - [((counter<100))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][958] = 1;
		if (!((((int)((P3 *)_this)->counter)<100)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 355: // STATE 959 - resume_suspend.pml:521 - [((EP==4))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][959] = 1;
		if (!((((int)now.EP)==4)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 356: // STATE 961 - resume_suspend.pml:401 - [interrupted_task = 0] (0:969:6 - 1)
		IfNotBlocked
		reached[3][961] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_interrupted_task);
		((P3 *)_this)->_7_24_32_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_24_32_interrupted_task));
#endif
		;
		/* merge: idx = 0(969, 962, 969) */
		reached[3][962] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_idx);
		((P3 *)_this)->_7_24_32_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_24_32_idx));
#endif
		;
		/* merge: taskId = 0(969, 963, 969) */
		reached[3][963] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_24_32_taskId);
		((P3 *)_this)->_7_24_32_taskId = 0;
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_24_32_taskId));
#endif
		;
		/* merge: needResched = 0(969, 964, 969) */
		reached[3][964] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_24_32_needResched);
		((P3 *)_this)->_7_24_32_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_24_32_needResched));
#endif
		;
		/* merge: interrupted_task = 0(969, 965, 969) */
		reached[3][965] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_24_32_interrupted_task);
		((P3 *)_this)->_7_24_32_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_24_32_interrupted_task));
#endif
		;
		/* merge: needResched = 0(969, 966, 969) */
		reached[3][966] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_24_32_needResched);
		((P3 *)_this)->_7_24_32_needResched = 0;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_24_32_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 357: // STATE 967 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:1026:4 - 1)
		IfNotBlocked
		reached[3][967] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(1026, 968, 1026) */
		reached[3][968] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(1026, 970, 1026) */
		reached[3][970] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(1026, 971, 1026) */
		reached[3][971] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_24_32_idx);
		((P3 *)_this)->_7_24_32_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_24_32_idx));
#endif
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[3][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 358: // STATE 972 - resume_suspend.pml:416 - [((idx<sortLink.count))] (1022:0:1 - 1)
		IfNotBlocked
		reached[3][972] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 973, 1022) */
		reached[3][973] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_24_32_taskId);
		((P3 *)_this)->_7_24_32_taskId = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_24_32_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process4:taskId", ((int)((P3 *)_this)->_7_24_32_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 359: // STATE 974 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (1010:0:2 - 1)
		IfNotBlocked
		reached[3][974] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(1010, 975, 1010) */
		reached[3][975] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_24_32_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(1010, 976, 1010) */
		reached[3][976] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P3 *)_this)->_7_24_32_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process4:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 360: // STATE 977 - resume_suspend.pml:81 - [removePos = 0] (0:991:5 - 1)
		IfNotBlocked
		reached[3][977] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_195_removePos);
		((P3 *)_this)->_7_24_32_195_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_24_32_195_removePos));
#endif
		;
		/* merge: found = 0(991, 978, 991) */
		reached[3][978] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_195_found);
		((P3 *)_this)->_7_24_32_195_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_24_32_195_found));
#endif
		;
		/* merge: shiftIdx = 0(991, 979, 991) */
		reached[3][979] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_24_32_195_shiftIdx);
		((P3 *)_this)->_7_24_32_195_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_24_32_195_shiftIdx));
#endif
		;
		/* merge: removePos = 0(991, 980, 991) */
		reached[3][980] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_24_32_195_removePos);
		((P3 *)_this)->_7_24_32_195_removePos = 0;
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_24_32_195_removePos));
#endif
		;
		/* merge: found = 0(991, 981, 991) */
		reached[3][981] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_24_32_195_found);
		((P3 *)_this)->_7_24_32_195_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_24_32_195_found));
#endif
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[3][992] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 361: // STATE 982 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][982] = 1;
		if (!(((((int)((P3 *)_this)->_7_24_32_195_removePos)<((int)now.sortLink.count))&& !(((int)((P3 *)_this)->_7_24_32_195_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 362: // STATE 983 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (991:0:1 - 1)
		IfNotBlocked
		reached[3][983] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_24_32_195_removePos), 8) ])==((int)((P3 *)_this)->_7_24_32_taskId))))
			continue;
		/* merge: found = 1(0, 984, 991) */
		reached[3][984] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_24_32_195_found);
		((P3 *)_this)->_7_24_32_195_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_24_32_195_found));
#endif
		;
		/* merge: .(goto)(0, 988, 991) */
		reached[3][988] = 1;
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[3][992] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 363: // STATE 986 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][986] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_24_32_195_removePos);
		((P3 *)_this)->_7_24_32_195_removePos = (((int)((P3 *)_this)->_7_24_32_195_removePos)+1);
#ifdef VAR_RANGES
		logval("Process4:removePos", ((int)((P3 *)_this)->_7_24_32_195_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 364: // STATE 994 - resume_suspend.pml:100 - [((found==1))] (1001:0:2 - 1)
		IfNotBlocked
		reached[3][994] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_195_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_24_32_195_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_24_32_195_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_195_found = 0;
		/* merge: shiftIdx = removePos(0, 995, 1001) */
		reached[3][995] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_195_shiftIdx);
		((P3 *)_this)->_7_24_32_195_shiftIdx = ((int)((P3 *)_this)->_7_24_32_195_removePos);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_24_32_195_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[3][1002] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 365: // STATE 996 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (1001:0:2 - 1)
		IfNotBlocked
		reached[3][996] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_195_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](1001, 997, 1001) */
		reached[3][997] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_24_32_195_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P3 *)_this)->_7_24_32_195_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P3 *)_this)->_7_24_32_195_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process4:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P3 *)_this)->_7_24_32_195_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(1001, 998, 1001) */
		reached[3][998] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_195_shiftIdx);
		((P3 *)_this)->_7_24_32_195_shiftIdx = (((int)((P3 *)_this)->_7_24_32_195_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process4:shiftIdx", ((int)((P3 *)_this)->_7_24_32_195_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[3][1002] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 366: // STATE 999 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (1018:0:3 - 1)
		IfNotBlocked
		reached[3][999] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_195_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_24_32_195_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_24_32_195_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_195_shiftIdx = 0;
		/* merge: goto :b161(1018, 1000, 1018) */
		reached[3][1000] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(1018, 1004, 1018) */
		reached[3][1004] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[3][1005] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[3][1009] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 367: // STATE 1004 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:1018:2 - 3)
		IfNotBlocked
		reached[3][1004] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[3][1005] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[3][1009] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 368: // STATE 1011 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (1026:0:4 - 1)
		IfNotBlocked
		reached[3][1011] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(1026, 1012, 1026) */
		reached[3][1012] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_24_32_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_24_32_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_24_32_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tasks[readyQueue[tcb[Process4:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(1026, 1013, 1026) */
		reached[3][1013] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_24_32_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[3][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[3][1019] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_24_32_needResched);
		((P3 *)_this)->_7_24_32_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_24_32_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_24_32_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[3][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[3][1027] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 369: // STATE 1015 - resume_suspend.pml:140 - [assert(0)] (0:1026:2 - 1)
		IfNotBlocked
		reached[3][1015] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[3][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[3][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_needResched);
		((P3 *)_this)->_7_24_32_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_24_32_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_24_32_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[3][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[3][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 370: // STATE 1019 - resume_suspend.pml:433 - [needResched = 1] (0:1026:2 - 3)
		IfNotBlocked
		reached[3][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_needResched);
		((P3 *)_this)->_7_24_32_needResched = 1;
#ifdef VAR_RANGES
		logval("Process4:needResched", ((int)((P3 *)_this)->_7_24_32_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _7_24_32_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[3][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[3][1027] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 371: // STATE 1021 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][1021] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_24_32_idx);
		((P3 *)_this)->_7_24_32_idx = (((int)((P3 *)_this)->_7_24_32_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:idx", ((int)((P3 *)_this)->_7_24_32_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 372: // STATE 1024 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (1042:0:2 - 1)
		IfNotBlocked
		reached[3][1024] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_24_32_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_24_32_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_idx = 0;
		/* merge: goto :b159(1042, 1025, 1042) */
		reached[3][1025] = 1;
		;
		/* merge: interrupted_task = EP(1042, 1029, 1042) */
		reached[3][1029] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_interrupted_task);
		((P3 *)_this)->_7_24_32_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_24_32_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 373: // STATE 1029 - resume_suspend.pml:442 - [interrupted_task = EP] (0:1042:1 - 3)
		IfNotBlocked
		reached[3][1029] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_24_32_interrupted_task);
		((P3 *)_this)->_7_24_32_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process4:interrupted_task", ((int)((P3 *)_this)->_7_24_32_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 374: // STATE 1030 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (1039:0:1 - 1)
		IfNotBlocked
		reached[3][1030] = 1;
		if (!((((((int)((P3 *)_this)->_7_24_32_interrupted_task)>=1)&&(((int)((P3 *)_this)->_7_24_32_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 1031, 1039) */
		reached[3][1031] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].state);
		now.tcb[ Index(((P3 *)_this)->_7_24_32_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process4:interrupted_task].state", ((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 375: // STATE 1032 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (1065:0:2 - 1)
		IfNotBlocked
		reached[3][1032] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(1065, 1033, 1065) */
		reached[3][1033] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_24_32_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_24_32_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P3 *)_this)->_7_24_32_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tasks[readyQueue[tcb[Process4:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(1065, 1034, 1065) */
		reached[3][1034] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P3 *)_this)->_7_24_32_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process4:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P3 *)_this)->_7_24_32_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 1038, 1065) */
		reached[3][1038] = 1;
		;
		/* merge: .(goto)(0, 1043, 1065) */
		reached[3][1043] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 376: // STATE 1036 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][1036] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 377: // STATE 1044 - resume_suspend.pml:208 - [prio = 0] (0:1060:6 - 1)
		IfNotBlocked
		reached[3][1044] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_198_prio);
		((P3 *)_this)->_7_24_32_198_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_24_32_198_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1045, 1060) */
		reached[3][1045] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_198_top_task);
		((P3 *)_this)->_7_24_32_198_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_24_32_198_top_task));
#endif
		;
		/* merge: found = 0(1060, 1046, 1060) */
		reached[3][1046] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P3 *)_this)->_7_24_32_198_found);
		((P3 *)_this)->_7_24_32_198_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_24_32_198_found));
#endif
		;
		/* merge: prio = 0(1060, 1047, 1060) */
		reached[3][1047] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P3 *)_this)->_7_24_32_198_prio);
		((P3 *)_this)->_7_24_32_198_prio = 0;
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_24_32_198_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1048, 1060) */
		reached[3][1048] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P3 *)_this)->_7_24_32_198_top_task);
		((P3 *)_this)->_7_24_32_198_top_task = 0;
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_24_32_198_top_task));
#endif
		;
		/* merge: found = 0(1060, 1049, 1060) */
		reached[3][1049] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P3 *)_this)->_7_24_32_198_found);
		((P3 *)_this)->_7_24_32_198_found = 0;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_24_32_198_found));
#endif
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[3][1061] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 378: // STATE 1050 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][1050] = 1;
		if (!(((((int)((P3 *)_this)->_7_24_32_198_prio)<4)&& !(((int)((P3 *)_this)->_7_24_32_198_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 379: // STATE 1051 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (1060:0:2 - 1)
		IfNotBlocked
		reached[3][1051] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_24_32_198_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](1060, 1052, 1060) */
		reached[3][1052] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_198_top_task);
		((P3 *)_this)->_7_24_32_198_top_task = ((int)now.readyQueue[ Index(((int)((P3 *)_this)->_7_24_32_198_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process4:top_task", ((int)((P3 *)_this)->_7_24_32_198_top_task));
#endif
		;
		/* merge: found = 1(1060, 1053, 1060) */
		reached[3][1053] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_198_found);
		((P3 *)_this)->_7_24_32_198_found = 1;
#ifdef VAR_RANGES
		logval("Process4:found", ((int)((P3 *)_this)->_7_24_32_198_found));
#endif
		;
		/* merge: .(goto)(0, 1057, 1060) */
		reached[3][1057] = 1;
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[3][1061] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 380: // STATE 1055 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[3][1055] = 1;
		(trpt+1)->bup.oval = ((int)((P3 *)_this)->_7_24_32_198_prio);
		((P3 *)_this)->_7_24_32_198_prio = (((int)((P3 *)_this)->_7_24_32_198_prio)+1);
#ifdef VAR_RANGES
		logval("Process4:prio", ((int)((P3 *)_this)->_7_24_32_198_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 381: // STATE 1058 - resume_suspend.pml:227 - [(((prio>=4)||found))] (1083:0:3 - 1)
		IfNotBlocked
		reached[3][1058] = 1;
		if (!(((((int)((P3 *)_this)->_7_24_32_198_prio)>=4)||((int)((P3 *)_this)->_7_24_32_198_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_24_32_198_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P3 *)_this)->_7_24_32_198_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_198_found = 0;
		/* merge: goto :b162(1083, 1059, 1083) */
		reached[3][1059] = 1;
		;
		/* merge: newTask = top_task(1083, 1063, 1083) */
		reached[3][1063] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_24_32_198_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[3][1064] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_24_32_198_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 382: // STATE 1063 - resume_suspend.pml:231 - [newTask = top_task] (0:1083:2 - 3)
		IfNotBlocked
		reached[3][1063] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P3 *)_this)->_7_24_32_198_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[3][1064] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P3 *)_this)->_7_24_32_198_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 383: // STATE 1066 - resume_suspend.pml:177 - [deq_idx = 0] (0:1073:2 - 1)
		IfNotBlocked
		reached[3][1066] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P3 *)_this)->_7_24_32_199_deq_idx);
		((P3 *)_this)->_7_24_32_199_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_24_32_199_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(1073, 1067, 1073) */
		reached[3][1067] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_199_deq_idx);
		((P3 *)_this)->_7_24_32_199_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_24_32_199_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[3][1074] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 384: // STATE 1068 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (1073:0:2 - 1)
		IfNotBlocked
		reached[3][1068] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_199_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](1073, 1069, 1073) */
		reached[3][1069] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_24_32_199_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P3 *)_this)->_7_24_32_199_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P3 *)_this)->_7_24_32_199_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process4:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P3 *)_this)->_7_24_32_199_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(1073, 1070, 1073) */
		reached[3][1070] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P3 *)_this)->_7_24_32_199_deq_idx);
		((P3 *)_this)->_7_24_32_199_deq_idx = (((int)((P3 *)_this)->_7_24_32_199_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process4:deq_idx", ((int)((P3 *)_this)->_7_24_32_199_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[3][1074] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 385: // STATE 1071 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[3][1071] = 1;
		if (!((((int)((P3 *)_this)->_7_24_32_199_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _7_24_32_199_deq_idx */  (trpt+1)->bup.oval = ((P3 *)_this)->_7_24_32_199_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P3 *)_this)->_7_24_32_199_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 386: // STATE 1076 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (1087:0:4 - 1)
		IfNotBlocked
		reached[3][1076] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(1087, 1077, 1087) */
		reached[3][1077] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(1087, 1078, 1087) */
		reached[3][1078] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[3][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[3][1084] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[3][1085] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 387: // STATE 1080 - resume_suspend.pml:192 - [(1)] (1087:0:2 - 1)
		IfNotBlocked
		reached[3][1080] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[3][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[3][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[3][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 388: // STATE 1084 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:1087:2 - 3)
		IfNotBlocked
		reached[3][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[3][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 389: // STATE 1086 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[3][1086] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 390: // STATE 1093 - resume_suspend.pml:523 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[3][1093] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC Process3 */
	case 391: // STATE 1 - resume_suspend.pml:502 - [((EP==3))] (130:0:0 - 1)
		IfNotBlocked
		reached[2][1] = 1;
		if (!((((int)now.EP)==3)))
			continue;
		/* merge: printf('Process 3 running, counter=%d\\n',counter)(0, 2, 130) */
		reached[2][2] = 1;
		Printf("Process 3 running, counter=%d\n", ((int)((P2 *)_this)->counter));
		_m = 3; goto P999; /* 1 */
	case 392: // STATE 3 - resume_suspend.pml:401 - [interrupted_task = 0] (0:11:6 - 1)
		IfNotBlocked
		reached[2][3] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_interrupted_task);
		((P2 *)_this)->_6_13_17_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_13_17_interrupted_task));
#endif
		;
		/* merge: idx = 0(11, 4, 11) */
		reached[2][4] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_idx);
		((P2 *)_this)->_6_13_17_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_13_17_idx));
#endif
		;
		/* merge: taskId = 0(11, 5, 11) */
		reached[2][5] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_13_17_taskId);
		((P2 *)_this)->_6_13_17_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_13_17_taskId));
#endif
		;
		/* merge: needResched = 0(11, 6, 11) */
		reached[2][6] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_13_17_needResched);
		((P2 *)_this)->_6_13_17_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_13_17_needResched));
#endif
		;
		/* merge: interrupted_task = 0(11, 7, 11) */
		reached[2][7] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_13_17_interrupted_task);
		((P2 *)_this)->_6_13_17_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_13_17_interrupted_task));
#endif
		;
		/* merge: needResched = 0(11, 8, 11) */
		reached[2][8] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_13_17_needResched);
		((P2 *)_this)->_6_13_17_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_13_17_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 393: // STATE 9 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:68:4 - 1)
		IfNotBlocked
		reached[2][9] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(68, 10, 68) */
		reached[2][10] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(68, 12, 68) */
		reached[2][12] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(68, 13, 68) */
		reached[2][13] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_13_17_idx);
		((P2 *)_this)->_6_13_17_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_13_17_idx));
#endif
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[2][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 394: // STATE 14 - resume_suspend.pml:416 - [((idx<sortLink.count))] (64:0:1 - 1)
		IfNotBlocked
		reached[2][14] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 15, 64) */
		reached[2][15] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_13_17_taskId);
		((P2 *)_this)->_6_13_17_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_13_17_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_13_17_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 395: // STATE 16 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (52:0:2 - 1)
		IfNotBlocked
		reached[2][16] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(52, 17, 52) */
		reached[2][17] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_13_17_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(52, 18, 52) */
		reached[2][18] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_13_17_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 396: // STATE 19 - resume_suspend.pml:81 - [removePos = 0] (0:33:5 - 1)
		IfNotBlocked
		reached[2][19] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_102_removePos);
		((P2 *)_this)->_6_13_17_102_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_13_17_102_removePos));
#endif
		;
		/* merge: found = 0(33, 20, 33) */
		reached[2][20] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_102_found);
		((P2 *)_this)->_6_13_17_102_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_13_17_102_found));
#endif
		;
		/* merge: shiftIdx = 0(33, 21, 33) */
		reached[2][21] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_13_17_102_shiftIdx);
		((P2 *)_this)->_6_13_17_102_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_13_17_102_shiftIdx));
#endif
		;
		/* merge: removePos = 0(33, 22, 33) */
		reached[2][22] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_13_17_102_removePos);
		((P2 *)_this)->_6_13_17_102_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_13_17_102_removePos));
#endif
		;
		/* merge: found = 0(33, 23, 33) */
		reached[2][23] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_13_17_102_found);
		((P2 *)_this)->_6_13_17_102_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_13_17_102_found));
#endif
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[2][34] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 397: // STATE 24 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][24] = 1;
		if (!(((((int)((P2 *)_this)->_6_13_17_102_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_13_17_102_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 398: // STATE 25 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (33:0:1 - 1)
		IfNotBlocked
		reached[2][25] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_13_17_102_removePos), 8) ])==((int)((P2 *)_this)->_6_13_17_taskId))))
			continue;
		/* merge: found = 1(0, 26, 33) */
		reached[2][26] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_13_17_102_found);
		((P2 *)_this)->_6_13_17_102_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_13_17_102_found));
#endif
		;
		/* merge: .(goto)(0, 30, 33) */
		reached[2][30] = 1;
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[2][34] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 399: // STATE 28 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][28] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_13_17_102_removePos);
		((P2 *)_this)->_6_13_17_102_removePos = (((int)((P2 *)_this)->_6_13_17_102_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_13_17_102_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 400: // STATE 36 - resume_suspend.pml:100 - [((found==1))] (43:0:2 - 1)
		IfNotBlocked
		reached[2][36] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_102_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_13_17_102_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_13_17_102_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_102_found = 0;
		/* merge: shiftIdx = removePos(0, 37, 43) */
		reached[2][37] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_102_shiftIdx);
		((P2 *)_this)->_6_13_17_102_shiftIdx = ((int)((P2 *)_this)->_6_13_17_102_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_13_17_102_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[2][44] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 401: // STATE 38 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (43:0:2 - 1)
		IfNotBlocked
		reached[2][38] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_102_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](43, 39, 43) */
		reached[2][39] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_13_17_102_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_13_17_102_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_13_17_102_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_13_17_102_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(43, 40, 43) */
		reached[2][40] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_102_shiftIdx);
		((P2 *)_this)->_6_13_17_102_shiftIdx = (((int)((P2 *)_this)->_6_13_17_102_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_13_17_102_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[2][44] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 402: // STATE 41 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (60:0:3 - 1)
		IfNotBlocked
		reached[2][41] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_102_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_13_17_102_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_13_17_102_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_102_shiftIdx = 0;
		/* merge: goto :b85(60, 42, 60) */
		reached[2][42] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(60, 46, 60) */
		reached[2][46] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[2][47] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[2][51] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 403: // STATE 46 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:60:2 - 3)
		IfNotBlocked
		reached[2][46] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[2][47] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[2][51] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 404: // STATE 53 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (68:0:4 - 1)
		IfNotBlocked
		reached[2][53] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(68, 54, 68) */
		reached[2][54] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_13_17_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_13_17_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_13_17_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(68, 55, 68) */
		reached[2][55] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_13_17_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(68, 59, 68) */
		reached[2][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[2][61] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_13_17_needResched);
		((P2 *)_this)->_6_13_17_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_13_17_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_13_17_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[2][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[2][69] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 405: // STATE 57 - resume_suspend.pml:140 - [assert(0)] (0:68:2 - 1)
		IfNotBlocked
		reached[2][57] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(68, 59, 68) */
		reached[2][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[2][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_needResched);
		((P2 *)_this)->_6_13_17_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_13_17_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_13_17_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[2][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[2][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 406: // STATE 61 - resume_suspend.pml:433 - [needResched = 1] (0:68:2 - 3)
		IfNotBlocked
		reached[2][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_needResched);
		((P2 *)_this)->_6_13_17_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_13_17_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_13_17_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[2][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[2][69] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 407: // STATE 63 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][63] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_13_17_idx);
		((P2 *)_this)->_6_13_17_idx = (((int)((P2 *)_this)->_6_13_17_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_13_17_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 408: // STATE 66 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (84:0:2 - 1)
		IfNotBlocked
		reached[2][66] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_13_17_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_13_17_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_idx = 0;
		/* merge: goto :b83(84, 67, 84) */
		reached[2][67] = 1;
		;
		/* merge: interrupted_task = EP(84, 71, 84) */
		reached[2][71] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_interrupted_task);
		((P2 *)_this)->_6_13_17_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_13_17_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 409: // STATE 71 - resume_suspend.pml:442 - [interrupted_task = EP] (0:84:1 - 3)
		IfNotBlocked
		reached[2][71] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_13_17_interrupted_task);
		((P2 *)_this)->_6_13_17_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_13_17_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 410: // STATE 72 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (81:0:1 - 1)
		IfNotBlocked
		reached[2][72] = 1;
		if (!((((((int)((P2 *)_this)->_6_13_17_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_13_17_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 73, 81) */
		reached[2][73] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_13_17_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 411: // STATE 74 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (107:0:2 - 1)
		IfNotBlocked
		reached[2][74] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(107, 75, 107) */
		reached[2][75] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_13_17_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_13_17_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_13_17_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(107, 76, 107) */
		reached[2][76] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_13_17_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_13_17_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 80, 107) */
		reached[2][80] = 1;
		;
		/* merge: .(goto)(0, 85, 107) */
		reached[2][85] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 412: // STATE 78 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][78] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 413: // STATE 86 - resume_suspend.pml:208 - [prio = 0] (0:102:6 - 1)
		IfNotBlocked
		reached[2][86] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_105_prio);
		((P2 *)_this)->_6_13_17_105_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_13_17_105_prio));
#endif
		;
		/* merge: top_task = 0(102, 87, 102) */
		reached[2][87] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_105_top_task);
		((P2 *)_this)->_6_13_17_105_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_13_17_105_top_task));
#endif
		;
		/* merge: found = 0(102, 88, 102) */
		reached[2][88] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_13_17_105_found);
		((P2 *)_this)->_6_13_17_105_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_13_17_105_found));
#endif
		;
		/* merge: prio = 0(102, 89, 102) */
		reached[2][89] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_13_17_105_prio);
		((P2 *)_this)->_6_13_17_105_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_13_17_105_prio));
#endif
		;
		/* merge: top_task = 0(102, 90, 102) */
		reached[2][90] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_13_17_105_top_task);
		((P2 *)_this)->_6_13_17_105_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_13_17_105_top_task));
#endif
		;
		/* merge: found = 0(102, 91, 102) */
		reached[2][91] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_13_17_105_found);
		((P2 *)_this)->_6_13_17_105_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_13_17_105_found));
#endif
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[2][103] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 414: // STATE 92 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][92] = 1;
		if (!(((((int)((P2 *)_this)->_6_13_17_105_prio)<4)&& !(((int)((P2 *)_this)->_6_13_17_105_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 415: // STATE 93 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (102:0:2 - 1)
		IfNotBlocked
		reached[2][93] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_13_17_105_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](102, 94, 102) */
		reached[2][94] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_105_top_task);
		((P2 *)_this)->_6_13_17_105_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_13_17_105_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_13_17_105_top_task));
#endif
		;
		/* merge: found = 1(102, 95, 102) */
		reached[2][95] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_105_found);
		((P2 *)_this)->_6_13_17_105_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_13_17_105_found));
#endif
		;
		/* merge: .(goto)(0, 99, 102) */
		reached[2][99] = 1;
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[2][103] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 416: // STATE 97 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][97] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_13_17_105_prio);
		((P2 *)_this)->_6_13_17_105_prio = (((int)((P2 *)_this)->_6_13_17_105_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_13_17_105_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 417: // STATE 100 - resume_suspend.pml:227 - [(((prio>=4)||found))] (125:0:3 - 1)
		IfNotBlocked
		reached[2][100] = 1;
		if (!(((((int)((P2 *)_this)->_6_13_17_105_prio)>=4)||((int)((P2 *)_this)->_6_13_17_105_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_13_17_105_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_13_17_105_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_105_found = 0;
		/* merge: goto :b86(125, 101, 125) */
		reached[2][101] = 1;
		;
		/* merge: newTask = top_task(125, 105, 125) */
		reached[2][105] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_13_17_105_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[2][106] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_13_17_105_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 418: // STATE 105 - resume_suspend.pml:231 - [newTask = top_task] (0:125:2 - 3)
		IfNotBlocked
		reached[2][105] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_13_17_105_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[2][106] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_13_17_105_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 419: // STATE 108 - resume_suspend.pml:177 - [deq_idx = 0] (0:115:2 - 1)
		IfNotBlocked
		reached[2][108] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_13_17_106_deq_idx);
		((P2 *)_this)->_6_13_17_106_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_13_17_106_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(115, 109, 115) */
		reached[2][109] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_106_deq_idx);
		((P2 *)_this)->_6_13_17_106_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_13_17_106_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[2][116] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 420: // STATE 110 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (115:0:2 - 1)
		IfNotBlocked
		reached[2][110] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_106_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](115, 111, 115) */
		reached[2][111] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_13_17_106_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_13_17_106_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_13_17_106_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_13_17_106_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(115, 112, 115) */
		reached[2][112] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_13_17_106_deq_idx);
		((P2 *)_this)->_6_13_17_106_deq_idx = (((int)((P2 *)_this)->_6_13_17_106_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_13_17_106_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[2][116] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 421: // STATE 113 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][113] = 1;
		if (!((((int)((P2 *)_this)->_6_13_17_106_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_13_17_106_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_13_17_106_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_13_17_106_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 422: // STATE 118 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (129:0:4 - 1)
		IfNotBlocked
		reached[2][118] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(129, 119, 129) */
		reached[2][119] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(129, 120, 129) */
		reached[2][120] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(129, 124, 129) */
		reached[2][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[2][126] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[2][127] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 423: // STATE 122 - resume_suspend.pml:192 - [(1)] (129:0:2 - 1)
		IfNotBlocked
		reached[2][122] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(129, 124, 129) */
		reached[2][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[2][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[2][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 424: // STATE 126 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:129:2 - 3)
		IfNotBlocked
		reached[2][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[2][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 425: // STATE 128 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][128] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 426: // STATE 132 - resume_suspend.pml:503 - [((EP==3))] (261:0:1 - 1)
		IfNotBlocked
		reached[2][132] = 1;
		if (!((((int)now.EP)==3)))
			continue;
		/* merge: counter = (counter+1)(0, 133, 261) */
		reached[2][133] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->counter);
		((P2 *)_this)->counter = (((int)((P2 *)_this)->counter)+1);
#ifdef VAR_RANGES
		logval("Process3:counter", ((int)((P2 *)_this)->counter));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 427: // STATE 134 - resume_suspend.pml:401 - [interrupted_task = 0] (0:142:6 - 1)
		IfNotBlocked
		reached[2][134] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_interrupted_task);
		((P2 *)_this)->_6_14_18_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_14_18_interrupted_task));
#endif
		;
		/* merge: idx = 0(142, 135, 142) */
		reached[2][135] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_idx);
		((P2 *)_this)->_6_14_18_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_14_18_idx));
#endif
		;
		/* merge: taskId = 0(142, 136, 142) */
		reached[2][136] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_14_18_taskId);
		((P2 *)_this)->_6_14_18_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_14_18_taskId));
#endif
		;
		/* merge: needResched = 0(142, 137, 142) */
		reached[2][137] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_14_18_needResched);
		((P2 *)_this)->_6_14_18_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_14_18_needResched));
#endif
		;
		/* merge: interrupted_task = 0(142, 138, 142) */
		reached[2][138] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_14_18_interrupted_task);
		((P2 *)_this)->_6_14_18_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_14_18_interrupted_task));
#endif
		;
		/* merge: needResched = 0(142, 139, 142) */
		reached[2][139] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_14_18_needResched);
		((P2 *)_this)->_6_14_18_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_14_18_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 428: // STATE 140 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:199:4 - 1)
		IfNotBlocked
		reached[2][140] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(199, 141, 199) */
		reached[2][141] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(199, 143, 199) */
		reached[2][143] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(199, 144, 199) */
		reached[2][144] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_14_18_idx);
		((P2 *)_this)->_6_14_18_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_14_18_idx));
#endif
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[2][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 429: // STATE 145 - resume_suspend.pml:416 - [((idx<sortLink.count))] (195:0:1 - 1)
		IfNotBlocked
		reached[2][145] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 146, 195) */
		reached[2][146] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_14_18_taskId);
		((P2 *)_this)->_6_14_18_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_14_18_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_14_18_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 430: // STATE 147 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (183:0:2 - 1)
		IfNotBlocked
		reached[2][147] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(183, 148, 183) */
		reached[2][148] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_14_18_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(183, 149, 183) */
		reached[2][149] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_14_18_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 431: // STATE 150 - resume_suspend.pml:81 - [removePos = 0] (0:164:5 - 1)
		IfNotBlocked
		reached[2][150] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_109_removePos);
		((P2 *)_this)->_6_14_18_109_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_14_18_109_removePos));
#endif
		;
		/* merge: found = 0(164, 151, 164) */
		reached[2][151] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_109_found);
		((P2 *)_this)->_6_14_18_109_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_14_18_109_found));
#endif
		;
		/* merge: shiftIdx = 0(164, 152, 164) */
		reached[2][152] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_14_18_109_shiftIdx);
		((P2 *)_this)->_6_14_18_109_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_14_18_109_shiftIdx));
#endif
		;
		/* merge: removePos = 0(164, 153, 164) */
		reached[2][153] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_14_18_109_removePos);
		((P2 *)_this)->_6_14_18_109_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_14_18_109_removePos));
#endif
		;
		/* merge: found = 0(164, 154, 164) */
		reached[2][154] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_14_18_109_found);
		((P2 *)_this)->_6_14_18_109_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_14_18_109_found));
#endif
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[2][165] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 432: // STATE 155 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][155] = 1;
		if (!(((((int)((P2 *)_this)->_6_14_18_109_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_14_18_109_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 433: // STATE 156 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (164:0:1 - 1)
		IfNotBlocked
		reached[2][156] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_14_18_109_removePos), 8) ])==((int)((P2 *)_this)->_6_14_18_taskId))))
			continue;
		/* merge: found = 1(0, 157, 164) */
		reached[2][157] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_14_18_109_found);
		((P2 *)_this)->_6_14_18_109_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_14_18_109_found));
#endif
		;
		/* merge: .(goto)(0, 161, 164) */
		reached[2][161] = 1;
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[2][165] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 434: // STATE 159 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][159] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_14_18_109_removePos);
		((P2 *)_this)->_6_14_18_109_removePos = (((int)((P2 *)_this)->_6_14_18_109_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_14_18_109_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 435: // STATE 167 - resume_suspend.pml:100 - [((found==1))] (174:0:2 - 1)
		IfNotBlocked
		reached[2][167] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_109_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_14_18_109_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_14_18_109_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_109_found = 0;
		/* merge: shiftIdx = removePos(0, 168, 174) */
		reached[2][168] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_109_shiftIdx);
		((P2 *)_this)->_6_14_18_109_shiftIdx = ((int)((P2 *)_this)->_6_14_18_109_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_14_18_109_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[2][175] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 436: // STATE 169 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (174:0:2 - 1)
		IfNotBlocked
		reached[2][169] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_109_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](174, 170, 174) */
		reached[2][170] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_14_18_109_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_14_18_109_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_14_18_109_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_14_18_109_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(174, 171, 174) */
		reached[2][171] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_109_shiftIdx);
		((P2 *)_this)->_6_14_18_109_shiftIdx = (((int)((P2 *)_this)->_6_14_18_109_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_14_18_109_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[2][175] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 437: // STATE 172 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (191:0:3 - 1)
		IfNotBlocked
		reached[2][172] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_109_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_14_18_109_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_14_18_109_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_109_shiftIdx = 0;
		/* merge: goto :b90(191, 173, 191) */
		reached[2][173] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(191, 177, 191) */
		reached[2][177] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[2][178] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[2][182] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 438: // STATE 177 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:191:2 - 3)
		IfNotBlocked
		reached[2][177] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[2][178] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[2][182] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 439: // STATE 184 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (199:0:4 - 1)
		IfNotBlocked
		reached[2][184] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(199, 185, 199) */
		reached[2][185] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_14_18_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_14_18_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_14_18_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(199, 186, 199) */
		reached[2][186] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_14_18_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(199, 190, 199) */
		reached[2][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[2][192] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_14_18_needResched);
		((P2 *)_this)->_6_14_18_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_14_18_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_14_18_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[2][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[2][200] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 440: // STATE 188 - resume_suspend.pml:140 - [assert(0)] (0:199:2 - 1)
		IfNotBlocked
		reached[2][188] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(199, 190, 199) */
		reached[2][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[2][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_needResched);
		((P2 *)_this)->_6_14_18_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_14_18_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_14_18_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[2][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[2][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 441: // STATE 192 - resume_suspend.pml:433 - [needResched = 1] (0:199:2 - 3)
		IfNotBlocked
		reached[2][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_needResched);
		((P2 *)_this)->_6_14_18_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_14_18_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_14_18_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[2][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[2][200] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 442: // STATE 194 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][194] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_14_18_idx);
		((P2 *)_this)->_6_14_18_idx = (((int)((P2 *)_this)->_6_14_18_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_14_18_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 443: // STATE 197 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (215:0:2 - 1)
		IfNotBlocked
		reached[2][197] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_14_18_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_14_18_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_idx = 0;
		/* merge: goto :b88(215, 198, 215) */
		reached[2][198] = 1;
		;
		/* merge: interrupted_task = EP(215, 202, 215) */
		reached[2][202] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_interrupted_task);
		((P2 *)_this)->_6_14_18_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_14_18_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 444: // STATE 202 - resume_suspend.pml:442 - [interrupted_task = EP] (0:215:1 - 3)
		IfNotBlocked
		reached[2][202] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_14_18_interrupted_task);
		((P2 *)_this)->_6_14_18_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_14_18_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 445: // STATE 203 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (212:0:1 - 1)
		IfNotBlocked
		reached[2][203] = 1;
		if (!((((((int)((P2 *)_this)->_6_14_18_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_14_18_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 204, 212) */
		reached[2][204] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_14_18_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 446: // STATE 205 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (238:0:2 - 1)
		IfNotBlocked
		reached[2][205] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(238, 206, 238) */
		reached[2][206] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_14_18_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_14_18_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_14_18_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(238, 207, 238) */
		reached[2][207] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_14_18_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_14_18_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 211, 238) */
		reached[2][211] = 1;
		;
		/* merge: .(goto)(0, 216, 238) */
		reached[2][216] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 447: // STATE 209 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][209] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 448: // STATE 217 - resume_suspend.pml:208 - [prio = 0] (0:233:6 - 1)
		IfNotBlocked
		reached[2][217] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_112_prio);
		((P2 *)_this)->_6_14_18_112_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_14_18_112_prio));
#endif
		;
		/* merge: top_task = 0(233, 218, 233) */
		reached[2][218] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_112_top_task);
		((P2 *)_this)->_6_14_18_112_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_14_18_112_top_task));
#endif
		;
		/* merge: found = 0(233, 219, 233) */
		reached[2][219] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_14_18_112_found);
		((P2 *)_this)->_6_14_18_112_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_14_18_112_found));
#endif
		;
		/* merge: prio = 0(233, 220, 233) */
		reached[2][220] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_14_18_112_prio);
		((P2 *)_this)->_6_14_18_112_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_14_18_112_prio));
#endif
		;
		/* merge: top_task = 0(233, 221, 233) */
		reached[2][221] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_14_18_112_top_task);
		((P2 *)_this)->_6_14_18_112_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_14_18_112_top_task));
#endif
		;
		/* merge: found = 0(233, 222, 233) */
		reached[2][222] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_14_18_112_found);
		((P2 *)_this)->_6_14_18_112_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_14_18_112_found));
#endif
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[2][234] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 449: // STATE 223 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][223] = 1;
		if (!(((((int)((P2 *)_this)->_6_14_18_112_prio)<4)&& !(((int)((P2 *)_this)->_6_14_18_112_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 450: // STATE 224 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (233:0:2 - 1)
		IfNotBlocked
		reached[2][224] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_14_18_112_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](233, 225, 233) */
		reached[2][225] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_112_top_task);
		((P2 *)_this)->_6_14_18_112_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_14_18_112_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_14_18_112_top_task));
#endif
		;
		/* merge: found = 1(233, 226, 233) */
		reached[2][226] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_112_found);
		((P2 *)_this)->_6_14_18_112_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_14_18_112_found));
#endif
		;
		/* merge: .(goto)(0, 230, 233) */
		reached[2][230] = 1;
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[2][234] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 451: // STATE 228 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][228] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_14_18_112_prio);
		((P2 *)_this)->_6_14_18_112_prio = (((int)((P2 *)_this)->_6_14_18_112_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_14_18_112_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 452: // STATE 231 - resume_suspend.pml:227 - [(((prio>=4)||found))] (256:0:3 - 1)
		IfNotBlocked
		reached[2][231] = 1;
		if (!(((((int)((P2 *)_this)->_6_14_18_112_prio)>=4)||((int)((P2 *)_this)->_6_14_18_112_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_14_18_112_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_14_18_112_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_112_found = 0;
		/* merge: goto :b91(256, 232, 256) */
		reached[2][232] = 1;
		;
		/* merge: newTask = top_task(256, 236, 256) */
		reached[2][236] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_14_18_112_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[2][237] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_14_18_112_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 453: // STATE 236 - resume_suspend.pml:231 - [newTask = top_task] (0:256:2 - 3)
		IfNotBlocked
		reached[2][236] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_14_18_112_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[2][237] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_14_18_112_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 454: // STATE 239 - resume_suspend.pml:177 - [deq_idx = 0] (0:246:2 - 1)
		IfNotBlocked
		reached[2][239] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_14_18_113_deq_idx);
		((P2 *)_this)->_6_14_18_113_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_14_18_113_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(246, 240, 246) */
		reached[2][240] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_113_deq_idx);
		((P2 *)_this)->_6_14_18_113_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_14_18_113_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[2][247] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 455: // STATE 241 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (246:0:2 - 1)
		IfNotBlocked
		reached[2][241] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_113_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](246, 242, 246) */
		reached[2][242] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_14_18_113_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_14_18_113_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_14_18_113_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_14_18_113_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(246, 243, 246) */
		reached[2][243] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_14_18_113_deq_idx);
		((P2 *)_this)->_6_14_18_113_deq_idx = (((int)((P2 *)_this)->_6_14_18_113_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_14_18_113_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[2][247] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 456: // STATE 244 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][244] = 1;
		if (!((((int)((P2 *)_this)->_6_14_18_113_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_14_18_113_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_14_18_113_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_14_18_113_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 457: // STATE 249 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (260:0:4 - 1)
		IfNotBlocked
		reached[2][249] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(260, 250, 260) */
		reached[2][250] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(260, 251, 260) */
		reached[2][251] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(260, 255, 260) */
		reached[2][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[2][257] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[2][258] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 458: // STATE 253 - resume_suspend.pml:192 - [(1)] (260:0:2 - 1)
		IfNotBlocked
		reached[2][253] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(260, 255, 260) */
		reached[2][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[2][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[2][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 459: // STATE 257 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:260:2 - 3)
		IfNotBlocked
		reached[2][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[2][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 460: // STATE 259 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][259] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 461: // STATE 263 - resume_suspend.pml:504 - [((EP==3))] (392:0:1 - 1)
		IfNotBlocked
		reached[2][263] = 1;
		if (!((((int)now.EP)==3)))
			continue;
		/* merge: work = ((work+(counter*3))%100)(0, 264, 392) */
		reached[2][264] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->work);
		((P2 *)_this)->work = ((((int)((P2 *)_this)->work)+(((int)((P2 *)_this)->counter)*3))%100);
#ifdef VAR_RANGES
		logval("Process3:work", ((int)((P2 *)_this)->work));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 462: // STATE 265 - resume_suspend.pml:401 - [interrupted_task = 0] (0:273:6 - 1)
		IfNotBlocked
		reached[2][265] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_interrupted_task);
		((P2 *)_this)->_6_15_19_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_15_19_interrupted_task));
#endif
		;
		/* merge: idx = 0(273, 266, 273) */
		reached[2][266] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_idx);
		((P2 *)_this)->_6_15_19_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_15_19_idx));
#endif
		;
		/* merge: taskId = 0(273, 267, 273) */
		reached[2][267] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_15_19_taskId);
		((P2 *)_this)->_6_15_19_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_15_19_taskId));
#endif
		;
		/* merge: needResched = 0(273, 268, 273) */
		reached[2][268] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_15_19_needResched);
		((P2 *)_this)->_6_15_19_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_15_19_needResched));
#endif
		;
		/* merge: interrupted_task = 0(273, 269, 273) */
		reached[2][269] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_15_19_interrupted_task);
		((P2 *)_this)->_6_15_19_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_15_19_interrupted_task));
#endif
		;
		/* merge: needResched = 0(273, 270, 273) */
		reached[2][270] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_15_19_needResched);
		((P2 *)_this)->_6_15_19_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_15_19_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 463: // STATE 271 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:330:4 - 1)
		IfNotBlocked
		reached[2][271] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(330, 272, 330) */
		reached[2][272] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(330, 274, 330) */
		reached[2][274] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(330, 275, 330) */
		reached[2][275] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_15_19_idx);
		((P2 *)_this)->_6_15_19_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_15_19_idx));
#endif
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[2][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 464: // STATE 276 - resume_suspend.pml:416 - [((idx<sortLink.count))] (326:0:1 - 1)
		IfNotBlocked
		reached[2][276] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 277, 326) */
		reached[2][277] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_15_19_taskId);
		((P2 *)_this)->_6_15_19_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_15_19_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_15_19_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 465: // STATE 278 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (314:0:2 - 1)
		IfNotBlocked
		reached[2][278] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(314, 279, 314) */
		reached[2][279] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_15_19_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(314, 280, 314) */
		reached[2][280] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_15_19_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 466: // STATE 281 - resume_suspend.pml:81 - [removePos = 0] (0:295:5 - 1)
		IfNotBlocked
		reached[2][281] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_116_removePos);
		((P2 *)_this)->_6_15_19_116_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_15_19_116_removePos));
#endif
		;
		/* merge: found = 0(295, 282, 295) */
		reached[2][282] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_116_found);
		((P2 *)_this)->_6_15_19_116_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_15_19_116_found));
#endif
		;
		/* merge: shiftIdx = 0(295, 283, 295) */
		reached[2][283] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_15_19_116_shiftIdx);
		((P2 *)_this)->_6_15_19_116_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_15_19_116_shiftIdx));
#endif
		;
		/* merge: removePos = 0(295, 284, 295) */
		reached[2][284] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_15_19_116_removePos);
		((P2 *)_this)->_6_15_19_116_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_15_19_116_removePos));
#endif
		;
		/* merge: found = 0(295, 285, 295) */
		reached[2][285] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_15_19_116_found);
		((P2 *)_this)->_6_15_19_116_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_15_19_116_found));
#endif
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[2][296] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 467: // STATE 286 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][286] = 1;
		if (!(((((int)((P2 *)_this)->_6_15_19_116_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_15_19_116_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 468: // STATE 287 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (295:0:1 - 1)
		IfNotBlocked
		reached[2][287] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_15_19_116_removePos), 8) ])==((int)((P2 *)_this)->_6_15_19_taskId))))
			continue;
		/* merge: found = 1(0, 288, 295) */
		reached[2][288] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_15_19_116_found);
		((P2 *)_this)->_6_15_19_116_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_15_19_116_found));
#endif
		;
		/* merge: .(goto)(0, 292, 295) */
		reached[2][292] = 1;
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[2][296] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 469: // STATE 290 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][290] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_15_19_116_removePos);
		((P2 *)_this)->_6_15_19_116_removePos = (((int)((P2 *)_this)->_6_15_19_116_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_15_19_116_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 470: // STATE 298 - resume_suspend.pml:100 - [((found==1))] (305:0:2 - 1)
		IfNotBlocked
		reached[2][298] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_116_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_15_19_116_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_15_19_116_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_116_found = 0;
		/* merge: shiftIdx = removePos(0, 299, 305) */
		reached[2][299] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_116_shiftIdx);
		((P2 *)_this)->_6_15_19_116_shiftIdx = ((int)((P2 *)_this)->_6_15_19_116_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_15_19_116_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[2][306] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 471: // STATE 300 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (305:0:2 - 1)
		IfNotBlocked
		reached[2][300] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_116_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](305, 301, 305) */
		reached[2][301] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_15_19_116_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_15_19_116_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_15_19_116_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_15_19_116_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(305, 302, 305) */
		reached[2][302] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_116_shiftIdx);
		((P2 *)_this)->_6_15_19_116_shiftIdx = (((int)((P2 *)_this)->_6_15_19_116_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_15_19_116_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[2][306] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 472: // STATE 303 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (322:0:3 - 1)
		IfNotBlocked
		reached[2][303] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_116_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_15_19_116_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_15_19_116_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_116_shiftIdx = 0;
		/* merge: goto :b95(322, 304, 322) */
		reached[2][304] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(322, 308, 322) */
		reached[2][308] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[2][309] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[2][313] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 473: // STATE 308 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:322:2 - 3)
		IfNotBlocked
		reached[2][308] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[2][309] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[2][313] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 474: // STATE 315 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (330:0:4 - 1)
		IfNotBlocked
		reached[2][315] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(330, 316, 330) */
		reached[2][316] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_15_19_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_15_19_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_15_19_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(330, 317, 330) */
		reached[2][317] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_15_19_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(330, 321, 330) */
		reached[2][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[2][323] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_15_19_needResched);
		((P2 *)_this)->_6_15_19_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_15_19_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_15_19_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[2][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[2][331] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 475: // STATE 319 - resume_suspend.pml:140 - [assert(0)] (0:330:2 - 1)
		IfNotBlocked
		reached[2][319] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(330, 321, 330) */
		reached[2][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[2][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_needResched);
		((P2 *)_this)->_6_15_19_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_15_19_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_15_19_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[2][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[2][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 476: // STATE 323 - resume_suspend.pml:433 - [needResched = 1] (0:330:2 - 3)
		IfNotBlocked
		reached[2][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_needResched);
		((P2 *)_this)->_6_15_19_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_15_19_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_15_19_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[2][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[2][331] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 477: // STATE 325 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][325] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_15_19_idx);
		((P2 *)_this)->_6_15_19_idx = (((int)((P2 *)_this)->_6_15_19_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_15_19_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 478: // STATE 328 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (346:0:2 - 1)
		IfNotBlocked
		reached[2][328] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_15_19_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_15_19_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_idx = 0;
		/* merge: goto :b93(346, 329, 346) */
		reached[2][329] = 1;
		;
		/* merge: interrupted_task = EP(346, 333, 346) */
		reached[2][333] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_interrupted_task);
		((P2 *)_this)->_6_15_19_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_15_19_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 479: // STATE 333 - resume_suspend.pml:442 - [interrupted_task = EP] (0:346:1 - 3)
		IfNotBlocked
		reached[2][333] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_15_19_interrupted_task);
		((P2 *)_this)->_6_15_19_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_15_19_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 480: // STATE 334 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (343:0:1 - 1)
		IfNotBlocked
		reached[2][334] = 1;
		if (!((((((int)((P2 *)_this)->_6_15_19_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_15_19_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 335, 343) */
		reached[2][335] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_15_19_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 481: // STATE 336 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (369:0:2 - 1)
		IfNotBlocked
		reached[2][336] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(369, 337, 369) */
		reached[2][337] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_15_19_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_15_19_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_15_19_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(369, 338, 369) */
		reached[2][338] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_15_19_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_15_19_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 342, 369) */
		reached[2][342] = 1;
		;
		/* merge: .(goto)(0, 347, 369) */
		reached[2][347] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 482: // STATE 340 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][340] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 483: // STATE 348 - resume_suspend.pml:208 - [prio = 0] (0:364:6 - 1)
		IfNotBlocked
		reached[2][348] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_119_prio);
		((P2 *)_this)->_6_15_19_119_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_15_19_119_prio));
#endif
		;
		/* merge: top_task = 0(364, 349, 364) */
		reached[2][349] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_119_top_task);
		((P2 *)_this)->_6_15_19_119_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_15_19_119_top_task));
#endif
		;
		/* merge: found = 0(364, 350, 364) */
		reached[2][350] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_15_19_119_found);
		((P2 *)_this)->_6_15_19_119_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_15_19_119_found));
#endif
		;
		/* merge: prio = 0(364, 351, 364) */
		reached[2][351] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_15_19_119_prio);
		((P2 *)_this)->_6_15_19_119_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_15_19_119_prio));
#endif
		;
		/* merge: top_task = 0(364, 352, 364) */
		reached[2][352] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_15_19_119_top_task);
		((P2 *)_this)->_6_15_19_119_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_15_19_119_top_task));
#endif
		;
		/* merge: found = 0(364, 353, 364) */
		reached[2][353] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_15_19_119_found);
		((P2 *)_this)->_6_15_19_119_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_15_19_119_found));
#endif
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[2][365] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 484: // STATE 354 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][354] = 1;
		if (!(((((int)((P2 *)_this)->_6_15_19_119_prio)<4)&& !(((int)((P2 *)_this)->_6_15_19_119_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 485: // STATE 355 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (364:0:2 - 1)
		IfNotBlocked
		reached[2][355] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_15_19_119_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](364, 356, 364) */
		reached[2][356] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_119_top_task);
		((P2 *)_this)->_6_15_19_119_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_15_19_119_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_15_19_119_top_task));
#endif
		;
		/* merge: found = 1(364, 357, 364) */
		reached[2][357] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_119_found);
		((P2 *)_this)->_6_15_19_119_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_15_19_119_found));
#endif
		;
		/* merge: .(goto)(0, 361, 364) */
		reached[2][361] = 1;
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[2][365] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 486: // STATE 359 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][359] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_15_19_119_prio);
		((P2 *)_this)->_6_15_19_119_prio = (((int)((P2 *)_this)->_6_15_19_119_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_15_19_119_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 487: // STATE 362 - resume_suspend.pml:227 - [(((prio>=4)||found))] (387:0:3 - 1)
		IfNotBlocked
		reached[2][362] = 1;
		if (!(((((int)((P2 *)_this)->_6_15_19_119_prio)>=4)||((int)((P2 *)_this)->_6_15_19_119_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_15_19_119_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_15_19_119_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_119_found = 0;
		/* merge: goto :b96(387, 363, 387) */
		reached[2][363] = 1;
		;
		/* merge: newTask = top_task(387, 367, 387) */
		reached[2][367] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_15_19_119_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[2][368] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_15_19_119_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 488: // STATE 367 - resume_suspend.pml:231 - [newTask = top_task] (0:387:2 - 3)
		IfNotBlocked
		reached[2][367] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_15_19_119_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[2][368] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_15_19_119_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 489: // STATE 370 - resume_suspend.pml:177 - [deq_idx = 0] (0:377:2 - 1)
		IfNotBlocked
		reached[2][370] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_15_19_120_deq_idx);
		((P2 *)_this)->_6_15_19_120_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_15_19_120_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(377, 371, 377) */
		reached[2][371] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_120_deq_idx);
		((P2 *)_this)->_6_15_19_120_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_15_19_120_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[2][378] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 490: // STATE 372 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (377:0:2 - 1)
		IfNotBlocked
		reached[2][372] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_120_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](377, 373, 377) */
		reached[2][373] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_15_19_120_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_15_19_120_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_15_19_120_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_15_19_120_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(377, 374, 377) */
		reached[2][374] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_15_19_120_deq_idx);
		((P2 *)_this)->_6_15_19_120_deq_idx = (((int)((P2 *)_this)->_6_15_19_120_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_15_19_120_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[2][378] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 491: // STATE 375 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][375] = 1;
		if (!((((int)((P2 *)_this)->_6_15_19_120_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_15_19_120_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_15_19_120_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_15_19_120_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 492: // STATE 380 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (391:0:4 - 1)
		IfNotBlocked
		reached[2][380] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(391, 381, 391) */
		reached[2][381] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(391, 382, 391) */
		reached[2][382] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(391, 386, 391) */
		reached[2][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[2][388] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[2][389] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 493: // STATE 384 - resume_suspend.pml:192 - [(1)] (391:0:2 - 1)
		IfNotBlocked
		reached[2][384] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(391, 386, 391) */
		reached[2][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[2][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[2][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 494: // STATE 388 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:391:2 - 3)
		IfNotBlocked
		reached[2][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[2][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 495: // STATE 390 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][390] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 496: // STATE 394 - resume_suspend.pml:505 - [((EP==3))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][394] = 1;
		if (!((((int)now.EP)==3)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 497: // STATE 395 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[2][395] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_currentTask);
		((P2 *)_this)->_6_16_20_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process3:currentTask", ((int)((P2 *)_this)->_6_16_20_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 498: // STATE 396 - resume_suspend.pml:377 - [((((1>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][396] = 1;
		if (!((((1>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 499: // STATE 397 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:411:6 - 1)
		IfNotBlocked
		reached[2][397] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(411, 398, 411) */
		reached[2][398] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(411, 400, 411) */
		reached[2][400] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_20_currentTask);
		((P2 *)_this)->_6_16_20_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:currentTask", ((int)((P2 *)_this)->_6_16_20_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(411, 401, 411) */
		reached[2][401] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_currentTask), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_16_20_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process3:currentTask].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+1)(411, 402, 411) */
		reached[2][402] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P2 *)_this)->_6_16_20_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tcb[Process3:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 1(411, 403, 411) */
		reached[2][403] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_16_20_currentTask, 5) ].delayTicks = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 500: // STATE 404 - resume_suspend.pml:70 - [((sortLink.count<8))] (539:0:2 - 1)
		IfNotBlocked
		reached[2][404] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(539, 405, 539) */
		reached[2][405] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P2 *)_this)->_6_16_20_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(539, 406, 539) */
		reached[2][406] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 410, 539) */
		reached[2][410] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 501: // STATE 408 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][408] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 502: // STATE 412 - resume_suspend.pml:401 - [interrupted_task = 0] (0:420:6 - 1)
		IfNotBlocked
		reached[2][412] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_interrupted_task);
		((P2 *)_this)->_6_16_20_124_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_20_124_interrupted_task));
#endif
		;
		/* merge: idx = 0(420, 413, 420) */
		reached[2][413] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_idx);
		((P2 *)_this)->_6_16_20_124_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_16_20_124_idx));
#endif
		;
		/* merge: taskId = 0(420, 414, 420) */
		reached[2][414] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_20_124_taskId);
		((P2 *)_this)->_6_16_20_124_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_16_20_124_taskId));
#endif
		;
		/* merge: needResched = 0(420, 415, 420) */
		reached[2][415] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_20_124_needResched);
		((P2 *)_this)->_6_16_20_124_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_20_124_needResched));
#endif
		;
		/* merge: interrupted_task = 0(420, 416, 420) */
		reached[2][416] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_16_20_124_interrupted_task);
		((P2 *)_this)->_6_16_20_124_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_20_124_interrupted_task));
#endif
		;
		/* merge: needResched = 0(420, 417, 420) */
		reached[2][417] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_16_20_124_needResched);
		((P2 *)_this)->_6_16_20_124_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_20_124_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 503: // STATE 418 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:477:4 - 1)
		IfNotBlocked
		reached[2][418] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(477, 419, 477) */
		reached[2][419] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(477, 421, 477) */
		reached[2][421] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(477, 422, 477) */
		reached[2][422] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_20_124_idx);
		((P2 *)_this)->_6_16_20_124_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_16_20_124_idx));
#endif
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[2][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 504: // STATE 423 - resume_suspend.pml:416 - [((idx<sortLink.count))] (473:0:1 - 1)
		IfNotBlocked
		reached[2][423] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 424, 473) */
		reached[2][424] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_124_taskId);
		((P2 *)_this)->_6_16_20_124_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_20_124_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_16_20_124_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 505: // STATE 425 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (461:0:2 - 1)
		IfNotBlocked
		reached[2][425] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(461, 426, 461) */
		reached[2][426] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_16_20_124_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(461, 427, 461) */
		reached[2][427] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_16_20_124_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 506: // STATE 428 - resume_suspend.pml:81 - [removePos = 0] (0:442:5 - 1)
		IfNotBlocked
		reached[2][428] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_30_removePos);
		((P2 *)_this)->_6_16_20_124_30_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_16_20_124_30_removePos));
#endif
		;
		/* merge: found = 0(442, 429, 442) */
		reached[2][429] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_30_found);
		((P2 *)_this)->_6_16_20_124_30_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_20_124_30_found));
#endif
		;
		/* merge: shiftIdx = 0(442, 430, 442) */
		reached[2][430] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx);
		((P2 *)_this)->_6_16_20_124_30_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx));
#endif
		;
		/* merge: removePos = 0(442, 431, 442) */
		reached[2][431] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_20_124_30_removePos);
		((P2 *)_this)->_6_16_20_124_30_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_16_20_124_30_removePos));
#endif
		;
		/* merge: found = 0(442, 432, 442) */
		reached[2][432] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_16_20_124_30_found);
		((P2 *)_this)->_6_16_20_124_30_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_20_124_30_found));
#endif
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[2][443] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 507: // STATE 433 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][433] = 1;
		if (!(((((int)((P2 *)_this)->_6_16_20_124_30_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_16_20_124_30_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 508: // STATE 434 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (442:0:1 - 1)
		IfNotBlocked
		reached[2][434] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_20_124_30_removePos), 8) ])==((int)((P2 *)_this)->_6_16_20_124_taskId))))
			continue;
		/* merge: found = 1(0, 435, 442) */
		reached[2][435] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_124_30_found);
		((P2 *)_this)->_6_16_20_124_30_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_20_124_30_found));
#endif
		;
		/* merge: .(goto)(0, 439, 442) */
		reached[2][439] = 1;
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[2][443] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 509: // STATE 437 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][437] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_124_30_removePos);
		((P2 *)_this)->_6_16_20_124_30_removePos = (((int)((P2 *)_this)->_6_16_20_124_30_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_16_20_124_30_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 510: // STATE 445 - resume_suspend.pml:100 - [((found==1))] (452:0:2 - 1)
		IfNotBlocked
		reached[2][445] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_30_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_20_124_30_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_20_124_30_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_30_found = 0;
		/* merge: shiftIdx = removePos(0, 446, 452) */
		reached[2][446] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx);
		((P2 *)_this)->_6_16_20_124_30_shiftIdx = ((int)((P2 *)_this)->_6_16_20_124_30_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[2][453] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 511: // STATE 447 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (452:0:2 - 1)
		IfNotBlocked
		reached[2][447] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](452, 448, 452) */
		reached[2][448] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_16_20_124_30_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(452, 449, 452) */
		reached[2][449] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx);
		((P2 *)_this)->_6_16_20_124_30_shiftIdx = (((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[2][453] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 512: // STATE 450 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (469:0:3 - 1)
		IfNotBlocked
		reached[2][450] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_30_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_20_124_30_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_20_124_30_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_30_shiftIdx = 0;
		/* merge: goto :b100(469, 451, 469) */
		reached[2][451] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(469, 455, 469) */
		reached[2][455] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[2][456] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[2][460] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 513: // STATE 455 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:469:2 - 3)
		IfNotBlocked
		reached[2][455] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[2][456] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[2][460] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 514: // STATE 462 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (477:0:4 - 1)
		IfNotBlocked
		reached[2][462] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(477, 463, 477) */
		reached[2][463] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_20_124_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_20_124_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_16_20_124_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(477, 464, 477) */
		reached[2][464] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_20_124_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(477, 468, 477) */
		reached[2][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[2][470] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_20_124_needResched);
		((P2 *)_this)->_6_16_20_124_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_20_124_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_16_20_124_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[2][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[2][478] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 515: // STATE 466 - resume_suspend.pml:140 - [assert(0)] (0:477:2 - 1)
		IfNotBlocked
		reached[2][466] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(477, 468, 477) */
		reached[2][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[2][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_needResched);
		((P2 *)_this)->_6_16_20_124_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_20_124_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_16_20_124_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[2][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[2][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 516: // STATE 470 - resume_suspend.pml:433 - [needResched = 1] (0:477:2 - 3)
		IfNotBlocked
		reached[2][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_needResched);
		((P2 *)_this)->_6_16_20_124_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_20_124_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_16_20_124_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[2][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[2][478] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 517: // STATE 472 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][472] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_124_idx);
		((P2 *)_this)->_6_16_20_124_idx = (((int)((P2 *)_this)->_6_16_20_124_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_16_20_124_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 518: // STATE 475 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (493:0:2 - 1)
		IfNotBlocked
		reached[2][475] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_20_124_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_20_124_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_idx = 0;
		/* merge: goto :b98(493, 476, 493) */
		reached[2][476] = 1;
		;
		/* merge: interrupted_task = EP(493, 480, 493) */
		reached[2][480] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_interrupted_task);
		((P2 *)_this)->_6_16_20_124_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_20_124_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 519: // STATE 480 - resume_suspend.pml:442 - [interrupted_task = EP] (0:493:1 - 3)
		IfNotBlocked
		reached[2][480] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_124_interrupted_task);
		((P2 *)_this)->_6_16_20_124_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_20_124_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 520: // STATE 481 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (490:0:1 - 1)
		IfNotBlocked
		reached[2][481] = 1;
		if (!((((((int)((P2 *)_this)->_6_16_20_124_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_16_20_124_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 482, 490) */
		reached[2][482] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_16_20_124_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 521: // STATE 483 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (516:0:2 - 1)
		IfNotBlocked
		reached[2][483] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(516, 484, 516) */
		reached[2][484] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_20_124_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_20_124_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_16_20_124_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(516, 485, 516) */
		reached[2][485] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_20_124_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_20_124_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 489, 516) */
		reached[2][489] = 1;
		;
		/* merge: .(goto)(0, 494, 516) */
		reached[2][494] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 522: // STATE 487 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][487] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 523: // STATE 495 - resume_suspend.pml:208 - [prio = 0] (0:511:6 - 1)
		IfNotBlocked
		reached[2][495] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_33_prio);
		((P2 *)_this)->_6_16_20_124_33_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_16_20_124_33_prio));
#endif
		;
		/* merge: top_task = 0(511, 496, 511) */
		reached[2][496] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_33_top_task);
		((P2 *)_this)->_6_16_20_124_33_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_16_20_124_33_top_task));
#endif
		;
		/* merge: found = 0(511, 497, 511) */
		reached[2][497] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_20_124_33_found);
		((P2 *)_this)->_6_16_20_124_33_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_20_124_33_found));
#endif
		;
		/* merge: prio = 0(511, 498, 511) */
		reached[2][498] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_20_124_33_prio);
		((P2 *)_this)->_6_16_20_124_33_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_16_20_124_33_prio));
#endif
		;
		/* merge: top_task = 0(511, 499, 511) */
		reached[2][499] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_16_20_124_33_top_task);
		((P2 *)_this)->_6_16_20_124_33_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_16_20_124_33_top_task));
#endif
		;
		/* merge: found = 0(511, 500, 511) */
		reached[2][500] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_16_20_124_33_found);
		((P2 *)_this)->_6_16_20_124_33_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_20_124_33_found));
#endif
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[2][512] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 524: // STATE 501 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][501] = 1;
		if (!(((((int)((P2 *)_this)->_6_16_20_124_33_prio)<4)&& !(((int)((P2 *)_this)->_6_16_20_124_33_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 525: // STATE 502 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (511:0:2 - 1)
		IfNotBlocked
		reached[2][502] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_16_20_124_33_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](511, 503, 511) */
		reached[2][503] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_33_top_task);
		((P2 *)_this)->_6_16_20_124_33_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_16_20_124_33_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_16_20_124_33_top_task));
#endif
		;
		/* merge: found = 1(511, 504, 511) */
		reached[2][504] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_33_found);
		((P2 *)_this)->_6_16_20_124_33_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_20_124_33_found));
#endif
		;
		/* merge: .(goto)(0, 508, 511) */
		reached[2][508] = 1;
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[2][512] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 526: // STATE 506 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][506] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_20_124_33_prio);
		((P2 *)_this)->_6_16_20_124_33_prio = (((int)((P2 *)_this)->_6_16_20_124_33_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_16_20_124_33_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 527: // STATE 509 - resume_suspend.pml:227 - [(((prio>=4)||found))] (534:0:3 - 1)
		IfNotBlocked
		reached[2][509] = 1;
		if (!(((((int)((P2 *)_this)->_6_16_20_124_33_prio)>=4)||((int)((P2 *)_this)->_6_16_20_124_33_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_20_124_33_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_20_124_33_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_33_found = 0;
		/* merge: goto :b101(534, 510, 534) */
		reached[2][510] = 1;
		;
		/* merge: newTask = top_task(534, 514, 534) */
		reached[2][514] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_16_20_124_33_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[2][515] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_16_20_124_33_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 528: // STATE 514 - resume_suspend.pml:231 - [newTask = top_task] (0:534:2 - 3)
		IfNotBlocked
		reached[2][514] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_16_20_124_33_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[2][515] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_16_20_124_33_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 529: // STATE 517 - resume_suspend.pml:177 - [deq_idx = 0] (0:524:2 - 1)
		IfNotBlocked
		reached[2][517] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_20_124_34_deq_idx);
		((P2 *)_this)->_6_16_20_124_34_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_16_20_124_34_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(524, 518, 524) */
		reached[2][518] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_34_deq_idx);
		((P2 *)_this)->_6_16_20_124_34_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_16_20_124_34_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[2][525] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 530: // STATE 519 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (524:0:2 - 1)
		IfNotBlocked
		reached[2][519] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_34_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](524, 520, 524) */
		reached[2][520] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_16_20_124_34_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_16_20_124_34_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_16_20_124_34_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_16_20_124_34_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(524, 521, 524) */
		reached[2][521] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_20_124_34_deq_idx);
		((P2 *)_this)->_6_16_20_124_34_deq_idx = (((int)((P2 *)_this)->_6_16_20_124_34_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_16_20_124_34_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[2][525] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 531: // STATE 522 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][522] = 1;
		if (!((((int)((P2 *)_this)->_6_16_20_124_34_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_20_124_34_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_16_20_124_34_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_20_124_34_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 532: // STATE 527 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (538:0:4 - 1)
		IfNotBlocked
		reached[2][527] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(538, 528, 538) */
		reached[2][528] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(538, 529, 538) */
		reached[2][529] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(538, 533, 538) */
		reached[2][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[2][535] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[2][536] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 533: // STATE 531 - resume_suspend.pml:192 - [(1)] (538:0:2 - 1)
		IfNotBlocked
		reached[2][531] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(538, 533, 538) */
		reached[2][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[2][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[2][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 534: // STATE 535 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:538:2 - 3)
		IfNotBlocked
		reached[2][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[2][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 535: // STATE 537 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][537] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 536: // STATE 540 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][540] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 537: // STATE 547 - resume_suspend.pml:401 - [interrupted_task = 0] (0:555:6 - 1)
		IfNotBlocked
		reached[2][547] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_interrupted_task);
		((P2 *)_this)->_6_16_21_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_21_interrupted_task));
#endif
		;
		/* merge: idx = 0(555, 548, 555) */
		reached[2][548] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_idx);
		((P2 *)_this)->_6_16_21_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_16_21_idx));
#endif
		;
		/* merge: taskId = 0(555, 549, 555) */
		reached[2][549] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_21_taskId);
		((P2 *)_this)->_6_16_21_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_16_21_taskId));
#endif
		;
		/* merge: needResched = 0(555, 550, 555) */
		reached[2][550] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_21_needResched);
		((P2 *)_this)->_6_16_21_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_21_needResched));
#endif
		;
		/* merge: interrupted_task = 0(555, 551, 555) */
		reached[2][551] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_16_21_interrupted_task);
		((P2 *)_this)->_6_16_21_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_21_interrupted_task));
#endif
		;
		/* merge: needResched = 0(555, 552, 555) */
		reached[2][552] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_16_21_needResched);
		((P2 *)_this)->_6_16_21_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_21_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 538: // STATE 553 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:612:4 - 1)
		IfNotBlocked
		reached[2][553] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(612, 554, 612) */
		reached[2][554] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(612, 556, 612) */
		reached[2][556] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(612, 557, 612) */
		reached[2][557] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_21_idx);
		((P2 *)_this)->_6_16_21_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_16_21_idx));
#endif
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[2][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 539: // STATE 558 - resume_suspend.pml:416 - [((idx<sortLink.count))] (608:0:1 - 1)
		IfNotBlocked
		reached[2][558] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 559, 608) */
		reached[2][559] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_21_taskId);
		((P2 *)_this)->_6_16_21_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_21_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_16_21_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 540: // STATE 560 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (596:0:2 - 1)
		IfNotBlocked
		reached[2][560] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(596, 561, 596) */
		reached[2][561] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_16_21_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(596, 562, 596) */
		reached[2][562] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_16_21_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 541: // STATE 563 - resume_suspend.pml:81 - [removePos = 0] (0:577:5 - 1)
		IfNotBlocked
		reached[2][563] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_127_removePos);
		((P2 *)_this)->_6_16_21_127_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_16_21_127_removePos));
#endif
		;
		/* merge: found = 0(577, 564, 577) */
		reached[2][564] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_127_found);
		((P2 *)_this)->_6_16_21_127_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_21_127_found));
#endif
		;
		/* merge: shiftIdx = 0(577, 565, 577) */
		reached[2][565] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_21_127_shiftIdx);
		((P2 *)_this)->_6_16_21_127_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_16_21_127_shiftIdx));
#endif
		;
		/* merge: removePos = 0(577, 566, 577) */
		reached[2][566] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_21_127_removePos);
		((P2 *)_this)->_6_16_21_127_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_16_21_127_removePos));
#endif
		;
		/* merge: found = 0(577, 567, 577) */
		reached[2][567] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_16_21_127_found);
		((P2 *)_this)->_6_16_21_127_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_21_127_found));
#endif
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[2][578] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 542: // STATE 568 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][568] = 1;
		if (!(((((int)((P2 *)_this)->_6_16_21_127_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_16_21_127_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 543: // STATE 569 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (577:0:1 - 1)
		IfNotBlocked
		reached[2][569] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_21_127_removePos), 8) ])==((int)((P2 *)_this)->_6_16_21_taskId))))
			continue;
		/* merge: found = 1(0, 570, 577) */
		reached[2][570] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_21_127_found);
		((P2 *)_this)->_6_16_21_127_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_21_127_found));
#endif
		;
		/* merge: .(goto)(0, 574, 577) */
		reached[2][574] = 1;
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[2][578] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 544: // STATE 572 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][572] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_21_127_removePos);
		((P2 *)_this)->_6_16_21_127_removePos = (((int)((P2 *)_this)->_6_16_21_127_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_16_21_127_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 545: // STATE 580 - resume_suspend.pml:100 - [((found==1))] (587:0:2 - 1)
		IfNotBlocked
		reached[2][580] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_127_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_21_127_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_21_127_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_127_found = 0;
		/* merge: shiftIdx = removePos(0, 581, 587) */
		reached[2][581] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_127_shiftIdx);
		((P2 *)_this)->_6_16_21_127_shiftIdx = ((int)((P2 *)_this)->_6_16_21_127_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_16_21_127_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[2][588] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 546: // STATE 582 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (587:0:2 - 1)
		IfNotBlocked
		reached[2][582] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_127_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](587, 583, 587) */
		reached[2][583] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_21_127_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_16_21_127_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_16_21_127_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_16_21_127_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(587, 584, 587) */
		reached[2][584] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_127_shiftIdx);
		((P2 *)_this)->_6_16_21_127_shiftIdx = (((int)((P2 *)_this)->_6_16_21_127_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_16_21_127_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[2][588] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 547: // STATE 585 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (604:0:3 - 1)
		IfNotBlocked
		reached[2][585] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_127_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_21_127_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_21_127_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_127_shiftIdx = 0;
		/* merge: goto :b105(604, 586, 604) */
		reached[2][586] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(604, 590, 604) */
		reached[2][590] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[2][591] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[2][595] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 548: // STATE 590 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:604:2 - 3)
		IfNotBlocked
		reached[2][590] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[2][591] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[2][595] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 549: // STATE 597 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (612:0:4 - 1)
		IfNotBlocked
		reached[2][597] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(612, 598, 612) */
		reached[2][598] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_21_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_21_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_16_21_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(612, 599, 612) */
		reached[2][599] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_21_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(612, 603, 612) */
		reached[2][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[2][605] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_21_needResched);
		((P2 *)_this)->_6_16_21_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_21_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_16_21_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[2][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[2][613] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 550: // STATE 601 - resume_suspend.pml:140 - [assert(0)] (0:612:2 - 1)
		IfNotBlocked
		reached[2][601] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(612, 603, 612) */
		reached[2][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[2][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_needResched);
		((P2 *)_this)->_6_16_21_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_21_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_16_21_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[2][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[2][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 551: // STATE 605 - resume_suspend.pml:433 - [needResched = 1] (0:612:2 - 3)
		IfNotBlocked
		reached[2][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_needResched);
		((P2 *)_this)->_6_16_21_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_16_21_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_16_21_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[2][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[2][613] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 552: // STATE 607 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][607] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_21_idx);
		((P2 *)_this)->_6_16_21_idx = (((int)((P2 *)_this)->_6_16_21_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_16_21_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 553: // STATE 610 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (628:0:2 - 1)
		IfNotBlocked
		reached[2][610] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_21_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_21_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_idx = 0;
		/* merge: goto :b103(628, 611, 628) */
		reached[2][611] = 1;
		;
		/* merge: interrupted_task = EP(628, 615, 628) */
		reached[2][615] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_interrupted_task);
		((P2 *)_this)->_6_16_21_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_21_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 554: // STATE 615 - resume_suspend.pml:442 - [interrupted_task = EP] (0:628:1 - 3)
		IfNotBlocked
		reached[2][615] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_21_interrupted_task);
		((P2 *)_this)->_6_16_21_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_16_21_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 555: // STATE 616 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (625:0:1 - 1)
		IfNotBlocked
		reached[2][616] = 1;
		if (!((((((int)((P2 *)_this)->_6_16_21_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_16_21_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 617, 625) */
		reached[2][617] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_16_21_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 556: // STATE 618 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (651:0:2 - 1)
		IfNotBlocked
		reached[2][618] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(651, 619, 651) */
		reached[2][619] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_21_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_21_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_16_21_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(651, 620, 651) */
		reached[2][620] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_16_21_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_16_21_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 624, 651) */
		reached[2][624] = 1;
		;
		/* merge: .(goto)(0, 629, 651) */
		reached[2][629] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 557: // STATE 622 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][622] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 558: // STATE 630 - resume_suspend.pml:208 - [prio = 0] (0:646:6 - 1)
		IfNotBlocked
		reached[2][630] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_130_prio);
		((P2 *)_this)->_6_16_21_130_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_16_21_130_prio));
#endif
		;
		/* merge: top_task = 0(646, 631, 646) */
		reached[2][631] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_130_top_task);
		((P2 *)_this)->_6_16_21_130_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_16_21_130_top_task));
#endif
		;
		/* merge: found = 0(646, 632, 646) */
		reached[2][632] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_16_21_130_found);
		((P2 *)_this)->_6_16_21_130_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_21_130_found));
#endif
		;
		/* merge: prio = 0(646, 633, 646) */
		reached[2][633] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_16_21_130_prio);
		((P2 *)_this)->_6_16_21_130_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_16_21_130_prio));
#endif
		;
		/* merge: top_task = 0(646, 634, 646) */
		reached[2][634] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_16_21_130_top_task);
		((P2 *)_this)->_6_16_21_130_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_16_21_130_top_task));
#endif
		;
		/* merge: found = 0(646, 635, 646) */
		reached[2][635] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_16_21_130_found);
		((P2 *)_this)->_6_16_21_130_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_21_130_found));
#endif
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[2][647] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 559: // STATE 636 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][636] = 1;
		if (!(((((int)((P2 *)_this)->_6_16_21_130_prio)<4)&& !(((int)((P2 *)_this)->_6_16_21_130_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 560: // STATE 637 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (646:0:2 - 1)
		IfNotBlocked
		reached[2][637] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_16_21_130_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](646, 638, 646) */
		reached[2][638] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_130_top_task);
		((P2 *)_this)->_6_16_21_130_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_16_21_130_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_16_21_130_top_task));
#endif
		;
		/* merge: found = 1(646, 639, 646) */
		reached[2][639] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_130_found);
		((P2 *)_this)->_6_16_21_130_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_16_21_130_found));
#endif
		;
		/* merge: .(goto)(0, 643, 646) */
		reached[2][643] = 1;
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[2][647] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 561: // STATE 641 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][641] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_16_21_130_prio);
		((P2 *)_this)->_6_16_21_130_prio = (((int)((P2 *)_this)->_6_16_21_130_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_16_21_130_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 562: // STATE 644 - resume_suspend.pml:227 - [(((prio>=4)||found))] (669:0:3 - 1)
		IfNotBlocked
		reached[2][644] = 1;
		if (!(((((int)((P2 *)_this)->_6_16_21_130_prio)>=4)||((int)((P2 *)_this)->_6_16_21_130_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_21_130_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_16_21_130_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_130_found = 0;
		/* merge: goto :b106(669, 645, 669) */
		reached[2][645] = 1;
		;
		/* merge: newTask = top_task(669, 649, 669) */
		reached[2][649] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_16_21_130_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[2][650] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_16_21_130_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 563: // STATE 649 - resume_suspend.pml:231 - [newTask = top_task] (0:669:2 - 3)
		IfNotBlocked
		reached[2][649] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_16_21_130_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[2][650] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_16_21_130_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 564: // STATE 652 - resume_suspend.pml:177 - [deq_idx = 0] (0:659:2 - 1)
		IfNotBlocked
		reached[2][652] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_16_21_131_deq_idx);
		((P2 *)_this)->_6_16_21_131_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_16_21_131_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(659, 653, 659) */
		reached[2][653] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_131_deq_idx);
		((P2 *)_this)->_6_16_21_131_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_16_21_131_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[2][660] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 565: // STATE 654 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (659:0:2 - 1)
		IfNotBlocked
		reached[2][654] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_131_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](659, 655, 659) */
		reached[2][655] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_16_21_131_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_16_21_131_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_16_21_131_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_16_21_131_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(659, 656, 659) */
		reached[2][656] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_16_21_131_deq_idx);
		((P2 *)_this)->_6_16_21_131_deq_idx = (((int)((P2 *)_this)->_6_16_21_131_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_16_21_131_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[2][660] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 566: // STATE 657 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][657] = 1;
		if (!((((int)((P2 *)_this)->_6_16_21_131_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_16_21_131_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_16_21_131_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_16_21_131_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 567: // STATE 662 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (673:0:4 - 1)
		IfNotBlocked
		reached[2][662] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(673, 663, 673) */
		reached[2][663] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(673, 664, 673) */
		reached[2][664] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(673, 668, 673) */
		reached[2][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[2][670] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[2][671] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 568: // STATE 666 - resume_suspend.pml:192 - [(1)] (673:0:2 - 1)
		IfNotBlocked
		reached[2][666] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(673, 668, 673) */
		reached[2][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[2][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[2][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 569: // STATE 670 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:673:2 - 3)
		IfNotBlocked
		reached[2][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[2][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 570: // STATE 672 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][672] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 571: // STATE 676 - resume_suspend.pml:506 - [((EP==3))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][676] = 1;
		if (!((((int)now.EP)==3)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 572: // STATE 677 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[2][677] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_currentTask);
		((P2 *)_this)->_6_17_22_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process3:currentTask", ((int)((P2 *)_this)->_6_17_22_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 573: // STATE 678 - resume_suspend.pml:377 - [((((4>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][678] = 1;
		if (!((((4>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 574: // STATE 679 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:693:6 - 1)
		IfNotBlocked
		reached[2][679] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(693, 680, 693) */
		reached[2][680] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(693, 682, 693) */
		reached[2][682] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_22_currentTask);
		((P2 *)_this)->_6_17_22_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:currentTask", ((int)((P2 *)_this)->_6_17_22_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(693, 683, 693) */
		reached[2][683] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_currentTask), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_17_22_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process3:currentTask].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+4)(693, 684, 693) */
		reached[2][684] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P2 *)_this)->_6_17_22_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+4);
#ifdef VAR_RANGES
		logval("tcb[Process3:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 4(693, 685, 693) */
		reached[2][685] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_17_22_currentTask, 5) ].delayTicks = 4;
#ifdef VAR_RANGES
		logval("tcb[Process3:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 575: // STATE 686 - resume_suspend.pml:70 - [((sortLink.count<8))] (821:0:2 - 1)
		IfNotBlocked
		reached[2][686] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(821, 687, 821) */
		reached[2][687] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P2 *)_this)->_6_17_22_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(821, 688, 821) */
		reached[2][688] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 692, 821) */
		reached[2][692] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 576: // STATE 690 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][690] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 577: // STATE 694 - resume_suspend.pml:401 - [interrupted_task = 0] (0:702:6 - 1)
		IfNotBlocked
		reached[2][694] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_interrupted_task);
		((P2 *)_this)->_6_17_22_135_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_22_135_interrupted_task));
#endif
		;
		/* merge: idx = 0(702, 695, 702) */
		reached[2][695] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_idx);
		((P2 *)_this)->_6_17_22_135_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_17_22_135_idx));
#endif
		;
		/* merge: taskId = 0(702, 696, 702) */
		reached[2][696] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_22_135_taskId);
		((P2 *)_this)->_6_17_22_135_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_17_22_135_taskId));
#endif
		;
		/* merge: needResched = 0(702, 697, 702) */
		reached[2][697] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_22_135_needResched);
		((P2 *)_this)->_6_17_22_135_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_22_135_needResched));
#endif
		;
		/* merge: interrupted_task = 0(702, 698, 702) */
		reached[2][698] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_17_22_135_interrupted_task);
		((P2 *)_this)->_6_17_22_135_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_22_135_interrupted_task));
#endif
		;
		/* merge: needResched = 0(702, 699, 702) */
		reached[2][699] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_17_22_135_needResched);
		((P2 *)_this)->_6_17_22_135_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_22_135_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 578: // STATE 700 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:759:4 - 1)
		IfNotBlocked
		reached[2][700] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(759, 701, 759) */
		reached[2][701] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(759, 703, 759) */
		reached[2][703] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(759, 704, 759) */
		reached[2][704] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_22_135_idx);
		((P2 *)_this)->_6_17_22_135_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_17_22_135_idx));
#endif
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[2][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 579: // STATE 705 - resume_suspend.pml:416 - [((idx<sortLink.count))] (755:0:1 - 1)
		IfNotBlocked
		reached[2][705] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 706, 755) */
		reached[2][706] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_135_taskId);
		((P2 *)_this)->_6_17_22_135_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_22_135_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_17_22_135_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 580: // STATE 707 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (743:0:2 - 1)
		IfNotBlocked
		reached[2][707] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(743, 708, 743) */
		reached[2][708] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_17_22_135_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(743, 709, 743) */
		reached[2][709] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_17_22_135_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 581: // STATE 710 - resume_suspend.pml:81 - [removePos = 0] (0:724:5 - 1)
		IfNotBlocked
		reached[2][710] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_37_removePos);
		((P2 *)_this)->_6_17_22_135_37_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_17_22_135_37_removePos));
#endif
		;
		/* merge: found = 0(724, 711, 724) */
		reached[2][711] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_37_found);
		((P2 *)_this)->_6_17_22_135_37_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_22_135_37_found));
#endif
		;
		/* merge: shiftIdx = 0(724, 712, 724) */
		reached[2][712] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx);
		((P2 *)_this)->_6_17_22_135_37_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx));
#endif
		;
		/* merge: removePos = 0(724, 713, 724) */
		reached[2][713] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_22_135_37_removePos);
		((P2 *)_this)->_6_17_22_135_37_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_17_22_135_37_removePos));
#endif
		;
		/* merge: found = 0(724, 714, 724) */
		reached[2][714] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_17_22_135_37_found);
		((P2 *)_this)->_6_17_22_135_37_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_22_135_37_found));
#endif
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[2][725] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 582: // STATE 715 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][715] = 1;
		if (!(((((int)((P2 *)_this)->_6_17_22_135_37_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_17_22_135_37_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 583: // STATE 716 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (724:0:1 - 1)
		IfNotBlocked
		reached[2][716] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_22_135_37_removePos), 8) ])==((int)((P2 *)_this)->_6_17_22_135_taskId))))
			continue;
		/* merge: found = 1(0, 717, 724) */
		reached[2][717] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_135_37_found);
		((P2 *)_this)->_6_17_22_135_37_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_22_135_37_found));
#endif
		;
		/* merge: .(goto)(0, 721, 724) */
		reached[2][721] = 1;
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[2][725] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 584: // STATE 719 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][719] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_135_37_removePos);
		((P2 *)_this)->_6_17_22_135_37_removePos = (((int)((P2 *)_this)->_6_17_22_135_37_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_17_22_135_37_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 585: // STATE 727 - resume_suspend.pml:100 - [((found==1))] (734:0:2 - 1)
		IfNotBlocked
		reached[2][727] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_37_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_22_135_37_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_22_135_37_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_37_found = 0;
		/* merge: shiftIdx = removePos(0, 728, 734) */
		reached[2][728] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx);
		((P2 *)_this)->_6_17_22_135_37_shiftIdx = ((int)((P2 *)_this)->_6_17_22_135_37_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[2][735] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 586: // STATE 729 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (734:0:2 - 1)
		IfNotBlocked
		reached[2][729] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](734, 730, 734) */
		reached[2][730] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_17_22_135_37_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(734, 731, 734) */
		reached[2][731] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx);
		((P2 *)_this)->_6_17_22_135_37_shiftIdx = (((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[2][735] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 587: // STATE 732 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (751:0:3 - 1)
		IfNotBlocked
		reached[2][732] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_37_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_22_135_37_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_22_135_37_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_37_shiftIdx = 0;
		/* merge: goto :b110(751, 733, 751) */
		reached[2][733] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(751, 737, 751) */
		reached[2][737] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[2][738] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[2][742] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 588: // STATE 737 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:751:2 - 3)
		IfNotBlocked
		reached[2][737] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[2][738] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[2][742] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 589: // STATE 744 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (759:0:4 - 1)
		IfNotBlocked
		reached[2][744] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(759, 745, 759) */
		reached[2][745] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_22_135_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_22_135_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_17_22_135_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(759, 746, 759) */
		reached[2][746] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_22_135_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(759, 750, 759) */
		reached[2][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[2][752] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_22_135_needResched);
		((P2 *)_this)->_6_17_22_135_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_22_135_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_17_22_135_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[2][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[2][760] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 590: // STATE 748 - resume_suspend.pml:140 - [assert(0)] (0:759:2 - 1)
		IfNotBlocked
		reached[2][748] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(759, 750, 759) */
		reached[2][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[2][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_needResched);
		((P2 *)_this)->_6_17_22_135_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_22_135_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_17_22_135_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[2][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[2][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 591: // STATE 752 - resume_suspend.pml:433 - [needResched = 1] (0:759:2 - 3)
		IfNotBlocked
		reached[2][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_needResched);
		((P2 *)_this)->_6_17_22_135_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_22_135_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_17_22_135_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[2][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[2][760] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 592: // STATE 754 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][754] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_135_idx);
		((P2 *)_this)->_6_17_22_135_idx = (((int)((P2 *)_this)->_6_17_22_135_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_17_22_135_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 593: // STATE 757 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (775:0:2 - 1)
		IfNotBlocked
		reached[2][757] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_22_135_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_22_135_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_idx = 0;
		/* merge: goto :b108(775, 758, 775) */
		reached[2][758] = 1;
		;
		/* merge: interrupted_task = EP(775, 762, 775) */
		reached[2][762] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_interrupted_task);
		((P2 *)_this)->_6_17_22_135_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_22_135_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 594: // STATE 762 - resume_suspend.pml:442 - [interrupted_task = EP] (0:775:1 - 3)
		IfNotBlocked
		reached[2][762] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_135_interrupted_task);
		((P2 *)_this)->_6_17_22_135_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_22_135_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 595: // STATE 763 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (772:0:1 - 1)
		IfNotBlocked
		reached[2][763] = 1;
		if (!((((((int)((P2 *)_this)->_6_17_22_135_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_17_22_135_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 764, 772) */
		reached[2][764] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_17_22_135_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 596: // STATE 765 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (798:0:2 - 1)
		IfNotBlocked
		reached[2][765] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(798, 766, 798) */
		reached[2][766] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_22_135_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_22_135_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_17_22_135_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(798, 767, 798) */
		reached[2][767] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_22_135_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_22_135_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 771, 798) */
		reached[2][771] = 1;
		;
		/* merge: .(goto)(0, 776, 798) */
		reached[2][776] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 597: // STATE 769 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][769] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 598: // STATE 777 - resume_suspend.pml:208 - [prio = 0] (0:793:6 - 1)
		IfNotBlocked
		reached[2][777] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_40_prio);
		((P2 *)_this)->_6_17_22_135_40_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_17_22_135_40_prio));
#endif
		;
		/* merge: top_task = 0(793, 778, 793) */
		reached[2][778] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_40_top_task);
		((P2 *)_this)->_6_17_22_135_40_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_17_22_135_40_top_task));
#endif
		;
		/* merge: found = 0(793, 779, 793) */
		reached[2][779] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_22_135_40_found);
		((P2 *)_this)->_6_17_22_135_40_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_22_135_40_found));
#endif
		;
		/* merge: prio = 0(793, 780, 793) */
		reached[2][780] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_22_135_40_prio);
		((P2 *)_this)->_6_17_22_135_40_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_17_22_135_40_prio));
#endif
		;
		/* merge: top_task = 0(793, 781, 793) */
		reached[2][781] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_17_22_135_40_top_task);
		((P2 *)_this)->_6_17_22_135_40_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_17_22_135_40_top_task));
#endif
		;
		/* merge: found = 0(793, 782, 793) */
		reached[2][782] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_17_22_135_40_found);
		((P2 *)_this)->_6_17_22_135_40_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_22_135_40_found));
#endif
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[2][794] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 599: // STATE 783 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][783] = 1;
		if (!(((((int)((P2 *)_this)->_6_17_22_135_40_prio)<4)&& !(((int)((P2 *)_this)->_6_17_22_135_40_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 600: // STATE 784 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (793:0:2 - 1)
		IfNotBlocked
		reached[2][784] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_17_22_135_40_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](793, 785, 793) */
		reached[2][785] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_40_top_task);
		((P2 *)_this)->_6_17_22_135_40_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_17_22_135_40_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_17_22_135_40_top_task));
#endif
		;
		/* merge: found = 1(793, 786, 793) */
		reached[2][786] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_40_found);
		((P2 *)_this)->_6_17_22_135_40_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_22_135_40_found));
#endif
		;
		/* merge: .(goto)(0, 790, 793) */
		reached[2][790] = 1;
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[2][794] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 601: // STATE 788 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][788] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_22_135_40_prio);
		((P2 *)_this)->_6_17_22_135_40_prio = (((int)((P2 *)_this)->_6_17_22_135_40_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_17_22_135_40_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 602: // STATE 791 - resume_suspend.pml:227 - [(((prio>=4)||found))] (816:0:3 - 1)
		IfNotBlocked
		reached[2][791] = 1;
		if (!(((((int)((P2 *)_this)->_6_17_22_135_40_prio)>=4)||((int)((P2 *)_this)->_6_17_22_135_40_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_22_135_40_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_22_135_40_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_40_found = 0;
		/* merge: goto :b111(816, 792, 816) */
		reached[2][792] = 1;
		;
		/* merge: newTask = top_task(816, 796, 816) */
		reached[2][796] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_17_22_135_40_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[2][797] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_17_22_135_40_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 603: // STATE 796 - resume_suspend.pml:231 - [newTask = top_task] (0:816:2 - 3)
		IfNotBlocked
		reached[2][796] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_17_22_135_40_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[2][797] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_17_22_135_40_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 604: // STATE 799 - resume_suspend.pml:177 - [deq_idx = 0] (0:806:2 - 1)
		IfNotBlocked
		reached[2][799] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_22_135_41_deq_idx);
		((P2 *)_this)->_6_17_22_135_41_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_17_22_135_41_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(806, 800, 806) */
		reached[2][800] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_41_deq_idx);
		((P2 *)_this)->_6_17_22_135_41_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_17_22_135_41_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[2][807] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 605: // STATE 801 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (806:0:2 - 1)
		IfNotBlocked
		reached[2][801] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_41_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](806, 802, 806) */
		reached[2][802] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_17_22_135_41_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_17_22_135_41_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_17_22_135_41_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_17_22_135_41_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(806, 803, 806) */
		reached[2][803] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_22_135_41_deq_idx);
		((P2 *)_this)->_6_17_22_135_41_deq_idx = (((int)((P2 *)_this)->_6_17_22_135_41_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_17_22_135_41_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[2][807] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 606: // STATE 804 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][804] = 1;
		if (!((((int)((P2 *)_this)->_6_17_22_135_41_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_22_135_41_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_17_22_135_41_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_22_135_41_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 607: // STATE 809 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (820:0:4 - 1)
		IfNotBlocked
		reached[2][809] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(820, 810, 820) */
		reached[2][810] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(820, 811, 820) */
		reached[2][811] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(820, 815, 820) */
		reached[2][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[2][817] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[2][818] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 608: // STATE 813 - resume_suspend.pml:192 - [(1)] (820:0:2 - 1)
		IfNotBlocked
		reached[2][813] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(820, 815, 820) */
		reached[2][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[2][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[2][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 609: // STATE 817 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:820:2 - 3)
		IfNotBlocked
		reached[2][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[2][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 610: // STATE 819 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][819] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 611: // STATE 822 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][822] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 612: // STATE 829 - resume_suspend.pml:401 - [interrupted_task = 0] (0:837:6 - 1)
		IfNotBlocked
		reached[2][829] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_interrupted_task);
		((P2 *)_this)->_6_17_23_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_23_interrupted_task));
#endif
		;
		/* merge: idx = 0(837, 830, 837) */
		reached[2][830] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_idx);
		((P2 *)_this)->_6_17_23_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_17_23_idx));
#endif
		;
		/* merge: taskId = 0(837, 831, 837) */
		reached[2][831] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_23_taskId);
		((P2 *)_this)->_6_17_23_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_17_23_taskId));
#endif
		;
		/* merge: needResched = 0(837, 832, 837) */
		reached[2][832] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_23_needResched);
		((P2 *)_this)->_6_17_23_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_23_needResched));
#endif
		;
		/* merge: interrupted_task = 0(837, 833, 837) */
		reached[2][833] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_17_23_interrupted_task);
		((P2 *)_this)->_6_17_23_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_23_interrupted_task));
#endif
		;
		/* merge: needResched = 0(837, 834, 837) */
		reached[2][834] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_17_23_needResched);
		((P2 *)_this)->_6_17_23_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_23_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 613: // STATE 835 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:894:4 - 1)
		IfNotBlocked
		reached[2][835] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(894, 836, 894) */
		reached[2][836] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(894, 838, 894) */
		reached[2][838] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(894, 839, 894) */
		reached[2][839] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_23_idx);
		((P2 *)_this)->_6_17_23_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_17_23_idx));
#endif
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[2][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 614: // STATE 840 - resume_suspend.pml:416 - [((idx<sortLink.count))] (890:0:1 - 1)
		IfNotBlocked
		reached[2][840] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 841, 890) */
		reached[2][841] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_23_taskId);
		((P2 *)_this)->_6_17_23_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_23_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_17_23_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 615: // STATE 842 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (878:0:2 - 1)
		IfNotBlocked
		reached[2][842] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(878, 843, 878) */
		reached[2][843] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_17_23_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(878, 844, 878) */
		reached[2][844] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_17_23_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 616: // STATE 845 - resume_suspend.pml:81 - [removePos = 0] (0:859:5 - 1)
		IfNotBlocked
		reached[2][845] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_138_removePos);
		((P2 *)_this)->_6_17_23_138_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_17_23_138_removePos));
#endif
		;
		/* merge: found = 0(859, 846, 859) */
		reached[2][846] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_138_found);
		((P2 *)_this)->_6_17_23_138_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_23_138_found));
#endif
		;
		/* merge: shiftIdx = 0(859, 847, 859) */
		reached[2][847] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_23_138_shiftIdx);
		((P2 *)_this)->_6_17_23_138_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_17_23_138_shiftIdx));
#endif
		;
		/* merge: removePos = 0(859, 848, 859) */
		reached[2][848] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_23_138_removePos);
		((P2 *)_this)->_6_17_23_138_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_17_23_138_removePos));
#endif
		;
		/* merge: found = 0(859, 849, 859) */
		reached[2][849] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_17_23_138_found);
		((P2 *)_this)->_6_17_23_138_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_23_138_found));
#endif
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[2][860] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 617: // STATE 850 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][850] = 1;
		if (!(((((int)((P2 *)_this)->_6_17_23_138_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_17_23_138_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 618: // STATE 851 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (859:0:1 - 1)
		IfNotBlocked
		reached[2][851] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_23_138_removePos), 8) ])==((int)((P2 *)_this)->_6_17_23_taskId))))
			continue;
		/* merge: found = 1(0, 852, 859) */
		reached[2][852] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_23_138_found);
		((P2 *)_this)->_6_17_23_138_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_23_138_found));
#endif
		;
		/* merge: .(goto)(0, 856, 859) */
		reached[2][856] = 1;
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[2][860] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 619: // STATE 854 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][854] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_23_138_removePos);
		((P2 *)_this)->_6_17_23_138_removePos = (((int)((P2 *)_this)->_6_17_23_138_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_17_23_138_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 620: // STATE 862 - resume_suspend.pml:100 - [((found==1))] (869:0:2 - 1)
		IfNotBlocked
		reached[2][862] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_138_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_23_138_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_23_138_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_138_found = 0;
		/* merge: shiftIdx = removePos(0, 863, 869) */
		reached[2][863] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_138_shiftIdx);
		((P2 *)_this)->_6_17_23_138_shiftIdx = ((int)((P2 *)_this)->_6_17_23_138_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_17_23_138_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[2][870] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 621: // STATE 864 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (869:0:2 - 1)
		IfNotBlocked
		reached[2][864] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_138_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](869, 865, 869) */
		reached[2][865] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_23_138_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_17_23_138_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_17_23_138_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_17_23_138_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(869, 866, 869) */
		reached[2][866] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_138_shiftIdx);
		((P2 *)_this)->_6_17_23_138_shiftIdx = (((int)((P2 *)_this)->_6_17_23_138_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_17_23_138_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[2][870] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 622: // STATE 867 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (886:0:3 - 1)
		IfNotBlocked
		reached[2][867] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_138_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_23_138_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_23_138_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_138_shiftIdx = 0;
		/* merge: goto :b115(886, 868, 886) */
		reached[2][868] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(886, 872, 886) */
		reached[2][872] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[2][873] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[2][877] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 623: // STATE 872 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:886:2 - 3)
		IfNotBlocked
		reached[2][872] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[2][873] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[2][877] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 624: // STATE 879 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (894:0:4 - 1)
		IfNotBlocked
		reached[2][879] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(894, 880, 894) */
		reached[2][880] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_23_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_23_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_17_23_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(894, 881, 894) */
		reached[2][881] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_23_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(894, 885, 894) */
		reached[2][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[2][887] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_23_needResched);
		((P2 *)_this)->_6_17_23_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_23_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_17_23_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[2][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[2][895] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 625: // STATE 883 - resume_suspend.pml:140 - [assert(0)] (0:894:2 - 1)
		IfNotBlocked
		reached[2][883] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(894, 885, 894) */
		reached[2][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[2][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_needResched);
		((P2 *)_this)->_6_17_23_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_23_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_17_23_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[2][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[2][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 626: // STATE 887 - resume_suspend.pml:433 - [needResched = 1] (0:894:2 - 3)
		IfNotBlocked
		reached[2][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_needResched);
		((P2 *)_this)->_6_17_23_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_17_23_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_17_23_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[2][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[2][895] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 627: // STATE 889 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][889] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_23_idx);
		((P2 *)_this)->_6_17_23_idx = (((int)((P2 *)_this)->_6_17_23_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_17_23_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 628: // STATE 892 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (910:0:2 - 1)
		IfNotBlocked
		reached[2][892] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_23_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_23_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_idx = 0;
		/* merge: goto :b113(910, 893, 910) */
		reached[2][893] = 1;
		;
		/* merge: interrupted_task = EP(910, 897, 910) */
		reached[2][897] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_interrupted_task);
		((P2 *)_this)->_6_17_23_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_23_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 629: // STATE 897 - resume_suspend.pml:442 - [interrupted_task = EP] (0:910:1 - 3)
		IfNotBlocked
		reached[2][897] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_23_interrupted_task);
		((P2 *)_this)->_6_17_23_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_17_23_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 630: // STATE 898 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (907:0:1 - 1)
		IfNotBlocked
		reached[2][898] = 1;
		if (!((((((int)((P2 *)_this)->_6_17_23_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_17_23_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 899, 907) */
		reached[2][899] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_17_23_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 631: // STATE 900 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (933:0:2 - 1)
		IfNotBlocked
		reached[2][900] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(933, 901, 933) */
		reached[2][901] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_23_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_23_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_17_23_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(933, 902, 933) */
		reached[2][902] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_17_23_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_17_23_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 906, 933) */
		reached[2][906] = 1;
		;
		/* merge: .(goto)(0, 911, 933) */
		reached[2][911] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 632: // STATE 904 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][904] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 633: // STATE 912 - resume_suspend.pml:208 - [prio = 0] (0:928:6 - 1)
		IfNotBlocked
		reached[2][912] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_141_prio);
		((P2 *)_this)->_6_17_23_141_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_17_23_141_prio));
#endif
		;
		/* merge: top_task = 0(928, 913, 928) */
		reached[2][913] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_141_top_task);
		((P2 *)_this)->_6_17_23_141_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_17_23_141_top_task));
#endif
		;
		/* merge: found = 0(928, 914, 928) */
		reached[2][914] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_17_23_141_found);
		((P2 *)_this)->_6_17_23_141_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_23_141_found));
#endif
		;
		/* merge: prio = 0(928, 915, 928) */
		reached[2][915] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_17_23_141_prio);
		((P2 *)_this)->_6_17_23_141_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_17_23_141_prio));
#endif
		;
		/* merge: top_task = 0(928, 916, 928) */
		reached[2][916] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_17_23_141_top_task);
		((P2 *)_this)->_6_17_23_141_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_17_23_141_top_task));
#endif
		;
		/* merge: found = 0(928, 917, 928) */
		reached[2][917] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_17_23_141_found);
		((P2 *)_this)->_6_17_23_141_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_23_141_found));
#endif
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[2][929] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 634: // STATE 918 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][918] = 1;
		if (!(((((int)((P2 *)_this)->_6_17_23_141_prio)<4)&& !(((int)((P2 *)_this)->_6_17_23_141_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 635: // STATE 919 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (928:0:2 - 1)
		IfNotBlocked
		reached[2][919] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_17_23_141_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](928, 920, 928) */
		reached[2][920] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_141_top_task);
		((P2 *)_this)->_6_17_23_141_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_17_23_141_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_17_23_141_top_task));
#endif
		;
		/* merge: found = 1(928, 921, 928) */
		reached[2][921] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_141_found);
		((P2 *)_this)->_6_17_23_141_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_17_23_141_found));
#endif
		;
		/* merge: .(goto)(0, 925, 928) */
		reached[2][925] = 1;
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[2][929] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 636: // STATE 923 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][923] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_17_23_141_prio);
		((P2 *)_this)->_6_17_23_141_prio = (((int)((P2 *)_this)->_6_17_23_141_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_17_23_141_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 637: // STATE 926 - resume_suspend.pml:227 - [(((prio>=4)||found))] (951:0:3 - 1)
		IfNotBlocked
		reached[2][926] = 1;
		if (!(((((int)((P2 *)_this)->_6_17_23_141_prio)>=4)||((int)((P2 *)_this)->_6_17_23_141_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_23_141_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_17_23_141_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_141_found = 0;
		/* merge: goto :b116(951, 927, 951) */
		reached[2][927] = 1;
		;
		/* merge: newTask = top_task(951, 931, 951) */
		reached[2][931] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_17_23_141_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[2][932] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_17_23_141_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 638: // STATE 931 - resume_suspend.pml:231 - [newTask = top_task] (0:951:2 - 3)
		IfNotBlocked
		reached[2][931] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_17_23_141_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[2][932] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_17_23_141_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 639: // STATE 934 - resume_suspend.pml:177 - [deq_idx = 0] (0:941:2 - 1)
		IfNotBlocked
		reached[2][934] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_17_23_142_deq_idx);
		((P2 *)_this)->_6_17_23_142_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_17_23_142_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(941, 935, 941) */
		reached[2][935] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_142_deq_idx);
		((P2 *)_this)->_6_17_23_142_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_17_23_142_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[2][942] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 640: // STATE 936 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (941:0:2 - 1)
		IfNotBlocked
		reached[2][936] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_142_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](941, 937, 941) */
		reached[2][937] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_17_23_142_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_17_23_142_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_17_23_142_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_17_23_142_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(941, 938, 941) */
		reached[2][938] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_17_23_142_deq_idx);
		((P2 *)_this)->_6_17_23_142_deq_idx = (((int)((P2 *)_this)->_6_17_23_142_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_17_23_142_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[2][942] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 641: // STATE 939 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][939] = 1;
		if (!((((int)((P2 *)_this)->_6_17_23_142_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_17_23_142_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_17_23_142_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_17_23_142_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 642: // STATE 944 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (955:0:4 - 1)
		IfNotBlocked
		reached[2][944] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(955, 945, 955) */
		reached[2][945] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(955, 946, 955) */
		reached[2][946] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(955, 950, 955) */
		reached[2][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[2][952] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[2][953] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 643: // STATE 948 - resume_suspend.pml:192 - [(1)] (955:0:2 - 1)
		IfNotBlocked
		reached[2][948] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(955, 950, 955) */
		reached[2][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[2][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[2][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 644: // STATE 952 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:955:2 - 3)
		IfNotBlocked
		reached[2][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[2][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 645: // STATE 954 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][954] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 646: // STATE 958 - resume_suspend.pml:507 - [((counter<100))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][958] = 1;
		if (!((((int)((P2 *)_this)->counter)<100)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 647: // STATE 959 - resume_suspend.pml:507 - [((EP==3))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][959] = 1;
		if (!((((int)now.EP)==3)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 648: // STATE 961 - resume_suspend.pml:401 - [interrupted_task = 0] (0:969:6 - 1)
		IfNotBlocked
		reached[2][961] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_interrupted_task);
		((P2 *)_this)->_6_18_24_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_18_24_interrupted_task));
#endif
		;
		/* merge: idx = 0(969, 962, 969) */
		reached[2][962] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_idx);
		((P2 *)_this)->_6_18_24_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_18_24_idx));
#endif
		;
		/* merge: taskId = 0(969, 963, 969) */
		reached[2][963] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_18_24_taskId);
		((P2 *)_this)->_6_18_24_taskId = 0;
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_18_24_taskId));
#endif
		;
		/* merge: needResched = 0(969, 964, 969) */
		reached[2][964] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_18_24_needResched);
		((P2 *)_this)->_6_18_24_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_18_24_needResched));
#endif
		;
		/* merge: interrupted_task = 0(969, 965, 969) */
		reached[2][965] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_18_24_interrupted_task);
		((P2 *)_this)->_6_18_24_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_18_24_interrupted_task));
#endif
		;
		/* merge: needResched = 0(969, 966, 969) */
		reached[2][966] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_18_24_needResched);
		((P2 *)_this)->_6_18_24_needResched = 0;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_18_24_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 649: // STATE 967 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:1026:4 - 1)
		IfNotBlocked
		reached[2][967] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(1026, 968, 1026) */
		reached[2][968] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(1026, 970, 1026) */
		reached[2][970] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(1026, 971, 1026) */
		reached[2][971] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_18_24_idx);
		((P2 *)_this)->_6_18_24_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_18_24_idx));
#endif
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[2][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 650: // STATE 972 - resume_suspend.pml:416 - [((idx<sortLink.count))] (1022:0:1 - 1)
		IfNotBlocked
		reached[2][972] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 973, 1022) */
		reached[2][973] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_18_24_taskId);
		((P2 *)_this)->_6_18_24_taskId = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_18_24_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process3:taskId", ((int)((P2 *)_this)->_6_18_24_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 651: // STATE 974 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (1010:0:2 - 1)
		IfNotBlocked
		reached[2][974] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(1010, 975, 1010) */
		reached[2][975] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_18_24_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(1010, 976, 1010) */
		reached[2][976] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P2 *)_this)->_6_18_24_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process3:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 652: // STATE 977 - resume_suspend.pml:81 - [removePos = 0] (0:991:5 - 1)
		IfNotBlocked
		reached[2][977] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_145_removePos);
		((P2 *)_this)->_6_18_24_145_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_18_24_145_removePos));
#endif
		;
		/* merge: found = 0(991, 978, 991) */
		reached[2][978] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_145_found);
		((P2 *)_this)->_6_18_24_145_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_18_24_145_found));
#endif
		;
		/* merge: shiftIdx = 0(991, 979, 991) */
		reached[2][979] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_18_24_145_shiftIdx);
		((P2 *)_this)->_6_18_24_145_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_18_24_145_shiftIdx));
#endif
		;
		/* merge: removePos = 0(991, 980, 991) */
		reached[2][980] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_18_24_145_removePos);
		((P2 *)_this)->_6_18_24_145_removePos = 0;
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_18_24_145_removePos));
#endif
		;
		/* merge: found = 0(991, 981, 991) */
		reached[2][981] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_18_24_145_found);
		((P2 *)_this)->_6_18_24_145_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_18_24_145_found));
#endif
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[2][992] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 653: // STATE 982 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][982] = 1;
		if (!(((((int)((P2 *)_this)->_6_18_24_145_removePos)<((int)now.sortLink.count))&& !(((int)((P2 *)_this)->_6_18_24_145_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 654: // STATE 983 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (991:0:1 - 1)
		IfNotBlocked
		reached[2][983] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_18_24_145_removePos), 8) ])==((int)((P2 *)_this)->_6_18_24_taskId))))
			continue;
		/* merge: found = 1(0, 984, 991) */
		reached[2][984] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_18_24_145_found);
		((P2 *)_this)->_6_18_24_145_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_18_24_145_found));
#endif
		;
		/* merge: .(goto)(0, 988, 991) */
		reached[2][988] = 1;
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[2][992] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 655: // STATE 986 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][986] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_18_24_145_removePos);
		((P2 *)_this)->_6_18_24_145_removePos = (((int)((P2 *)_this)->_6_18_24_145_removePos)+1);
#ifdef VAR_RANGES
		logval("Process3:removePos", ((int)((P2 *)_this)->_6_18_24_145_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 656: // STATE 994 - resume_suspend.pml:100 - [((found==1))] (1001:0:2 - 1)
		IfNotBlocked
		reached[2][994] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_145_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_18_24_145_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_18_24_145_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_145_found = 0;
		/* merge: shiftIdx = removePos(0, 995, 1001) */
		reached[2][995] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_145_shiftIdx);
		((P2 *)_this)->_6_18_24_145_shiftIdx = ((int)((P2 *)_this)->_6_18_24_145_removePos);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_18_24_145_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[2][1002] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 657: // STATE 996 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (1001:0:2 - 1)
		IfNotBlocked
		reached[2][996] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_145_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](1001, 997, 1001) */
		reached[2][997] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_18_24_145_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P2 *)_this)->_6_18_24_145_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P2 *)_this)->_6_18_24_145_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process3:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P2 *)_this)->_6_18_24_145_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(1001, 998, 1001) */
		reached[2][998] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_145_shiftIdx);
		((P2 *)_this)->_6_18_24_145_shiftIdx = (((int)((P2 *)_this)->_6_18_24_145_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process3:shiftIdx", ((int)((P2 *)_this)->_6_18_24_145_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[2][1002] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 658: // STATE 999 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (1018:0:3 - 1)
		IfNotBlocked
		reached[2][999] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_145_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_18_24_145_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_18_24_145_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_145_shiftIdx = 0;
		/* merge: goto :b120(1018, 1000, 1018) */
		reached[2][1000] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(1018, 1004, 1018) */
		reached[2][1004] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[2][1005] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[2][1009] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 659: // STATE 1004 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:1018:2 - 3)
		IfNotBlocked
		reached[2][1004] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[2][1005] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[2][1009] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 660: // STATE 1011 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (1026:0:4 - 1)
		IfNotBlocked
		reached[2][1011] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(1026, 1012, 1026) */
		reached[2][1012] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_18_24_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_18_24_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_18_24_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tasks[readyQueue[tcb[Process3:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(1026, 1013, 1026) */
		reached[2][1013] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_18_24_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[2][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[2][1019] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_18_24_needResched);
		((P2 *)_this)->_6_18_24_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_18_24_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_18_24_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[2][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[2][1027] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 661: // STATE 1015 - resume_suspend.pml:140 - [assert(0)] (0:1026:2 - 1)
		IfNotBlocked
		reached[2][1015] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[2][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[2][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_needResched);
		((P2 *)_this)->_6_18_24_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_18_24_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_18_24_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[2][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[2][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 662: // STATE 1019 - resume_suspend.pml:433 - [needResched = 1] (0:1026:2 - 3)
		IfNotBlocked
		reached[2][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_needResched);
		((P2 *)_this)->_6_18_24_needResched = 1;
#ifdef VAR_RANGES
		logval("Process3:needResched", ((int)((P2 *)_this)->_6_18_24_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _6_18_24_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[2][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[2][1027] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 663: // STATE 1021 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][1021] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_18_24_idx);
		((P2 *)_this)->_6_18_24_idx = (((int)((P2 *)_this)->_6_18_24_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:idx", ((int)((P2 *)_this)->_6_18_24_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 664: // STATE 1024 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (1042:0:2 - 1)
		IfNotBlocked
		reached[2][1024] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_18_24_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_18_24_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_idx = 0;
		/* merge: goto :b118(1042, 1025, 1042) */
		reached[2][1025] = 1;
		;
		/* merge: interrupted_task = EP(1042, 1029, 1042) */
		reached[2][1029] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_interrupted_task);
		((P2 *)_this)->_6_18_24_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_18_24_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 665: // STATE 1029 - resume_suspend.pml:442 - [interrupted_task = EP] (0:1042:1 - 3)
		IfNotBlocked
		reached[2][1029] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_18_24_interrupted_task);
		((P2 *)_this)->_6_18_24_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process3:interrupted_task", ((int)((P2 *)_this)->_6_18_24_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 666: // STATE 1030 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (1039:0:1 - 1)
		IfNotBlocked
		reached[2][1030] = 1;
		if (!((((((int)((P2 *)_this)->_6_18_24_interrupted_task)>=1)&&(((int)((P2 *)_this)->_6_18_24_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 1031, 1039) */
		reached[2][1031] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].state);
		now.tcb[ Index(((P2 *)_this)->_6_18_24_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process3:interrupted_task].state", ((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 667: // STATE 1032 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (1065:0:2 - 1)
		IfNotBlocked
		reached[2][1032] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(1065, 1033, 1065) */
		reached[2][1033] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_18_24_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_18_24_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P2 *)_this)->_6_18_24_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tasks[readyQueue[tcb[Process3:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(1065, 1034, 1065) */
		reached[2][1034] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P2 *)_this)->_6_18_24_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process3:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P2 *)_this)->_6_18_24_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 1038, 1065) */
		reached[2][1038] = 1;
		;
		/* merge: .(goto)(0, 1043, 1065) */
		reached[2][1043] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 668: // STATE 1036 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[2][1036] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 669: // STATE 1044 - resume_suspend.pml:208 - [prio = 0] (0:1060:6 - 1)
		IfNotBlocked
		reached[2][1044] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_148_prio);
		((P2 *)_this)->_6_18_24_148_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_18_24_148_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1045, 1060) */
		reached[2][1045] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_148_top_task);
		((P2 *)_this)->_6_18_24_148_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_18_24_148_top_task));
#endif
		;
		/* merge: found = 0(1060, 1046, 1060) */
		reached[2][1046] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P2 *)_this)->_6_18_24_148_found);
		((P2 *)_this)->_6_18_24_148_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_18_24_148_found));
#endif
		;
		/* merge: prio = 0(1060, 1047, 1060) */
		reached[2][1047] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P2 *)_this)->_6_18_24_148_prio);
		((P2 *)_this)->_6_18_24_148_prio = 0;
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_18_24_148_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1048, 1060) */
		reached[2][1048] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P2 *)_this)->_6_18_24_148_top_task);
		((P2 *)_this)->_6_18_24_148_top_task = 0;
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_18_24_148_top_task));
#endif
		;
		/* merge: found = 0(1060, 1049, 1060) */
		reached[2][1049] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P2 *)_this)->_6_18_24_148_found);
		((P2 *)_this)->_6_18_24_148_found = 0;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_18_24_148_found));
#endif
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[2][1061] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 670: // STATE 1050 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[2][1050] = 1;
		if (!(((((int)((P2 *)_this)->_6_18_24_148_prio)<4)&& !(((int)((P2 *)_this)->_6_18_24_148_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 671: // STATE 1051 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (1060:0:2 - 1)
		IfNotBlocked
		reached[2][1051] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_18_24_148_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](1060, 1052, 1060) */
		reached[2][1052] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_148_top_task);
		((P2 *)_this)->_6_18_24_148_top_task = ((int)now.readyQueue[ Index(((int)((P2 *)_this)->_6_18_24_148_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process3:top_task", ((int)((P2 *)_this)->_6_18_24_148_top_task));
#endif
		;
		/* merge: found = 1(1060, 1053, 1060) */
		reached[2][1053] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_148_found);
		((P2 *)_this)->_6_18_24_148_found = 1;
#ifdef VAR_RANGES
		logval("Process3:found", ((int)((P2 *)_this)->_6_18_24_148_found));
#endif
		;
		/* merge: .(goto)(0, 1057, 1060) */
		reached[2][1057] = 1;
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[2][1061] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 672: // STATE 1055 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[2][1055] = 1;
		(trpt+1)->bup.oval = ((int)((P2 *)_this)->_6_18_24_148_prio);
		((P2 *)_this)->_6_18_24_148_prio = (((int)((P2 *)_this)->_6_18_24_148_prio)+1);
#ifdef VAR_RANGES
		logval("Process3:prio", ((int)((P2 *)_this)->_6_18_24_148_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 673: // STATE 1058 - resume_suspend.pml:227 - [(((prio>=4)||found))] (1083:0:3 - 1)
		IfNotBlocked
		reached[2][1058] = 1;
		if (!(((((int)((P2 *)_this)->_6_18_24_148_prio)>=4)||((int)((P2 *)_this)->_6_18_24_148_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_18_24_148_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P2 *)_this)->_6_18_24_148_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_148_found = 0;
		/* merge: goto :b121(1083, 1059, 1083) */
		reached[2][1059] = 1;
		;
		/* merge: newTask = top_task(1083, 1063, 1083) */
		reached[2][1063] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_18_24_148_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[2][1064] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_18_24_148_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 674: // STATE 1063 - resume_suspend.pml:231 - [newTask = top_task] (0:1083:2 - 3)
		IfNotBlocked
		reached[2][1063] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P2 *)_this)->_6_18_24_148_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[2][1064] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P2 *)_this)->_6_18_24_148_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 675: // STATE 1066 - resume_suspend.pml:177 - [deq_idx = 0] (0:1073:2 - 1)
		IfNotBlocked
		reached[2][1066] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P2 *)_this)->_6_18_24_149_deq_idx);
		((P2 *)_this)->_6_18_24_149_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_18_24_149_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(1073, 1067, 1073) */
		reached[2][1067] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_149_deq_idx);
		((P2 *)_this)->_6_18_24_149_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_18_24_149_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[2][1074] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 676: // STATE 1068 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (1073:0:2 - 1)
		IfNotBlocked
		reached[2][1068] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_149_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](1073, 1069, 1073) */
		reached[2][1069] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_18_24_149_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P2 *)_this)->_6_18_24_149_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P2 *)_this)->_6_18_24_149_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process3:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P2 *)_this)->_6_18_24_149_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(1073, 1070, 1073) */
		reached[2][1070] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P2 *)_this)->_6_18_24_149_deq_idx);
		((P2 *)_this)->_6_18_24_149_deq_idx = (((int)((P2 *)_this)->_6_18_24_149_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process3:deq_idx", ((int)((P2 *)_this)->_6_18_24_149_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[2][1074] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 677: // STATE 1071 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[2][1071] = 1;
		if (!((((int)((P2 *)_this)->_6_18_24_149_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _6_18_24_149_deq_idx */  (trpt+1)->bup.oval = ((P2 *)_this)->_6_18_24_149_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P2 *)_this)->_6_18_24_149_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 678: // STATE 1076 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (1087:0:4 - 1)
		IfNotBlocked
		reached[2][1076] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(1087, 1077, 1087) */
		reached[2][1077] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(1087, 1078, 1087) */
		reached[2][1078] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[2][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[2][1084] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[2][1085] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 679: // STATE 1080 - resume_suspend.pml:192 - [(1)] (1087:0:2 - 1)
		IfNotBlocked
		reached[2][1080] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[2][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[2][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[2][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 680: // STATE 1084 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:1087:2 - 3)
		IfNotBlocked
		reached[2][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[2][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 681: // STATE 1086 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[2][1086] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 682: // STATE 1093 - resume_suspend.pml:509 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[2][1093] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC Process2 */
	case 683: // STATE 1 - resume_suspend.pml:488 - [((EP==2))] (130:0:0 - 1)
		IfNotBlocked
		reached[1][1] = 1;
		if (!((((int)now.EP)==2)))
			continue;
		/* merge: printf('Process 2 running, counter=%d\\n',counter)(0, 2, 130) */
		reached[1][2] = 1;
		Printf("Process 2 running, counter=%d\n", ((int)((P1 *)_this)->counter));
		_m = 3; goto P999; /* 1 */
	case 684: // STATE 3 - resume_suspend.pml:401 - [interrupted_task = 0] (0:11:6 - 1)
		IfNotBlocked
		reached[1][3] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_interrupted_task);
		((P1 *)_this)->_5_7_9_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_7_9_interrupted_task));
#endif
		;
		/* merge: idx = 0(11, 4, 11) */
		reached[1][4] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_idx);
		((P1 *)_this)->_5_7_9_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_7_9_idx));
#endif
		;
		/* merge: taskId = 0(11, 5, 11) */
		reached[1][5] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_7_9_taskId);
		((P1 *)_this)->_5_7_9_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_7_9_taskId));
#endif
		;
		/* merge: needResched = 0(11, 6, 11) */
		reached[1][6] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_7_9_needResched);
		((P1 *)_this)->_5_7_9_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_7_9_needResched));
#endif
		;
		/* merge: interrupted_task = 0(11, 7, 11) */
		reached[1][7] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_7_9_interrupted_task);
		((P1 *)_this)->_5_7_9_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_7_9_interrupted_task));
#endif
		;
		/* merge: needResched = 0(11, 8, 11) */
		reached[1][8] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_7_9_needResched);
		((P1 *)_this)->_5_7_9_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_7_9_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 685: // STATE 9 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:68:4 - 1)
		IfNotBlocked
		reached[1][9] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(68, 10, 68) */
		reached[1][10] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(68, 12, 68) */
		reached[1][12] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(68, 13, 68) */
		reached[1][13] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_7_9_idx);
		((P1 *)_this)->_5_7_9_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_7_9_idx));
#endif
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[1][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 686: // STATE 14 - resume_suspend.pml:416 - [((idx<sortLink.count))] (64:0:1 - 1)
		IfNotBlocked
		reached[1][14] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 15, 64) */
		reached[1][15] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_7_9_taskId);
		((P1 *)_this)->_5_7_9_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_7_9_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_7_9_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 687: // STATE 16 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (52:0:2 - 1)
		IfNotBlocked
		reached[1][16] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(52, 17, 52) */
		reached[1][17] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_7_9_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(52, 18, 52) */
		reached[1][18] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_7_9_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 688: // STATE 19 - resume_suspend.pml:81 - [removePos = 0] (0:33:5 - 1)
		IfNotBlocked
		reached[1][19] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_52_removePos);
		((P1 *)_this)->_5_7_9_52_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_7_9_52_removePos));
#endif
		;
		/* merge: found = 0(33, 20, 33) */
		reached[1][20] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_52_found);
		((P1 *)_this)->_5_7_9_52_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_7_9_52_found));
#endif
		;
		/* merge: shiftIdx = 0(33, 21, 33) */
		reached[1][21] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_7_9_52_shiftIdx);
		((P1 *)_this)->_5_7_9_52_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_7_9_52_shiftIdx));
#endif
		;
		/* merge: removePos = 0(33, 22, 33) */
		reached[1][22] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_7_9_52_removePos);
		((P1 *)_this)->_5_7_9_52_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_7_9_52_removePos));
#endif
		;
		/* merge: found = 0(33, 23, 33) */
		reached[1][23] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_7_9_52_found);
		((P1 *)_this)->_5_7_9_52_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_7_9_52_found));
#endif
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[1][34] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 689: // STATE 24 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][24] = 1;
		if (!(((((int)((P1 *)_this)->_5_7_9_52_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_7_9_52_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 690: // STATE 25 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (33:0:1 - 1)
		IfNotBlocked
		reached[1][25] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_7_9_52_removePos), 8) ])==((int)((P1 *)_this)->_5_7_9_taskId))))
			continue;
		/* merge: found = 1(0, 26, 33) */
		reached[1][26] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_7_9_52_found);
		((P1 *)_this)->_5_7_9_52_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_7_9_52_found));
#endif
		;
		/* merge: .(goto)(0, 30, 33) */
		reached[1][30] = 1;
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[1][34] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 691: // STATE 28 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][28] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_7_9_52_removePos);
		((P1 *)_this)->_5_7_9_52_removePos = (((int)((P1 *)_this)->_5_7_9_52_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_7_9_52_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 692: // STATE 36 - resume_suspend.pml:100 - [((found==1))] (43:0:2 - 1)
		IfNotBlocked
		reached[1][36] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_52_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_7_9_52_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_7_9_52_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_52_found = 0;
		/* merge: shiftIdx = removePos(0, 37, 43) */
		reached[1][37] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_52_shiftIdx);
		((P1 *)_this)->_5_7_9_52_shiftIdx = ((int)((P1 *)_this)->_5_7_9_52_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_7_9_52_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[1][44] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 693: // STATE 38 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (43:0:2 - 1)
		IfNotBlocked
		reached[1][38] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_52_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](43, 39, 43) */
		reached[1][39] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_7_9_52_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_7_9_52_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_7_9_52_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_7_9_52_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(43, 40, 43) */
		reached[1][40] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_52_shiftIdx);
		((P1 *)_this)->_5_7_9_52_shiftIdx = (((int)((P1 *)_this)->_5_7_9_52_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_7_9_52_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[1][44] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 694: // STATE 41 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (60:0:3 - 1)
		IfNotBlocked
		reached[1][41] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_52_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_7_9_52_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_7_9_52_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_52_shiftIdx = 0;
		/* merge: goto :b44(60, 42, 60) */
		reached[1][42] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(60, 46, 60) */
		reached[1][46] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[1][47] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[1][51] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 695: // STATE 46 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:60:2 - 3)
		IfNotBlocked
		reached[1][46] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[1][47] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[1][51] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 696: // STATE 53 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (68:0:4 - 1)
		IfNotBlocked
		reached[1][53] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(68, 54, 68) */
		reached[1][54] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_7_9_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_7_9_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_7_9_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(68, 55, 68) */
		reached[1][55] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_7_9_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(68, 59, 68) */
		reached[1][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[1][61] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_7_9_needResched);
		((P1 *)_this)->_5_7_9_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_7_9_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_7_9_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[1][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[1][69] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 697: // STATE 57 - resume_suspend.pml:140 - [assert(0)] (0:68:2 - 1)
		IfNotBlocked
		reached[1][57] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(68, 59, 68) */
		reached[1][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[1][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_needResched);
		((P1 *)_this)->_5_7_9_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_7_9_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_7_9_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[1][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[1][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 698: // STATE 61 - resume_suspend.pml:433 - [needResched = 1] (0:68:2 - 3)
		IfNotBlocked
		reached[1][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_needResched);
		((P1 *)_this)->_5_7_9_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_7_9_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_7_9_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[1][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[1][69] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 699: // STATE 63 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][63] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_7_9_idx);
		((P1 *)_this)->_5_7_9_idx = (((int)((P1 *)_this)->_5_7_9_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_7_9_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 700: // STATE 66 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (84:0:2 - 1)
		IfNotBlocked
		reached[1][66] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_7_9_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_7_9_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_idx = 0;
		/* merge: goto :b42(84, 67, 84) */
		reached[1][67] = 1;
		;
		/* merge: interrupted_task = EP(84, 71, 84) */
		reached[1][71] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_interrupted_task);
		((P1 *)_this)->_5_7_9_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_7_9_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 701: // STATE 71 - resume_suspend.pml:442 - [interrupted_task = EP] (0:84:1 - 3)
		IfNotBlocked
		reached[1][71] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_7_9_interrupted_task);
		((P1 *)_this)->_5_7_9_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_7_9_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 702: // STATE 72 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (81:0:1 - 1)
		IfNotBlocked
		reached[1][72] = 1;
		if (!((((((int)((P1 *)_this)->_5_7_9_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_7_9_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 73, 81) */
		reached[1][73] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_7_9_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 703: // STATE 74 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (107:0:2 - 1)
		IfNotBlocked
		reached[1][74] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(107, 75, 107) */
		reached[1][75] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_7_9_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_7_9_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_7_9_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(107, 76, 107) */
		reached[1][76] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_7_9_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_7_9_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 80, 107) */
		reached[1][80] = 1;
		;
		/* merge: .(goto)(0, 85, 107) */
		reached[1][85] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 704: // STATE 78 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][78] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 705: // STATE 86 - resume_suspend.pml:208 - [prio = 0] (0:102:6 - 1)
		IfNotBlocked
		reached[1][86] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_55_prio);
		((P1 *)_this)->_5_7_9_55_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_7_9_55_prio));
#endif
		;
		/* merge: top_task = 0(102, 87, 102) */
		reached[1][87] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_55_top_task);
		((P1 *)_this)->_5_7_9_55_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_7_9_55_top_task));
#endif
		;
		/* merge: found = 0(102, 88, 102) */
		reached[1][88] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_7_9_55_found);
		((P1 *)_this)->_5_7_9_55_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_7_9_55_found));
#endif
		;
		/* merge: prio = 0(102, 89, 102) */
		reached[1][89] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_7_9_55_prio);
		((P1 *)_this)->_5_7_9_55_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_7_9_55_prio));
#endif
		;
		/* merge: top_task = 0(102, 90, 102) */
		reached[1][90] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_7_9_55_top_task);
		((P1 *)_this)->_5_7_9_55_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_7_9_55_top_task));
#endif
		;
		/* merge: found = 0(102, 91, 102) */
		reached[1][91] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_7_9_55_found);
		((P1 *)_this)->_5_7_9_55_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_7_9_55_found));
#endif
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[1][103] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 706: // STATE 92 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][92] = 1;
		if (!(((((int)((P1 *)_this)->_5_7_9_55_prio)<4)&& !(((int)((P1 *)_this)->_5_7_9_55_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 707: // STATE 93 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (102:0:2 - 1)
		IfNotBlocked
		reached[1][93] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_7_9_55_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](102, 94, 102) */
		reached[1][94] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_55_top_task);
		((P1 *)_this)->_5_7_9_55_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_7_9_55_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_7_9_55_top_task));
#endif
		;
		/* merge: found = 1(102, 95, 102) */
		reached[1][95] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_55_found);
		((P1 *)_this)->_5_7_9_55_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_7_9_55_found));
#endif
		;
		/* merge: .(goto)(0, 99, 102) */
		reached[1][99] = 1;
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[1][103] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 708: // STATE 97 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][97] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_7_9_55_prio);
		((P1 *)_this)->_5_7_9_55_prio = (((int)((P1 *)_this)->_5_7_9_55_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_7_9_55_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 709: // STATE 100 - resume_suspend.pml:227 - [(((prio>=4)||found))] (125:0:3 - 1)
		IfNotBlocked
		reached[1][100] = 1;
		if (!(((((int)((P1 *)_this)->_5_7_9_55_prio)>=4)||((int)((P1 *)_this)->_5_7_9_55_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_7_9_55_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_7_9_55_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_55_found = 0;
		/* merge: goto :b45(125, 101, 125) */
		reached[1][101] = 1;
		;
		/* merge: newTask = top_task(125, 105, 125) */
		reached[1][105] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_7_9_55_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[1][106] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_7_9_55_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 710: // STATE 105 - resume_suspend.pml:231 - [newTask = top_task] (0:125:2 - 3)
		IfNotBlocked
		reached[1][105] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_7_9_55_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[1][106] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_7_9_55_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 711: // STATE 108 - resume_suspend.pml:177 - [deq_idx = 0] (0:115:2 - 1)
		IfNotBlocked
		reached[1][108] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_7_9_56_deq_idx);
		((P1 *)_this)->_5_7_9_56_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_7_9_56_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(115, 109, 115) */
		reached[1][109] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_56_deq_idx);
		((P1 *)_this)->_5_7_9_56_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_7_9_56_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[1][116] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 712: // STATE 110 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (115:0:2 - 1)
		IfNotBlocked
		reached[1][110] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_56_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](115, 111, 115) */
		reached[1][111] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_7_9_56_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_7_9_56_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_7_9_56_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_7_9_56_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(115, 112, 115) */
		reached[1][112] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_7_9_56_deq_idx);
		((P1 *)_this)->_5_7_9_56_deq_idx = (((int)((P1 *)_this)->_5_7_9_56_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_7_9_56_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[1][116] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 713: // STATE 113 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][113] = 1;
		if (!((((int)((P1 *)_this)->_5_7_9_56_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_7_9_56_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_7_9_56_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_7_9_56_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 714: // STATE 118 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (129:0:4 - 1)
		IfNotBlocked
		reached[1][118] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(129, 119, 129) */
		reached[1][119] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(129, 120, 129) */
		reached[1][120] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(129, 124, 129) */
		reached[1][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[1][126] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[1][127] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 715: // STATE 122 - resume_suspend.pml:192 - [(1)] (129:0:2 - 1)
		IfNotBlocked
		reached[1][122] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(129, 124, 129) */
		reached[1][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[1][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[1][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 716: // STATE 126 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:129:2 - 3)
		IfNotBlocked
		reached[1][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[1][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 717: // STATE 128 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][128] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 718: // STATE 132 - resume_suspend.pml:489 - [((EP==2))] (261:0:1 - 1)
		IfNotBlocked
		reached[1][132] = 1;
		if (!((((int)now.EP)==2)))
			continue;
		/* merge: counter = (counter+1)(0, 133, 261) */
		reached[1][133] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->counter);
		((P1 *)_this)->counter = (((int)((P1 *)_this)->counter)+1);
#ifdef VAR_RANGES
		logval("Process2:counter", ((int)((P1 *)_this)->counter));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 719: // STATE 134 - resume_suspend.pml:401 - [interrupted_task = 0] (0:142:6 - 1)
		IfNotBlocked
		reached[1][134] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_interrupted_task);
		((P1 *)_this)->_5_8_10_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_8_10_interrupted_task));
#endif
		;
		/* merge: idx = 0(142, 135, 142) */
		reached[1][135] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_idx);
		((P1 *)_this)->_5_8_10_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_8_10_idx));
#endif
		;
		/* merge: taskId = 0(142, 136, 142) */
		reached[1][136] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_8_10_taskId);
		((P1 *)_this)->_5_8_10_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_8_10_taskId));
#endif
		;
		/* merge: needResched = 0(142, 137, 142) */
		reached[1][137] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_8_10_needResched);
		((P1 *)_this)->_5_8_10_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_8_10_needResched));
#endif
		;
		/* merge: interrupted_task = 0(142, 138, 142) */
		reached[1][138] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_8_10_interrupted_task);
		((P1 *)_this)->_5_8_10_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_8_10_interrupted_task));
#endif
		;
		/* merge: needResched = 0(142, 139, 142) */
		reached[1][139] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_8_10_needResched);
		((P1 *)_this)->_5_8_10_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_8_10_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 720: // STATE 140 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:199:4 - 1)
		IfNotBlocked
		reached[1][140] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(199, 141, 199) */
		reached[1][141] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(199, 143, 199) */
		reached[1][143] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(199, 144, 199) */
		reached[1][144] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_8_10_idx);
		((P1 *)_this)->_5_8_10_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_8_10_idx));
#endif
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[1][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 721: // STATE 145 - resume_suspend.pml:416 - [((idx<sortLink.count))] (195:0:1 - 1)
		IfNotBlocked
		reached[1][145] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 146, 195) */
		reached[1][146] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_8_10_taskId);
		((P1 *)_this)->_5_8_10_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_8_10_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_8_10_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 722: // STATE 147 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (183:0:2 - 1)
		IfNotBlocked
		reached[1][147] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(183, 148, 183) */
		reached[1][148] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_8_10_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(183, 149, 183) */
		reached[1][149] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_8_10_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 723: // STATE 150 - resume_suspend.pml:81 - [removePos = 0] (0:164:5 - 1)
		IfNotBlocked
		reached[1][150] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_59_removePos);
		((P1 *)_this)->_5_8_10_59_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_8_10_59_removePos));
#endif
		;
		/* merge: found = 0(164, 151, 164) */
		reached[1][151] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_59_found);
		((P1 *)_this)->_5_8_10_59_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_8_10_59_found));
#endif
		;
		/* merge: shiftIdx = 0(164, 152, 164) */
		reached[1][152] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_8_10_59_shiftIdx);
		((P1 *)_this)->_5_8_10_59_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_8_10_59_shiftIdx));
#endif
		;
		/* merge: removePos = 0(164, 153, 164) */
		reached[1][153] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_8_10_59_removePos);
		((P1 *)_this)->_5_8_10_59_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_8_10_59_removePos));
#endif
		;
		/* merge: found = 0(164, 154, 164) */
		reached[1][154] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_8_10_59_found);
		((P1 *)_this)->_5_8_10_59_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_8_10_59_found));
#endif
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[1][165] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 724: // STATE 155 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][155] = 1;
		if (!(((((int)((P1 *)_this)->_5_8_10_59_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_8_10_59_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 725: // STATE 156 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (164:0:1 - 1)
		IfNotBlocked
		reached[1][156] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_8_10_59_removePos), 8) ])==((int)((P1 *)_this)->_5_8_10_taskId))))
			continue;
		/* merge: found = 1(0, 157, 164) */
		reached[1][157] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_8_10_59_found);
		((P1 *)_this)->_5_8_10_59_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_8_10_59_found));
#endif
		;
		/* merge: .(goto)(0, 161, 164) */
		reached[1][161] = 1;
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[1][165] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 726: // STATE 159 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][159] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_8_10_59_removePos);
		((P1 *)_this)->_5_8_10_59_removePos = (((int)((P1 *)_this)->_5_8_10_59_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_8_10_59_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 727: // STATE 167 - resume_suspend.pml:100 - [((found==1))] (174:0:2 - 1)
		IfNotBlocked
		reached[1][167] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_59_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_8_10_59_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_8_10_59_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_59_found = 0;
		/* merge: shiftIdx = removePos(0, 168, 174) */
		reached[1][168] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_59_shiftIdx);
		((P1 *)_this)->_5_8_10_59_shiftIdx = ((int)((P1 *)_this)->_5_8_10_59_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_8_10_59_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[1][175] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 728: // STATE 169 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (174:0:2 - 1)
		IfNotBlocked
		reached[1][169] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_59_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](174, 170, 174) */
		reached[1][170] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_8_10_59_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_8_10_59_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_8_10_59_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_8_10_59_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(174, 171, 174) */
		reached[1][171] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_59_shiftIdx);
		((P1 *)_this)->_5_8_10_59_shiftIdx = (((int)((P1 *)_this)->_5_8_10_59_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_8_10_59_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[1][175] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 729: // STATE 172 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (191:0:3 - 1)
		IfNotBlocked
		reached[1][172] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_59_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_8_10_59_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_8_10_59_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_59_shiftIdx = 0;
		/* merge: goto :b49(191, 173, 191) */
		reached[1][173] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(191, 177, 191) */
		reached[1][177] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[1][178] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[1][182] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 730: // STATE 177 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:191:2 - 3)
		IfNotBlocked
		reached[1][177] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[1][178] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[1][182] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 731: // STATE 184 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (199:0:4 - 1)
		IfNotBlocked
		reached[1][184] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(199, 185, 199) */
		reached[1][185] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_8_10_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_8_10_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_8_10_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(199, 186, 199) */
		reached[1][186] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_8_10_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(199, 190, 199) */
		reached[1][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[1][192] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_8_10_needResched);
		((P1 *)_this)->_5_8_10_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_8_10_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_8_10_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[1][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[1][200] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 732: // STATE 188 - resume_suspend.pml:140 - [assert(0)] (0:199:2 - 1)
		IfNotBlocked
		reached[1][188] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(199, 190, 199) */
		reached[1][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[1][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_needResched);
		((P1 *)_this)->_5_8_10_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_8_10_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_8_10_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[1][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[1][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 733: // STATE 192 - resume_suspend.pml:433 - [needResched = 1] (0:199:2 - 3)
		IfNotBlocked
		reached[1][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_needResched);
		((P1 *)_this)->_5_8_10_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_8_10_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_8_10_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[1][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[1][200] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 734: // STATE 194 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][194] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_8_10_idx);
		((P1 *)_this)->_5_8_10_idx = (((int)((P1 *)_this)->_5_8_10_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_8_10_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 735: // STATE 197 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (215:0:2 - 1)
		IfNotBlocked
		reached[1][197] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_8_10_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_8_10_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_idx = 0;
		/* merge: goto :b47(215, 198, 215) */
		reached[1][198] = 1;
		;
		/* merge: interrupted_task = EP(215, 202, 215) */
		reached[1][202] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_interrupted_task);
		((P1 *)_this)->_5_8_10_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_8_10_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 736: // STATE 202 - resume_suspend.pml:442 - [interrupted_task = EP] (0:215:1 - 3)
		IfNotBlocked
		reached[1][202] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_8_10_interrupted_task);
		((P1 *)_this)->_5_8_10_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_8_10_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 737: // STATE 203 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (212:0:1 - 1)
		IfNotBlocked
		reached[1][203] = 1;
		if (!((((((int)((P1 *)_this)->_5_8_10_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_8_10_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 204, 212) */
		reached[1][204] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_8_10_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 738: // STATE 205 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (238:0:2 - 1)
		IfNotBlocked
		reached[1][205] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(238, 206, 238) */
		reached[1][206] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_8_10_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_8_10_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_8_10_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(238, 207, 238) */
		reached[1][207] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_8_10_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_8_10_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 211, 238) */
		reached[1][211] = 1;
		;
		/* merge: .(goto)(0, 216, 238) */
		reached[1][216] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 739: // STATE 209 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][209] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 740: // STATE 217 - resume_suspend.pml:208 - [prio = 0] (0:233:6 - 1)
		IfNotBlocked
		reached[1][217] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_62_prio);
		((P1 *)_this)->_5_8_10_62_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_8_10_62_prio));
#endif
		;
		/* merge: top_task = 0(233, 218, 233) */
		reached[1][218] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_62_top_task);
		((P1 *)_this)->_5_8_10_62_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_8_10_62_top_task));
#endif
		;
		/* merge: found = 0(233, 219, 233) */
		reached[1][219] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_8_10_62_found);
		((P1 *)_this)->_5_8_10_62_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_8_10_62_found));
#endif
		;
		/* merge: prio = 0(233, 220, 233) */
		reached[1][220] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_8_10_62_prio);
		((P1 *)_this)->_5_8_10_62_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_8_10_62_prio));
#endif
		;
		/* merge: top_task = 0(233, 221, 233) */
		reached[1][221] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_8_10_62_top_task);
		((P1 *)_this)->_5_8_10_62_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_8_10_62_top_task));
#endif
		;
		/* merge: found = 0(233, 222, 233) */
		reached[1][222] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_8_10_62_found);
		((P1 *)_this)->_5_8_10_62_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_8_10_62_found));
#endif
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[1][234] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 741: // STATE 223 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][223] = 1;
		if (!(((((int)((P1 *)_this)->_5_8_10_62_prio)<4)&& !(((int)((P1 *)_this)->_5_8_10_62_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 742: // STATE 224 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (233:0:2 - 1)
		IfNotBlocked
		reached[1][224] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_8_10_62_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](233, 225, 233) */
		reached[1][225] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_62_top_task);
		((P1 *)_this)->_5_8_10_62_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_8_10_62_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_8_10_62_top_task));
#endif
		;
		/* merge: found = 1(233, 226, 233) */
		reached[1][226] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_62_found);
		((P1 *)_this)->_5_8_10_62_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_8_10_62_found));
#endif
		;
		/* merge: .(goto)(0, 230, 233) */
		reached[1][230] = 1;
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[1][234] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 743: // STATE 228 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][228] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_8_10_62_prio);
		((P1 *)_this)->_5_8_10_62_prio = (((int)((P1 *)_this)->_5_8_10_62_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_8_10_62_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 744: // STATE 231 - resume_suspend.pml:227 - [(((prio>=4)||found))] (256:0:3 - 1)
		IfNotBlocked
		reached[1][231] = 1;
		if (!(((((int)((P1 *)_this)->_5_8_10_62_prio)>=4)||((int)((P1 *)_this)->_5_8_10_62_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_8_10_62_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_8_10_62_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_62_found = 0;
		/* merge: goto :b50(256, 232, 256) */
		reached[1][232] = 1;
		;
		/* merge: newTask = top_task(256, 236, 256) */
		reached[1][236] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_8_10_62_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[1][237] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_8_10_62_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 745: // STATE 236 - resume_suspend.pml:231 - [newTask = top_task] (0:256:2 - 3)
		IfNotBlocked
		reached[1][236] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_8_10_62_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[1][237] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_8_10_62_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 746: // STATE 239 - resume_suspend.pml:177 - [deq_idx = 0] (0:246:2 - 1)
		IfNotBlocked
		reached[1][239] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_8_10_63_deq_idx);
		((P1 *)_this)->_5_8_10_63_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_8_10_63_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(246, 240, 246) */
		reached[1][240] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_63_deq_idx);
		((P1 *)_this)->_5_8_10_63_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_8_10_63_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[1][247] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 747: // STATE 241 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (246:0:2 - 1)
		IfNotBlocked
		reached[1][241] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_63_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](246, 242, 246) */
		reached[1][242] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_8_10_63_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_8_10_63_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_8_10_63_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_8_10_63_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(246, 243, 246) */
		reached[1][243] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_8_10_63_deq_idx);
		((P1 *)_this)->_5_8_10_63_deq_idx = (((int)((P1 *)_this)->_5_8_10_63_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_8_10_63_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[1][247] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 748: // STATE 244 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][244] = 1;
		if (!((((int)((P1 *)_this)->_5_8_10_63_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_8_10_63_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_8_10_63_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_8_10_63_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 749: // STATE 249 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (260:0:4 - 1)
		IfNotBlocked
		reached[1][249] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(260, 250, 260) */
		reached[1][250] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(260, 251, 260) */
		reached[1][251] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(260, 255, 260) */
		reached[1][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[1][257] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[1][258] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 750: // STATE 253 - resume_suspend.pml:192 - [(1)] (260:0:2 - 1)
		IfNotBlocked
		reached[1][253] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(260, 255, 260) */
		reached[1][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[1][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[1][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 751: // STATE 257 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:260:2 - 3)
		IfNotBlocked
		reached[1][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[1][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 752: // STATE 259 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][259] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 753: // STATE 263 - resume_suspend.pml:490 - [((EP==2))] (392:0:1 - 1)
		IfNotBlocked
		reached[1][263] = 1;
		if (!((((int)now.EP)==2)))
			continue;
		/* merge: work = ((work+(counter*2))%100)(0, 264, 392) */
		reached[1][264] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->work);
		((P1 *)_this)->work = ((((int)((P1 *)_this)->work)+(((int)((P1 *)_this)->counter)*2))%100);
#ifdef VAR_RANGES
		logval("Process2:work", ((int)((P1 *)_this)->work));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 754: // STATE 265 - resume_suspend.pml:401 - [interrupted_task = 0] (0:273:6 - 1)
		IfNotBlocked
		reached[1][265] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_interrupted_task);
		((P1 *)_this)->_5_9_11_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_9_11_interrupted_task));
#endif
		;
		/* merge: idx = 0(273, 266, 273) */
		reached[1][266] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_idx);
		((P1 *)_this)->_5_9_11_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_9_11_idx));
#endif
		;
		/* merge: taskId = 0(273, 267, 273) */
		reached[1][267] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_9_11_taskId);
		((P1 *)_this)->_5_9_11_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_9_11_taskId));
#endif
		;
		/* merge: needResched = 0(273, 268, 273) */
		reached[1][268] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_9_11_needResched);
		((P1 *)_this)->_5_9_11_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_9_11_needResched));
#endif
		;
		/* merge: interrupted_task = 0(273, 269, 273) */
		reached[1][269] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_9_11_interrupted_task);
		((P1 *)_this)->_5_9_11_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_9_11_interrupted_task));
#endif
		;
		/* merge: needResched = 0(273, 270, 273) */
		reached[1][270] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_9_11_needResched);
		((P1 *)_this)->_5_9_11_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_9_11_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 755: // STATE 271 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:330:4 - 1)
		IfNotBlocked
		reached[1][271] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(330, 272, 330) */
		reached[1][272] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(330, 274, 330) */
		reached[1][274] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(330, 275, 330) */
		reached[1][275] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_9_11_idx);
		((P1 *)_this)->_5_9_11_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_9_11_idx));
#endif
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[1][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 756: // STATE 276 - resume_suspend.pml:416 - [((idx<sortLink.count))] (326:0:1 - 1)
		IfNotBlocked
		reached[1][276] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 277, 326) */
		reached[1][277] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_9_11_taskId);
		((P1 *)_this)->_5_9_11_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_9_11_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_9_11_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 757: // STATE 278 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (314:0:2 - 1)
		IfNotBlocked
		reached[1][278] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(314, 279, 314) */
		reached[1][279] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_9_11_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(314, 280, 314) */
		reached[1][280] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_9_11_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 758: // STATE 281 - resume_suspend.pml:81 - [removePos = 0] (0:295:5 - 1)
		IfNotBlocked
		reached[1][281] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_66_removePos);
		((P1 *)_this)->_5_9_11_66_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_9_11_66_removePos));
#endif
		;
		/* merge: found = 0(295, 282, 295) */
		reached[1][282] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_66_found);
		((P1 *)_this)->_5_9_11_66_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_9_11_66_found));
#endif
		;
		/* merge: shiftIdx = 0(295, 283, 295) */
		reached[1][283] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_9_11_66_shiftIdx);
		((P1 *)_this)->_5_9_11_66_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_9_11_66_shiftIdx));
#endif
		;
		/* merge: removePos = 0(295, 284, 295) */
		reached[1][284] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_9_11_66_removePos);
		((P1 *)_this)->_5_9_11_66_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_9_11_66_removePos));
#endif
		;
		/* merge: found = 0(295, 285, 295) */
		reached[1][285] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_9_11_66_found);
		((P1 *)_this)->_5_9_11_66_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_9_11_66_found));
#endif
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[1][296] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 759: // STATE 286 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][286] = 1;
		if (!(((((int)((P1 *)_this)->_5_9_11_66_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_9_11_66_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 760: // STATE 287 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (295:0:1 - 1)
		IfNotBlocked
		reached[1][287] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_9_11_66_removePos), 8) ])==((int)((P1 *)_this)->_5_9_11_taskId))))
			continue;
		/* merge: found = 1(0, 288, 295) */
		reached[1][288] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_9_11_66_found);
		((P1 *)_this)->_5_9_11_66_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_9_11_66_found));
#endif
		;
		/* merge: .(goto)(0, 292, 295) */
		reached[1][292] = 1;
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[1][296] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 761: // STATE 290 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][290] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_9_11_66_removePos);
		((P1 *)_this)->_5_9_11_66_removePos = (((int)((P1 *)_this)->_5_9_11_66_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_9_11_66_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 762: // STATE 298 - resume_suspend.pml:100 - [((found==1))] (305:0:2 - 1)
		IfNotBlocked
		reached[1][298] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_66_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_9_11_66_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_9_11_66_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_66_found = 0;
		/* merge: shiftIdx = removePos(0, 299, 305) */
		reached[1][299] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_66_shiftIdx);
		((P1 *)_this)->_5_9_11_66_shiftIdx = ((int)((P1 *)_this)->_5_9_11_66_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_9_11_66_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[1][306] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 763: // STATE 300 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (305:0:2 - 1)
		IfNotBlocked
		reached[1][300] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_66_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](305, 301, 305) */
		reached[1][301] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_9_11_66_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_9_11_66_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_9_11_66_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_9_11_66_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(305, 302, 305) */
		reached[1][302] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_66_shiftIdx);
		((P1 *)_this)->_5_9_11_66_shiftIdx = (((int)((P1 *)_this)->_5_9_11_66_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_9_11_66_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[1][306] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 764: // STATE 303 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (322:0:3 - 1)
		IfNotBlocked
		reached[1][303] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_66_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_9_11_66_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_9_11_66_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_66_shiftIdx = 0;
		/* merge: goto :b54(322, 304, 322) */
		reached[1][304] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(322, 308, 322) */
		reached[1][308] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[1][309] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[1][313] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 765: // STATE 308 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:322:2 - 3)
		IfNotBlocked
		reached[1][308] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[1][309] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[1][313] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 766: // STATE 315 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (330:0:4 - 1)
		IfNotBlocked
		reached[1][315] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(330, 316, 330) */
		reached[1][316] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_9_11_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_9_11_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_9_11_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(330, 317, 330) */
		reached[1][317] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_9_11_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(330, 321, 330) */
		reached[1][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[1][323] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_9_11_needResched);
		((P1 *)_this)->_5_9_11_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_9_11_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_9_11_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[1][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[1][331] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 767: // STATE 319 - resume_suspend.pml:140 - [assert(0)] (0:330:2 - 1)
		IfNotBlocked
		reached[1][319] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(330, 321, 330) */
		reached[1][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[1][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_needResched);
		((P1 *)_this)->_5_9_11_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_9_11_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_9_11_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[1][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[1][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 768: // STATE 323 - resume_suspend.pml:433 - [needResched = 1] (0:330:2 - 3)
		IfNotBlocked
		reached[1][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_needResched);
		((P1 *)_this)->_5_9_11_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_9_11_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_9_11_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[1][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[1][331] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 769: // STATE 325 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][325] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_9_11_idx);
		((P1 *)_this)->_5_9_11_idx = (((int)((P1 *)_this)->_5_9_11_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_9_11_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 770: // STATE 328 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (346:0:2 - 1)
		IfNotBlocked
		reached[1][328] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_9_11_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_9_11_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_idx = 0;
		/* merge: goto :b52(346, 329, 346) */
		reached[1][329] = 1;
		;
		/* merge: interrupted_task = EP(346, 333, 346) */
		reached[1][333] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_interrupted_task);
		((P1 *)_this)->_5_9_11_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_9_11_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 771: // STATE 333 - resume_suspend.pml:442 - [interrupted_task = EP] (0:346:1 - 3)
		IfNotBlocked
		reached[1][333] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_9_11_interrupted_task);
		((P1 *)_this)->_5_9_11_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_9_11_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 772: // STATE 334 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (343:0:1 - 1)
		IfNotBlocked
		reached[1][334] = 1;
		if (!((((((int)((P1 *)_this)->_5_9_11_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_9_11_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 335, 343) */
		reached[1][335] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_9_11_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 773: // STATE 336 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (369:0:2 - 1)
		IfNotBlocked
		reached[1][336] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(369, 337, 369) */
		reached[1][337] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_9_11_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_9_11_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_9_11_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(369, 338, 369) */
		reached[1][338] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_9_11_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_9_11_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 342, 369) */
		reached[1][342] = 1;
		;
		/* merge: .(goto)(0, 347, 369) */
		reached[1][347] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 774: // STATE 340 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][340] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 775: // STATE 348 - resume_suspend.pml:208 - [prio = 0] (0:364:6 - 1)
		IfNotBlocked
		reached[1][348] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_69_prio);
		((P1 *)_this)->_5_9_11_69_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_9_11_69_prio));
#endif
		;
		/* merge: top_task = 0(364, 349, 364) */
		reached[1][349] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_69_top_task);
		((P1 *)_this)->_5_9_11_69_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_9_11_69_top_task));
#endif
		;
		/* merge: found = 0(364, 350, 364) */
		reached[1][350] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_9_11_69_found);
		((P1 *)_this)->_5_9_11_69_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_9_11_69_found));
#endif
		;
		/* merge: prio = 0(364, 351, 364) */
		reached[1][351] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_9_11_69_prio);
		((P1 *)_this)->_5_9_11_69_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_9_11_69_prio));
#endif
		;
		/* merge: top_task = 0(364, 352, 364) */
		reached[1][352] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_9_11_69_top_task);
		((P1 *)_this)->_5_9_11_69_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_9_11_69_top_task));
#endif
		;
		/* merge: found = 0(364, 353, 364) */
		reached[1][353] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_9_11_69_found);
		((P1 *)_this)->_5_9_11_69_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_9_11_69_found));
#endif
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[1][365] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 776: // STATE 354 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][354] = 1;
		if (!(((((int)((P1 *)_this)->_5_9_11_69_prio)<4)&& !(((int)((P1 *)_this)->_5_9_11_69_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 777: // STATE 355 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (364:0:2 - 1)
		IfNotBlocked
		reached[1][355] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_9_11_69_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](364, 356, 364) */
		reached[1][356] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_69_top_task);
		((P1 *)_this)->_5_9_11_69_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_9_11_69_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_9_11_69_top_task));
#endif
		;
		/* merge: found = 1(364, 357, 364) */
		reached[1][357] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_69_found);
		((P1 *)_this)->_5_9_11_69_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_9_11_69_found));
#endif
		;
		/* merge: .(goto)(0, 361, 364) */
		reached[1][361] = 1;
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[1][365] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 778: // STATE 359 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][359] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_9_11_69_prio);
		((P1 *)_this)->_5_9_11_69_prio = (((int)((P1 *)_this)->_5_9_11_69_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_9_11_69_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 779: // STATE 362 - resume_suspend.pml:227 - [(((prio>=4)||found))] (387:0:3 - 1)
		IfNotBlocked
		reached[1][362] = 1;
		if (!(((((int)((P1 *)_this)->_5_9_11_69_prio)>=4)||((int)((P1 *)_this)->_5_9_11_69_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_9_11_69_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_9_11_69_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_69_found = 0;
		/* merge: goto :b55(387, 363, 387) */
		reached[1][363] = 1;
		;
		/* merge: newTask = top_task(387, 367, 387) */
		reached[1][367] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_9_11_69_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[1][368] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_9_11_69_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 780: // STATE 367 - resume_suspend.pml:231 - [newTask = top_task] (0:387:2 - 3)
		IfNotBlocked
		reached[1][367] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_9_11_69_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[1][368] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_9_11_69_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 781: // STATE 370 - resume_suspend.pml:177 - [deq_idx = 0] (0:377:2 - 1)
		IfNotBlocked
		reached[1][370] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_9_11_70_deq_idx);
		((P1 *)_this)->_5_9_11_70_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_9_11_70_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(377, 371, 377) */
		reached[1][371] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_70_deq_idx);
		((P1 *)_this)->_5_9_11_70_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_9_11_70_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[1][378] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 782: // STATE 372 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (377:0:2 - 1)
		IfNotBlocked
		reached[1][372] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_70_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](377, 373, 377) */
		reached[1][373] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_9_11_70_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_9_11_70_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_9_11_70_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_9_11_70_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(377, 374, 377) */
		reached[1][374] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_9_11_70_deq_idx);
		((P1 *)_this)->_5_9_11_70_deq_idx = (((int)((P1 *)_this)->_5_9_11_70_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_9_11_70_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[1][378] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 783: // STATE 375 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][375] = 1;
		if (!((((int)((P1 *)_this)->_5_9_11_70_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_9_11_70_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_9_11_70_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_9_11_70_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 784: // STATE 380 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (391:0:4 - 1)
		IfNotBlocked
		reached[1][380] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(391, 381, 391) */
		reached[1][381] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(391, 382, 391) */
		reached[1][382] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(391, 386, 391) */
		reached[1][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[1][388] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[1][389] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 785: // STATE 384 - resume_suspend.pml:192 - [(1)] (391:0:2 - 1)
		IfNotBlocked
		reached[1][384] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(391, 386, 391) */
		reached[1][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[1][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[1][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 786: // STATE 388 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:391:2 - 3)
		IfNotBlocked
		reached[1][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[1][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 787: // STATE 390 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][390] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 788: // STATE 394 - resume_suspend.pml:491 - [((EP==2))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][394] = 1;
		if (!((((int)now.EP)==2)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 789: // STATE 395 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[1][395] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_currentTask);
		((P1 *)_this)->_5_10_12_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process2:currentTask", ((int)((P1 *)_this)->_5_10_12_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 790: // STATE 396 - resume_suspend.pml:377 - [((((3>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][396] = 1;
		if (!((((3>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 791: // STATE 397 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:411:6 - 1)
		IfNotBlocked
		reached[1][397] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(411, 398, 411) */
		reached[1][398] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(411, 400, 411) */
		reached[1][400] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_12_currentTask);
		((P1 *)_this)->_5_10_12_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:currentTask", ((int)((P1 *)_this)->_5_10_12_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(411, 401, 411) */
		reached[1][401] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_currentTask), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_10_12_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process2:currentTask].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+3)(411, 402, 411) */
		reached[1][402] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P1 *)_this)->_5_10_12_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+3);
#ifdef VAR_RANGES
		logval("tcb[Process2:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 3(411, 403, 411) */
		reached[1][403] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_10_12_currentTask, 5) ].delayTicks = 3;
#ifdef VAR_RANGES
		logval("tcb[Process2:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 792: // STATE 404 - resume_suspend.pml:70 - [((sortLink.count<8))] (539:0:2 - 1)
		IfNotBlocked
		reached[1][404] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(539, 405, 539) */
		reached[1][405] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P1 *)_this)->_5_10_12_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(539, 406, 539) */
		reached[1][406] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 410, 539) */
		reached[1][410] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 793: // STATE 408 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][408] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 794: // STATE 412 - resume_suspend.pml:401 - [interrupted_task = 0] (0:420:6 - 1)
		IfNotBlocked
		reached[1][412] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_interrupted_task);
		((P1 *)_this)->_5_10_12_74_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_12_74_interrupted_task));
#endif
		;
		/* merge: idx = 0(420, 413, 420) */
		reached[1][413] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_idx);
		((P1 *)_this)->_5_10_12_74_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_10_12_74_idx));
#endif
		;
		/* merge: taskId = 0(420, 414, 420) */
		reached[1][414] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_12_74_taskId);
		((P1 *)_this)->_5_10_12_74_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_10_12_74_taskId));
#endif
		;
		/* merge: needResched = 0(420, 415, 420) */
		reached[1][415] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_12_74_needResched);
		((P1 *)_this)->_5_10_12_74_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_12_74_needResched));
#endif
		;
		/* merge: interrupted_task = 0(420, 416, 420) */
		reached[1][416] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_10_12_74_interrupted_task);
		((P1 *)_this)->_5_10_12_74_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_12_74_interrupted_task));
#endif
		;
		/* merge: needResched = 0(420, 417, 420) */
		reached[1][417] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_10_12_74_needResched);
		((P1 *)_this)->_5_10_12_74_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_12_74_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 795: // STATE 418 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:477:4 - 1)
		IfNotBlocked
		reached[1][418] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(477, 419, 477) */
		reached[1][419] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(477, 421, 477) */
		reached[1][421] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(477, 422, 477) */
		reached[1][422] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_12_74_idx);
		((P1 *)_this)->_5_10_12_74_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_10_12_74_idx));
#endif
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[1][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 796: // STATE 423 - resume_suspend.pml:416 - [((idx<sortLink.count))] (473:0:1 - 1)
		IfNotBlocked
		reached[1][423] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 424, 473) */
		reached[1][424] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_74_taskId);
		((P1 *)_this)->_5_10_12_74_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_12_74_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_10_12_74_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 797: // STATE 425 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (461:0:2 - 1)
		IfNotBlocked
		reached[1][425] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(461, 426, 461) */
		reached[1][426] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_10_12_74_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(461, 427, 461) */
		reached[1][427] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_10_12_74_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 798: // STATE 428 - resume_suspend.pml:81 - [removePos = 0] (0:442:5 - 1)
		IfNotBlocked
		reached[1][428] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_16_removePos);
		((P1 *)_this)->_5_10_12_74_16_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_10_12_74_16_removePos));
#endif
		;
		/* merge: found = 0(442, 429, 442) */
		reached[1][429] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_16_found);
		((P1 *)_this)->_5_10_12_74_16_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_12_74_16_found));
#endif
		;
		/* merge: shiftIdx = 0(442, 430, 442) */
		reached[1][430] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx);
		((P1 *)_this)->_5_10_12_74_16_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx));
#endif
		;
		/* merge: removePos = 0(442, 431, 442) */
		reached[1][431] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_12_74_16_removePos);
		((P1 *)_this)->_5_10_12_74_16_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_10_12_74_16_removePos));
#endif
		;
		/* merge: found = 0(442, 432, 442) */
		reached[1][432] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_10_12_74_16_found);
		((P1 *)_this)->_5_10_12_74_16_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_12_74_16_found));
#endif
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[1][443] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 799: // STATE 433 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][433] = 1;
		if (!(((((int)((P1 *)_this)->_5_10_12_74_16_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_10_12_74_16_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 800: // STATE 434 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (442:0:1 - 1)
		IfNotBlocked
		reached[1][434] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_12_74_16_removePos), 8) ])==((int)((P1 *)_this)->_5_10_12_74_taskId))))
			continue;
		/* merge: found = 1(0, 435, 442) */
		reached[1][435] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_74_16_found);
		((P1 *)_this)->_5_10_12_74_16_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_12_74_16_found));
#endif
		;
		/* merge: .(goto)(0, 439, 442) */
		reached[1][439] = 1;
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[1][443] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 801: // STATE 437 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][437] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_74_16_removePos);
		((P1 *)_this)->_5_10_12_74_16_removePos = (((int)((P1 *)_this)->_5_10_12_74_16_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_10_12_74_16_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 802: // STATE 445 - resume_suspend.pml:100 - [((found==1))] (452:0:2 - 1)
		IfNotBlocked
		reached[1][445] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_16_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_12_74_16_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_12_74_16_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_16_found = 0;
		/* merge: shiftIdx = removePos(0, 446, 452) */
		reached[1][446] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx);
		((P1 *)_this)->_5_10_12_74_16_shiftIdx = ((int)((P1 *)_this)->_5_10_12_74_16_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[1][453] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 803: // STATE 447 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (452:0:2 - 1)
		IfNotBlocked
		reached[1][447] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](452, 448, 452) */
		reached[1][448] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_10_12_74_16_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(452, 449, 452) */
		reached[1][449] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx);
		((P1 *)_this)->_5_10_12_74_16_shiftIdx = (((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[1][453] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 804: // STATE 450 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (469:0:3 - 1)
		IfNotBlocked
		reached[1][450] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_16_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_12_74_16_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_12_74_16_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_16_shiftIdx = 0;
		/* merge: goto :b59(469, 451, 469) */
		reached[1][451] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(469, 455, 469) */
		reached[1][455] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[1][456] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[1][460] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 805: // STATE 455 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:469:2 - 3)
		IfNotBlocked
		reached[1][455] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[1][456] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[1][460] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 806: // STATE 462 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (477:0:4 - 1)
		IfNotBlocked
		reached[1][462] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(477, 463, 477) */
		reached[1][463] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_12_74_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_12_74_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_10_12_74_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(477, 464, 477) */
		reached[1][464] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_12_74_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(477, 468, 477) */
		reached[1][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[1][470] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_12_74_needResched);
		((P1 *)_this)->_5_10_12_74_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_12_74_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_10_12_74_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[1][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[1][478] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 807: // STATE 466 - resume_suspend.pml:140 - [assert(0)] (0:477:2 - 1)
		IfNotBlocked
		reached[1][466] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(477, 468, 477) */
		reached[1][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[1][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_needResched);
		((P1 *)_this)->_5_10_12_74_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_12_74_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_10_12_74_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[1][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[1][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 808: // STATE 470 - resume_suspend.pml:433 - [needResched = 1] (0:477:2 - 3)
		IfNotBlocked
		reached[1][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_needResched);
		((P1 *)_this)->_5_10_12_74_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_12_74_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_10_12_74_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[1][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[1][478] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 809: // STATE 472 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][472] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_74_idx);
		((P1 *)_this)->_5_10_12_74_idx = (((int)((P1 *)_this)->_5_10_12_74_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_10_12_74_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 810: // STATE 475 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (493:0:2 - 1)
		IfNotBlocked
		reached[1][475] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_12_74_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_12_74_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_idx = 0;
		/* merge: goto :b57(493, 476, 493) */
		reached[1][476] = 1;
		;
		/* merge: interrupted_task = EP(493, 480, 493) */
		reached[1][480] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_interrupted_task);
		((P1 *)_this)->_5_10_12_74_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_12_74_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 811: // STATE 480 - resume_suspend.pml:442 - [interrupted_task = EP] (0:493:1 - 3)
		IfNotBlocked
		reached[1][480] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_74_interrupted_task);
		((P1 *)_this)->_5_10_12_74_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_12_74_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 812: // STATE 481 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (490:0:1 - 1)
		IfNotBlocked
		reached[1][481] = 1;
		if (!((((((int)((P1 *)_this)->_5_10_12_74_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_10_12_74_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 482, 490) */
		reached[1][482] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_10_12_74_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 813: // STATE 483 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (516:0:2 - 1)
		IfNotBlocked
		reached[1][483] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(516, 484, 516) */
		reached[1][484] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_12_74_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_12_74_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_10_12_74_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(516, 485, 516) */
		reached[1][485] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_12_74_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_12_74_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 489, 516) */
		reached[1][489] = 1;
		;
		/* merge: .(goto)(0, 494, 516) */
		reached[1][494] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 814: // STATE 487 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][487] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 815: // STATE 495 - resume_suspend.pml:208 - [prio = 0] (0:511:6 - 1)
		IfNotBlocked
		reached[1][495] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_19_prio);
		((P1 *)_this)->_5_10_12_74_19_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_10_12_74_19_prio));
#endif
		;
		/* merge: top_task = 0(511, 496, 511) */
		reached[1][496] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_19_top_task);
		((P1 *)_this)->_5_10_12_74_19_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_10_12_74_19_top_task));
#endif
		;
		/* merge: found = 0(511, 497, 511) */
		reached[1][497] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_12_74_19_found);
		((P1 *)_this)->_5_10_12_74_19_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_12_74_19_found));
#endif
		;
		/* merge: prio = 0(511, 498, 511) */
		reached[1][498] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_12_74_19_prio);
		((P1 *)_this)->_5_10_12_74_19_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_10_12_74_19_prio));
#endif
		;
		/* merge: top_task = 0(511, 499, 511) */
		reached[1][499] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_10_12_74_19_top_task);
		((P1 *)_this)->_5_10_12_74_19_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_10_12_74_19_top_task));
#endif
		;
		/* merge: found = 0(511, 500, 511) */
		reached[1][500] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_10_12_74_19_found);
		((P1 *)_this)->_5_10_12_74_19_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_12_74_19_found));
#endif
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[1][512] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 816: // STATE 501 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][501] = 1;
		if (!(((((int)((P1 *)_this)->_5_10_12_74_19_prio)<4)&& !(((int)((P1 *)_this)->_5_10_12_74_19_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 817: // STATE 502 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (511:0:2 - 1)
		IfNotBlocked
		reached[1][502] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_10_12_74_19_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](511, 503, 511) */
		reached[1][503] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_19_top_task);
		((P1 *)_this)->_5_10_12_74_19_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_10_12_74_19_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_10_12_74_19_top_task));
#endif
		;
		/* merge: found = 1(511, 504, 511) */
		reached[1][504] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_19_found);
		((P1 *)_this)->_5_10_12_74_19_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_12_74_19_found));
#endif
		;
		/* merge: .(goto)(0, 508, 511) */
		reached[1][508] = 1;
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[1][512] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 818: // STATE 506 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][506] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_12_74_19_prio);
		((P1 *)_this)->_5_10_12_74_19_prio = (((int)((P1 *)_this)->_5_10_12_74_19_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_10_12_74_19_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 819: // STATE 509 - resume_suspend.pml:227 - [(((prio>=4)||found))] (534:0:3 - 1)
		IfNotBlocked
		reached[1][509] = 1;
		if (!(((((int)((P1 *)_this)->_5_10_12_74_19_prio)>=4)||((int)((P1 *)_this)->_5_10_12_74_19_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_12_74_19_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_12_74_19_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_19_found = 0;
		/* merge: goto :b60(534, 510, 534) */
		reached[1][510] = 1;
		;
		/* merge: newTask = top_task(534, 514, 534) */
		reached[1][514] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_10_12_74_19_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[1][515] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_10_12_74_19_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 820: // STATE 514 - resume_suspend.pml:231 - [newTask = top_task] (0:534:2 - 3)
		IfNotBlocked
		reached[1][514] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_10_12_74_19_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[1][515] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_10_12_74_19_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 821: // STATE 517 - resume_suspend.pml:177 - [deq_idx = 0] (0:524:2 - 1)
		IfNotBlocked
		reached[1][517] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_12_74_20_deq_idx);
		((P1 *)_this)->_5_10_12_74_20_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_10_12_74_20_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(524, 518, 524) */
		reached[1][518] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_20_deq_idx);
		((P1 *)_this)->_5_10_12_74_20_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_10_12_74_20_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[1][525] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 822: // STATE 519 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (524:0:2 - 1)
		IfNotBlocked
		reached[1][519] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_20_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](524, 520, 524) */
		reached[1][520] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_10_12_74_20_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_10_12_74_20_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_10_12_74_20_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_10_12_74_20_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(524, 521, 524) */
		reached[1][521] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_12_74_20_deq_idx);
		((P1 *)_this)->_5_10_12_74_20_deq_idx = (((int)((P1 *)_this)->_5_10_12_74_20_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_10_12_74_20_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[1][525] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 823: // STATE 522 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][522] = 1;
		if (!((((int)((P1 *)_this)->_5_10_12_74_20_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_12_74_20_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_10_12_74_20_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_12_74_20_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 824: // STATE 527 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (538:0:4 - 1)
		IfNotBlocked
		reached[1][527] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(538, 528, 538) */
		reached[1][528] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(538, 529, 538) */
		reached[1][529] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(538, 533, 538) */
		reached[1][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[1][535] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[1][536] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 825: // STATE 531 - resume_suspend.pml:192 - [(1)] (538:0:2 - 1)
		IfNotBlocked
		reached[1][531] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(538, 533, 538) */
		reached[1][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[1][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[1][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 826: // STATE 535 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:538:2 - 3)
		IfNotBlocked
		reached[1][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[1][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 827: // STATE 537 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][537] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 828: // STATE 540 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][540] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 829: // STATE 547 - resume_suspend.pml:401 - [interrupted_task = 0] (0:555:6 - 1)
		IfNotBlocked
		reached[1][547] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_interrupted_task);
		((P1 *)_this)->_5_10_13_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_13_interrupted_task));
#endif
		;
		/* merge: idx = 0(555, 548, 555) */
		reached[1][548] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_idx);
		((P1 *)_this)->_5_10_13_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_10_13_idx));
#endif
		;
		/* merge: taskId = 0(555, 549, 555) */
		reached[1][549] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_13_taskId);
		((P1 *)_this)->_5_10_13_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_10_13_taskId));
#endif
		;
		/* merge: needResched = 0(555, 550, 555) */
		reached[1][550] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_13_needResched);
		((P1 *)_this)->_5_10_13_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_13_needResched));
#endif
		;
		/* merge: interrupted_task = 0(555, 551, 555) */
		reached[1][551] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_10_13_interrupted_task);
		((P1 *)_this)->_5_10_13_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_13_interrupted_task));
#endif
		;
		/* merge: needResched = 0(555, 552, 555) */
		reached[1][552] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_10_13_needResched);
		((P1 *)_this)->_5_10_13_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_13_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 830: // STATE 553 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:612:4 - 1)
		IfNotBlocked
		reached[1][553] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(612, 554, 612) */
		reached[1][554] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(612, 556, 612) */
		reached[1][556] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(612, 557, 612) */
		reached[1][557] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_13_idx);
		((P1 *)_this)->_5_10_13_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_10_13_idx));
#endif
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[1][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 831: // STATE 558 - resume_suspend.pml:416 - [((idx<sortLink.count))] (608:0:1 - 1)
		IfNotBlocked
		reached[1][558] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 559, 608) */
		reached[1][559] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_13_taskId);
		((P1 *)_this)->_5_10_13_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_13_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_10_13_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 832: // STATE 560 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (596:0:2 - 1)
		IfNotBlocked
		reached[1][560] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(596, 561, 596) */
		reached[1][561] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_10_13_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(596, 562, 596) */
		reached[1][562] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_10_13_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 833: // STATE 563 - resume_suspend.pml:81 - [removePos = 0] (0:577:5 - 1)
		IfNotBlocked
		reached[1][563] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_77_removePos);
		((P1 *)_this)->_5_10_13_77_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_10_13_77_removePos));
#endif
		;
		/* merge: found = 0(577, 564, 577) */
		reached[1][564] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_77_found);
		((P1 *)_this)->_5_10_13_77_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_13_77_found));
#endif
		;
		/* merge: shiftIdx = 0(577, 565, 577) */
		reached[1][565] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_13_77_shiftIdx);
		((P1 *)_this)->_5_10_13_77_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_10_13_77_shiftIdx));
#endif
		;
		/* merge: removePos = 0(577, 566, 577) */
		reached[1][566] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_13_77_removePos);
		((P1 *)_this)->_5_10_13_77_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_10_13_77_removePos));
#endif
		;
		/* merge: found = 0(577, 567, 577) */
		reached[1][567] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_10_13_77_found);
		((P1 *)_this)->_5_10_13_77_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_13_77_found));
#endif
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[1][578] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 834: // STATE 568 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][568] = 1;
		if (!(((((int)((P1 *)_this)->_5_10_13_77_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_10_13_77_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 835: // STATE 569 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (577:0:1 - 1)
		IfNotBlocked
		reached[1][569] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_13_77_removePos), 8) ])==((int)((P1 *)_this)->_5_10_13_taskId))))
			continue;
		/* merge: found = 1(0, 570, 577) */
		reached[1][570] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_13_77_found);
		((P1 *)_this)->_5_10_13_77_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_13_77_found));
#endif
		;
		/* merge: .(goto)(0, 574, 577) */
		reached[1][574] = 1;
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[1][578] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 836: // STATE 572 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][572] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_13_77_removePos);
		((P1 *)_this)->_5_10_13_77_removePos = (((int)((P1 *)_this)->_5_10_13_77_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_10_13_77_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 837: // STATE 580 - resume_suspend.pml:100 - [((found==1))] (587:0:2 - 1)
		IfNotBlocked
		reached[1][580] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_77_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_13_77_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_13_77_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_77_found = 0;
		/* merge: shiftIdx = removePos(0, 581, 587) */
		reached[1][581] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_77_shiftIdx);
		((P1 *)_this)->_5_10_13_77_shiftIdx = ((int)((P1 *)_this)->_5_10_13_77_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_10_13_77_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[1][588] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 838: // STATE 582 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (587:0:2 - 1)
		IfNotBlocked
		reached[1][582] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_77_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](587, 583, 587) */
		reached[1][583] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_13_77_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_10_13_77_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_10_13_77_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_10_13_77_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(587, 584, 587) */
		reached[1][584] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_77_shiftIdx);
		((P1 *)_this)->_5_10_13_77_shiftIdx = (((int)((P1 *)_this)->_5_10_13_77_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_10_13_77_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[1][588] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 839: // STATE 585 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (604:0:3 - 1)
		IfNotBlocked
		reached[1][585] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_77_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_13_77_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_13_77_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_77_shiftIdx = 0;
		/* merge: goto :b64(604, 586, 604) */
		reached[1][586] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(604, 590, 604) */
		reached[1][590] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[1][591] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[1][595] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 840: // STATE 590 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:604:2 - 3)
		IfNotBlocked
		reached[1][590] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[1][591] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[1][595] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 841: // STATE 597 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (612:0:4 - 1)
		IfNotBlocked
		reached[1][597] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(612, 598, 612) */
		reached[1][598] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_13_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_13_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_10_13_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(612, 599, 612) */
		reached[1][599] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_13_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(612, 603, 612) */
		reached[1][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[1][605] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_13_needResched);
		((P1 *)_this)->_5_10_13_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_13_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_10_13_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[1][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[1][613] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 842: // STATE 601 - resume_suspend.pml:140 - [assert(0)] (0:612:2 - 1)
		IfNotBlocked
		reached[1][601] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(612, 603, 612) */
		reached[1][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[1][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_needResched);
		((P1 *)_this)->_5_10_13_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_13_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_10_13_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[1][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[1][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 843: // STATE 605 - resume_suspend.pml:433 - [needResched = 1] (0:612:2 - 3)
		IfNotBlocked
		reached[1][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_needResched);
		((P1 *)_this)->_5_10_13_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_10_13_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_10_13_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[1][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[1][613] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 844: // STATE 607 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][607] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_13_idx);
		((P1 *)_this)->_5_10_13_idx = (((int)((P1 *)_this)->_5_10_13_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_10_13_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 845: // STATE 610 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (628:0:2 - 1)
		IfNotBlocked
		reached[1][610] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_13_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_13_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_idx = 0;
		/* merge: goto :b62(628, 611, 628) */
		reached[1][611] = 1;
		;
		/* merge: interrupted_task = EP(628, 615, 628) */
		reached[1][615] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_interrupted_task);
		((P1 *)_this)->_5_10_13_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_13_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 846: // STATE 615 - resume_suspend.pml:442 - [interrupted_task = EP] (0:628:1 - 3)
		IfNotBlocked
		reached[1][615] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_13_interrupted_task);
		((P1 *)_this)->_5_10_13_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_10_13_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 847: // STATE 616 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (625:0:1 - 1)
		IfNotBlocked
		reached[1][616] = 1;
		if (!((((((int)((P1 *)_this)->_5_10_13_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_10_13_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 617, 625) */
		reached[1][617] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_10_13_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 848: // STATE 618 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (651:0:2 - 1)
		IfNotBlocked
		reached[1][618] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(651, 619, 651) */
		reached[1][619] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_13_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_13_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_10_13_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(651, 620, 651) */
		reached[1][620] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_10_13_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_10_13_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 624, 651) */
		reached[1][624] = 1;
		;
		/* merge: .(goto)(0, 629, 651) */
		reached[1][629] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 849: // STATE 622 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][622] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 850: // STATE 630 - resume_suspend.pml:208 - [prio = 0] (0:646:6 - 1)
		IfNotBlocked
		reached[1][630] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_80_prio);
		((P1 *)_this)->_5_10_13_80_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_10_13_80_prio));
#endif
		;
		/* merge: top_task = 0(646, 631, 646) */
		reached[1][631] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_80_top_task);
		((P1 *)_this)->_5_10_13_80_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_10_13_80_top_task));
#endif
		;
		/* merge: found = 0(646, 632, 646) */
		reached[1][632] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_10_13_80_found);
		((P1 *)_this)->_5_10_13_80_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_13_80_found));
#endif
		;
		/* merge: prio = 0(646, 633, 646) */
		reached[1][633] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_10_13_80_prio);
		((P1 *)_this)->_5_10_13_80_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_10_13_80_prio));
#endif
		;
		/* merge: top_task = 0(646, 634, 646) */
		reached[1][634] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_10_13_80_top_task);
		((P1 *)_this)->_5_10_13_80_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_10_13_80_top_task));
#endif
		;
		/* merge: found = 0(646, 635, 646) */
		reached[1][635] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_10_13_80_found);
		((P1 *)_this)->_5_10_13_80_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_13_80_found));
#endif
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[1][647] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 851: // STATE 636 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][636] = 1;
		if (!(((((int)((P1 *)_this)->_5_10_13_80_prio)<4)&& !(((int)((P1 *)_this)->_5_10_13_80_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 852: // STATE 637 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (646:0:2 - 1)
		IfNotBlocked
		reached[1][637] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_10_13_80_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](646, 638, 646) */
		reached[1][638] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_80_top_task);
		((P1 *)_this)->_5_10_13_80_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_10_13_80_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_10_13_80_top_task));
#endif
		;
		/* merge: found = 1(646, 639, 646) */
		reached[1][639] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_80_found);
		((P1 *)_this)->_5_10_13_80_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_10_13_80_found));
#endif
		;
		/* merge: .(goto)(0, 643, 646) */
		reached[1][643] = 1;
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[1][647] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 853: // STATE 641 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][641] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_10_13_80_prio);
		((P1 *)_this)->_5_10_13_80_prio = (((int)((P1 *)_this)->_5_10_13_80_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_10_13_80_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 854: // STATE 644 - resume_suspend.pml:227 - [(((prio>=4)||found))] (669:0:3 - 1)
		IfNotBlocked
		reached[1][644] = 1;
		if (!(((((int)((P1 *)_this)->_5_10_13_80_prio)>=4)||((int)((P1 *)_this)->_5_10_13_80_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_13_80_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_10_13_80_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_80_found = 0;
		/* merge: goto :b65(669, 645, 669) */
		reached[1][645] = 1;
		;
		/* merge: newTask = top_task(669, 649, 669) */
		reached[1][649] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_10_13_80_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[1][650] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_10_13_80_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 855: // STATE 649 - resume_suspend.pml:231 - [newTask = top_task] (0:669:2 - 3)
		IfNotBlocked
		reached[1][649] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_10_13_80_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[1][650] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_10_13_80_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 856: // STATE 652 - resume_suspend.pml:177 - [deq_idx = 0] (0:659:2 - 1)
		IfNotBlocked
		reached[1][652] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_10_13_81_deq_idx);
		((P1 *)_this)->_5_10_13_81_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_10_13_81_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(659, 653, 659) */
		reached[1][653] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_81_deq_idx);
		((P1 *)_this)->_5_10_13_81_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_10_13_81_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[1][660] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 857: // STATE 654 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (659:0:2 - 1)
		IfNotBlocked
		reached[1][654] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_81_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](659, 655, 659) */
		reached[1][655] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_10_13_81_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_10_13_81_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_10_13_81_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_10_13_81_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(659, 656, 659) */
		reached[1][656] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_10_13_81_deq_idx);
		((P1 *)_this)->_5_10_13_81_deq_idx = (((int)((P1 *)_this)->_5_10_13_81_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_10_13_81_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[1][660] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 858: // STATE 657 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][657] = 1;
		if (!((((int)((P1 *)_this)->_5_10_13_81_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_10_13_81_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_10_13_81_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_10_13_81_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 859: // STATE 662 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (673:0:4 - 1)
		IfNotBlocked
		reached[1][662] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(673, 663, 673) */
		reached[1][663] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(673, 664, 673) */
		reached[1][664] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(673, 668, 673) */
		reached[1][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[1][670] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[1][671] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 860: // STATE 666 - resume_suspend.pml:192 - [(1)] (673:0:2 - 1)
		IfNotBlocked
		reached[1][666] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(673, 668, 673) */
		reached[1][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[1][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[1][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 861: // STATE 670 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:673:2 - 3)
		IfNotBlocked
		reached[1][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[1][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 862: // STATE 672 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][672] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 863: // STATE 676 - resume_suspend.pml:492 - [((EP==2))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][676] = 1;
		if (!((((int)now.EP)==2)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 864: // STATE 677 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[1][677] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_currentTask);
		((P1 *)_this)->_5_11_14_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process2:currentTask", ((int)((P1 *)_this)->_5_11_14_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 865: // STATE 678 - resume_suspend.pml:377 - [((((1>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][678] = 1;
		if (!((((1>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 866: // STATE 679 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:693:6 - 1)
		IfNotBlocked
		reached[1][679] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(693, 680, 693) */
		reached[1][680] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(693, 682, 693) */
		reached[1][682] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_14_currentTask);
		((P1 *)_this)->_5_11_14_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:currentTask", ((int)((P1 *)_this)->_5_11_14_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(693, 683, 693) */
		reached[1][683] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_currentTask), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_11_14_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process2:currentTask].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+1)(693, 684, 693) */
		reached[1][684] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P1 *)_this)->_5_11_14_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tcb[Process2:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 1(693, 685, 693) */
		reached[1][685] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_11_14_currentTask, 5) ].delayTicks = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 867: // STATE 686 - resume_suspend.pml:70 - [((sortLink.count<8))] (821:0:2 - 1)
		IfNotBlocked
		reached[1][686] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(821, 687, 821) */
		reached[1][687] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P1 *)_this)->_5_11_14_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(821, 688, 821) */
		reached[1][688] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 692, 821) */
		reached[1][692] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 868: // STATE 690 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][690] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 869: // STATE 694 - resume_suspend.pml:401 - [interrupted_task = 0] (0:702:6 - 1)
		IfNotBlocked
		reached[1][694] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_interrupted_task);
		((P1 *)_this)->_5_11_14_85_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_14_85_interrupted_task));
#endif
		;
		/* merge: idx = 0(702, 695, 702) */
		reached[1][695] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_idx);
		((P1 *)_this)->_5_11_14_85_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_11_14_85_idx));
#endif
		;
		/* merge: taskId = 0(702, 696, 702) */
		reached[1][696] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_14_85_taskId);
		((P1 *)_this)->_5_11_14_85_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_11_14_85_taskId));
#endif
		;
		/* merge: needResched = 0(702, 697, 702) */
		reached[1][697] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_14_85_needResched);
		((P1 *)_this)->_5_11_14_85_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_14_85_needResched));
#endif
		;
		/* merge: interrupted_task = 0(702, 698, 702) */
		reached[1][698] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_11_14_85_interrupted_task);
		((P1 *)_this)->_5_11_14_85_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_14_85_interrupted_task));
#endif
		;
		/* merge: needResched = 0(702, 699, 702) */
		reached[1][699] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_11_14_85_needResched);
		((P1 *)_this)->_5_11_14_85_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_14_85_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 870: // STATE 700 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:759:4 - 1)
		IfNotBlocked
		reached[1][700] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(759, 701, 759) */
		reached[1][701] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(759, 703, 759) */
		reached[1][703] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(759, 704, 759) */
		reached[1][704] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_14_85_idx);
		((P1 *)_this)->_5_11_14_85_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_11_14_85_idx));
#endif
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[1][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 871: // STATE 705 - resume_suspend.pml:416 - [((idx<sortLink.count))] (755:0:1 - 1)
		IfNotBlocked
		reached[1][705] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 706, 755) */
		reached[1][706] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_85_taskId);
		((P1 *)_this)->_5_11_14_85_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_14_85_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_11_14_85_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 872: // STATE 707 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (743:0:2 - 1)
		IfNotBlocked
		reached[1][707] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(743, 708, 743) */
		reached[1][708] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_11_14_85_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(743, 709, 743) */
		reached[1][709] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_11_14_85_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 873: // STATE 710 - resume_suspend.pml:81 - [removePos = 0] (0:724:5 - 1)
		IfNotBlocked
		reached[1][710] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_23_removePos);
		((P1 *)_this)->_5_11_14_85_23_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_11_14_85_23_removePos));
#endif
		;
		/* merge: found = 0(724, 711, 724) */
		reached[1][711] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_23_found);
		((P1 *)_this)->_5_11_14_85_23_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_14_85_23_found));
#endif
		;
		/* merge: shiftIdx = 0(724, 712, 724) */
		reached[1][712] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx);
		((P1 *)_this)->_5_11_14_85_23_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx));
#endif
		;
		/* merge: removePos = 0(724, 713, 724) */
		reached[1][713] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_14_85_23_removePos);
		((P1 *)_this)->_5_11_14_85_23_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_11_14_85_23_removePos));
#endif
		;
		/* merge: found = 0(724, 714, 724) */
		reached[1][714] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_11_14_85_23_found);
		((P1 *)_this)->_5_11_14_85_23_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_14_85_23_found));
#endif
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[1][725] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 874: // STATE 715 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][715] = 1;
		if (!(((((int)((P1 *)_this)->_5_11_14_85_23_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_11_14_85_23_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 875: // STATE 716 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (724:0:1 - 1)
		IfNotBlocked
		reached[1][716] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_14_85_23_removePos), 8) ])==((int)((P1 *)_this)->_5_11_14_85_taskId))))
			continue;
		/* merge: found = 1(0, 717, 724) */
		reached[1][717] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_85_23_found);
		((P1 *)_this)->_5_11_14_85_23_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_14_85_23_found));
#endif
		;
		/* merge: .(goto)(0, 721, 724) */
		reached[1][721] = 1;
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[1][725] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 876: // STATE 719 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][719] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_85_23_removePos);
		((P1 *)_this)->_5_11_14_85_23_removePos = (((int)((P1 *)_this)->_5_11_14_85_23_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_11_14_85_23_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 877: // STATE 727 - resume_suspend.pml:100 - [((found==1))] (734:0:2 - 1)
		IfNotBlocked
		reached[1][727] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_23_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_14_85_23_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_14_85_23_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_23_found = 0;
		/* merge: shiftIdx = removePos(0, 728, 734) */
		reached[1][728] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx);
		((P1 *)_this)->_5_11_14_85_23_shiftIdx = ((int)((P1 *)_this)->_5_11_14_85_23_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[1][735] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 878: // STATE 729 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (734:0:2 - 1)
		IfNotBlocked
		reached[1][729] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](734, 730, 734) */
		reached[1][730] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_11_14_85_23_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(734, 731, 734) */
		reached[1][731] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx);
		((P1 *)_this)->_5_11_14_85_23_shiftIdx = (((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[1][735] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 879: // STATE 732 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (751:0:3 - 1)
		IfNotBlocked
		reached[1][732] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_23_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_14_85_23_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_14_85_23_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_23_shiftIdx = 0;
		/* merge: goto :b69(751, 733, 751) */
		reached[1][733] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(751, 737, 751) */
		reached[1][737] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[1][738] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[1][742] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 880: // STATE 737 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:751:2 - 3)
		IfNotBlocked
		reached[1][737] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[1][738] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[1][742] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 881: // STATE 744 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (759:0:4 - 1)
		IfNotBlocked
		reached[1][744] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(759, 745, 759) */
		reached[1][745] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_14_85_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_14_85_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_11_14_85_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(759, 746, 759) */
		reached[1][746] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_14_85_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(759, 750, 759) */
		reached[1][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[1][752] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_14_85_needResched);
		((P1 *)_this)->_5_11_14_85_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_14_85_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_11_14_85_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[1][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[1][760] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 882: // STATE 748 - resume_suspend.pml:140 - [assert(0)] (0:759:2 - 1)
		IfNotBlocked
		reached[1][748] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(759, 750, 759) */
		reached[1][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[1][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_needResched);
		((P1 *)_this)->_5_11_14_85_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_14_85_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_11_14_85_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[1][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[1][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 883: // STATE 752 - resume_suspend.pml:433 - [needResched = 1] (0:759:2 - 3)
		IfNotBlocked
		reached[1][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_needResched);
		((P1 *)_this)->_5_11_14_85_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_14_85_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_11_14_85_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[1][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[1][760] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 884: // STATE 754 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][754] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_85_idx);
		((P1 *)_this)->_5_11_14_85_idx = (((int)((P1 *)_this)->_5_11_14_85_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_11_14_85_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 885: // STATE 757 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (775:0:2 - 1)
		IfNotBlocked
		reached[1][757] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_14_85_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_14_85_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_idx = 0;
		/* merge: goto :b67(775, 758, 775) */
		reached[1][758] = 1;
		;
		/* merge: interrupted_task = EP(775, 762, 775) */
		reached[1][762] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_interrupted_task);
		((P1 *)_this)->_5_11_14_85_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_14_85_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 886: // STATE 762 - resume_suspend.pml:442 - [interrupted_task = EP] (0:775:1 - 3)
		IfNotBlocked
		reached[1][762] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_85_interrupted_task);
		((P1 *)_this)->_5_11_14_85_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_14_85_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 887: // STATE 763 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (772:0:1 - 1)
		IfNotBlocked
		reached[1][763] = 1;
		if (!((((((int)((P1 *)_this)->_5_11_14_85_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_11_14_85_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 764, 772) */
		reached[1][764] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_11_14_85_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 888: // STATE 765 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (798:0:2 - 1)
		IfNotBlocked
		reached[1][765] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(798, 766, 798) */
		reached[1][766] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_14_85_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_14_85_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_11_14_85_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(798, 767, 798) */
		reached[1][767] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_14_85_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_14_85_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 771, 798) */
		reached[1][771] = 1;
		;
		/* merge: .(goto)(0, 776, 798) */
		reached[1][776] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 889: // STATE 769 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][769] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 890: // STATE 777 - resume_suspend.pml:208 - [prio = 0] (0:793:6 - 1)
		IfNotBlocked
		reached[1][777] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_26_prio);
		((P1 *)_this)->_5_11_14_85_26_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_11_14_85_26_prio));
#endif
		;
		/* merge: top_task = 0(793, 778, 793) */
		reached[1][778] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_26_top_task);
		((P1 *)_this)->_5_11_14_85_26_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_11_14_85_26_top_task));
#endif
		;
		/* merge: found = 0(793, 779, 793) */
		reached[1][779] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_14_85_26_found);
		((P1 *)_this)->_5_11_14_85_26_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_14_85_26_found));
#endif
		;
		/* merge: prio = 0(793, 780, 793) */
		reached[1][780] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_14_85_26_prio);
		((P1 *)_this)->_5_11_14_85_26_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_11_14_85_26_prio));
#endif
		;
		/* merge: top_task = 0(793, 781, 793) */
		reached[1][781] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_11_14_85_26_top_task);
		((P1 *)_this)->_5_11_14_85_26_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_11_14_85_26_top_task));
#endif
		;
		/* merge: found = 0(793, 782, 793) */
		reached[1][782] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_11_14_85_26_found);
		((P1 *)_this)->_5_11_14_85_26_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_14_85_26_found));
#endif
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[1][794] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 891: // STATE 783 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][783] = 1;
		if (!(((((int)((P1 *)_this)->_5_11_14_85_26_prio)<4)&& !(((int)((P1 *)_this)->_5_11_14_85_26_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 892: // STATE 784 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (793:0:2 - 1)
		IfNotBlocked
		reached[1][784] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_11_14_85_26_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](793, 785, 793) */
		reached[1][785] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_26_top_task);
		((P1 *)_this)->_5_11_14_85_26_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_11_14_85_26_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_11_14_85_26_top_task));
#endif
		;
		/* merge: found = 1(793, 786, 793) */
		reached[1][786] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_26_found);
		((P1 *)_this)->_5_11_14_85_26_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_14_85_26_found));
#endif
		;
		/* merge: .(goto)(0, 790, 793) */
		reached[1][790] = 1;
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[1][794] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 893: // STATE 788 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][788] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_14_85_26_prio);
		((P1 *)_this)->_5_11_14_85_26_prio = (((int)((P1 *)_this)->_5_11_14_85_26_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_11_14_85_26_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 894: // STATE 791 - resume_suspend.pml:227 - [(((prio>=4)||found))] (816:0:3 - 1)
		IfNotBlocked
		reached[1][791] = 1;
		if (!(((((int)((P1 *)_this)->_5_11_14_85_26_prio)>=4)||((int)((P1 *)_this)->_5_11_14_85_26_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_14_85_26_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_14_85_26_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_26_found = 0;
		/* merge: goto :b70(816, 792, 816) */
		reached[1][792] = 1;
		;
		/* merge: newTask = top_task(816, 796, 816) */
		reached[1][796] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_11_14_85_26_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[1][797] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_11_14_85_26_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 895: // STATE 796 - resume_suspend.pml:231 - [newTask = top_task] (0:816:2 - 3)
		IfNotBlocked
		reached[1][796] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_11_14_85_26_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[1][797] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_11_14_85_26_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 896: // STATE 799 - resume_suspend.pml:177 - [deq_idx = 0] (0:806:2 - 1)
		IfNotBlocked
		reached[1][799] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_14_85_27_deq_idx);
		((P1 *)_this)->_5_11_14_85_27_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_11_14_85_27_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(806, 800, 806) */
		reached[1][800] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_27_deq_idx);
		((P1 *)_this)->_5_11_14_85_27_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_11_14_85_27_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[1][807] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 897: // STATE 801 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (806:0:2 - 1)
		IfNotBlocked
		reached[1][801] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_27_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](806, 802, 806) */
		reached[1][802] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_11_14_85_27_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_11_14_85_27_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_11_14_85_27_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_11_14_85_27_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(806, 803, 806) */
		reached[1][803] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_14_85_27_deq_idx);
		((P1 *)_this)->_5_11_14_85_27_deq_idx = (((int)((P1 *)_this)->_5_11_14_85_27_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_11_14_85_27_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[1][807] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 898: // STATE 804 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][804] = 1;
		if (!((((int)((P1 *)_this)->_5_11_14_85_27_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_14_85_27_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_11_14_85_27_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_14_85_27_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 899: // STATE 809 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (820:0:4 - 1)
		IfNotBlocked
		reached[1][809] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(820, 810, 820) */
		reached[1][810] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(820, 811, 820) */
		reached[1][811] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(820, 815, 820) */
		reached[1][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[1][817] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[1][818] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 900: // STATE 813 - resume_suspend.pml:192 - [(1)] (820:0:2 - 1)
		IfNotBlocked
		reached[1][813] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(820, 815, 820) */
		reached[1][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[1][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[1][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 901: // STATE 817 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:820:2 - 3)
		IfNotBlocked
		reached[1][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[1][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 902: // STATE 819 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][819] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 903: // STATE 822 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][822] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 904: // STATE 829 - resume_suspend.pml:401 - [interrupted_task = 0] (0:837:6 - 1)
		IfNotBlocked
		reached[1][829] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_interrupted_task);
		((P1 *)_this)->_5_11_15_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_15_interrupted_task));
#endif
		;
		/* merge: idx = 0(837, 830, 837) */
		reached[1][830] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_idx);
		((P1 *)_this)->_5_11_15_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_11_15_idx));
#endif
		;
		/* merge: taskId = 0(837, 831, 837) */
		reached[1][831] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_15_taskId);
		((P1 *)_this)->_5_11_15_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_11_15_taskId));
#endif
		;
		/* merge: needResched = 0(837, 832, 837) */
		reached[1][832] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_15_needResched);
		((P1 *)_this)->_5_11_15_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_15_needResched));
#endif
		;
		/* merge: interrupted_task = 0(837, 833, 837) */
		reached[1][833] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_11_15_interrupted_task);
		((P1 *)_this)->_5_11_15_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_15_interrupted_task));
#endif
		;
		/* merge: needResched = 0(837, 834, 837) */
		reached[1][834] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_11_15_needResched);
		((P1 *)_this)->_5_11_15_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_15_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 905: // STATE 835 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:894:4 - 1)
		IfNotBlocked
		reached[1][835] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(894, 836, 894) */
		reached[1][836] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(894, 838, 894) */
		reached[1][838] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(894, 839, 894) */
		reached[1][839] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_15_idx);
		((P1 *)_this)->_5_11_15_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_11_15_idx));
#endif
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[1][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 906: // STATE 840 - resume_suspend.pml:416 - [((idx<sortLink.count))] (890:0:1 - 1)
		IfNotBlocked
		reached[1][840] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 841, 890) */
		reached[1][841] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_15_taskId);
		((P1 *)_this)->_5_11_15_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_15_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_11_15_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 907: // STATE 842 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (878:0:2 - 1)
		IfNotBlocked
		reached[1][842] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(878, 843, 878) */
		reached[1][843] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_11_15_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(878, 844, 878) */
		reached[1][844] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_11_15_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 908: // STATE 845 - resume_suspend.pml:81 - [removePos = 0] (0:859:5 - 1)
		IfNotBlocked
		reached[1][845] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_88_removePos);
		((P1 *)_this)->_5_11_15_88_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_11_15_88_removePos));
#endif
		;
		/* merge: found = 0(859, 846, 859) */
		reached[1][846] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_88_found);
		((P1 *)_this)->_5_11_15_88_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_15_88_found));
#endif
		;
		/* merge: shiftIdx = 0(859, 847, 859) */
		reached[1][847] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_15_88_shiftIdx);
		((P1 *)_this)->_5_11_15_88_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_11_15_88_shiftIdx));
#endif
		;
		/* merge: removePos = 0(859, 848, 859) */
		reached[1][848] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_15_88_removePos);
		((P1 *)_this)->_5_11_15_88_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_11_15_88_removePos));
#endif
		;
		/* merge: found = 0(859, 849, 859) */
		reached[1][849] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_11_15_88_found);
		((P1 *)_this)->_5_11_15_88_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_15_88_found));
#endif
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[1][860] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 909: // STATE 850 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][850] = 1;
		if (!(((((int)((P1 *)_this)->_5_11_15_88_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_11_15_88_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 910: // STATE 851 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (859:0:1 - 1)
		IfNotBlocked
		reached[1][851] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_15_88_removePos), 8) ])==((int)((P1 *)_this)->_5_11_15_taskId))))
			continue;
		/* merge: found = 1(0, 852, 859) */
		reached[1][852] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_15_88_found);
		((P1 *)_this)->_5_11_15_88_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_15_88_found));
#endif
		;
		/* merge: .(goto)(0, 856, 859) */
		reached[1][856] = 1;
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[1][860] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 911: // STATE 854 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][854] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_15_88_removePos);
		((P1 *)_this)->_5_11_15_88_removePos = (((int)((P1 *)_this)->_5_11_15_88_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_11_15_88_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 912: // STATE 862 - resume_suspend.pml:100 - [((found==1))] (869:0:2 - 1)
		IfNotBlocked
		reached[1][862] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_88_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_15_88_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_15_88_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_88_found = 0;
		/* merge: shiftIdx = removePos(0, 863, 869) */
		reached[1][863] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_88_shiftIdx);
		((P1 *)_this)->_5_11_15_88_shiftIdx = ((int)((P1 *)_this)->_5_11_15_88_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_11_15_88_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[1][870] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 913: // STATE 864 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (869:0:2 - 1)
		IfNotBlocked
		reached[1][864] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_88_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](869, 865, 869) */
		reached[1][865] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_15_88_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_11_15_88_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_11_15_88_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_11_15_88_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(869, 866, 869) */
		reached[1][866] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_88_shiftIdx);
		((P1 *)_this)->_5_11_15_88_shiftIdx = (((int)((P1 *)_this)->_5_11_15_88_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_11_15_88_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[1][870] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 914: // STATE 867 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (886:0:3 - 1)
		IfNotBlocked
		reached[1][867] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_88_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_15_88_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_15_88_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_88_shiftIdx = 0;
		/* merge: goto :b74(886, 868, 886) */
		reached[1][868] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(886, 872, 886) */
		reached[1][872] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[1][873] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[1][877] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 915: // STATE 872 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:886:2 - 3)
		IfNotBlocked
		reached[1][872] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[1][873] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[1][877] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 916: // STATE 879 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (894:0:4 - 1)
		IfNotBlocked
		reached[1][879] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(894, 880, 894) */
		reached[1][880] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_15_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_15_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_11_15_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(894, 881, 894) */
		reached[1][881] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_15_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(894, 885, 894) */
		reached[1][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[1][887] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_15_needResched);
		((P1 *)_this)->_5_11_15_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_15_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_11_15_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[1][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[1][895] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 917: // STATE 883 - resume_suspend.pml:140 - [assert(0)] (0:894:2 - 1)
		IfNotBlocked
		reached[1][883] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(894, 885, 894) */
		reached[1][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[1][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_needResched);
		((P1 *)_this)->_5_11_15_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_15_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_11_15_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[1][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[1][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 918: // STATE 887 - resume_suspend.pml:433 - [needResched = 1] (0:894:2 - 3)
		IfNotBlocked
		reached[1][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_needResched);
		((P1 *)_this)->_5_11_15_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_11_15_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_11_15_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[1][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[1][895] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 919: // STATE 889 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][889] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_15_idx);
		((P1 *)_this)->_5_11_15_idx = (((int)((P1 *)_this)->_5_11_15_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_11_15_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 920: // STATE 892 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (910:0:2 - 1)
		IfNotBlocked
		reached[1][892] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_15_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_15_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_idx = 0;
		/* merge: goto :b72(910, 893, 910) */
		reached[1][893] = 1;
		;
		/* merge: interrupted_task = EP(910, 897, 910) */
		reached[1][897] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_interrupted_task);
		((P1 *)_this)->_5_11_15_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_15_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 921: // STATE 897 - resume_suspend.pml:442 - [interrupted_task = EP] (0:910:1 - 3)
		IfNotBlocked
		reached[1][897] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_15_interrupted_task);
		((P1 *)_this)->_5_11_15_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_11_15_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 922: // STATE 898 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (907:0:1 - 1)
		IfNotBlocked
		reached[1][898] = 1;
		if (!((((((int)((P1 *)_this)->_5_11_15_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_11_15_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 899, 907) */
		reached[1][899] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_11_15_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 923: // STATE 900 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (933:0:2 - 1)
		IfNotBlocked
		reached[1][900] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(933, 901, 933) */
		reached[1][901] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_15_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_15_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_11_15_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(933, 902, 933) */
		reached[1][902] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_11_15_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_11_15_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 906, 933) */
		reached[1][906] = 1;
		;
		/* merge: .(goto)(0, 911, 933) */
		reached[1][911] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 924: // STATE 904 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][904] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 925: // STATE 912 - resume_suspend.pml:208 - [prio = 0] (0:928:6 - 1)
		IfNotBlocked
		reached[1][912] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_91_prio);
		((P1 *)_this)->_5_11_15_91_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_11_15_91_prio));
#endif
		;
		/* merge: top_task = 0(928, 913, 928) */
		reached[1][913] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_91_top_task);
		((P1 *)_this)->_5_11_15_91_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_11_15_91_top_task));
#endif
		;
		/* merge: found = 0(928, 914, 928) */
		reached[1][914] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_11_15_91_found);
		((P1 *)_this)->_5_11_15_91_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_15_91_found));
#endif
		;
		/* merge: prio = 0(928, 915, 928) */
		reached[1][915] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_11_15_91_prio);
		((P1 *)_this)->_5_11_15_91_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_11_15_91_prio));
#endif
		;
		/* merge: top_task = 0(928, 916, 928) */
		reached[1][916] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_11_15_91_top_task);
		((P1 *)_this)->_5_11_15_91_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_11_15_91_top_task));
#endif
		;
		/* merge: found = 0(928, 917, 928) */
		reached[1][917] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_11_15_91_found);
		((P1 *)_this)->_5_11_15_91_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_15_91_found));
#endif
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[1][929] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 926: // STATE 918 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][918] = 1;
		if (!(((((int)((P1 *)_this)->_5_11_15_91_prio)<4)&& !(((int)((P1 *)_this)->_5_11_15_91_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 927: // STATE 919 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (928:0:2 - 1)
		IfNotBlocked
		reached[1][919] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_11_15_91_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](928, 920, 928) */
		reached[1][920] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_91_top_task);
		((P1 *)_this)->_5_11_15_91_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_11_15_91_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_11_15_91_top_task));
#endif
		;
		/* merge: found = 1(928, 921, 928) */
		reached[1][921] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_91_found);
		((P1 *)_this)->_5_11_15_91_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_11_15_91_found));
#endif
		;
		/* merge: .(goto)(0, 925, 928) */
		reached[1][925] = 1;
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[1][929] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 928: // STATE 923 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][923] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_11_15_91_prio);
		((P1 *)_this)->_5_11_15_91_prio = (((int)((P1 *)_this)->_5_11_15_91_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_11_15_91_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 929: // STATE 926 - resume_suspend.pml:227 - [(((prio>=4)||found))] (951:0:3 - 1)
		IfNotBlocked
		reached[1][926] = 1;
		if (!(((((int)((P1 *)_this)->_5_11_15_91_prio)>=4)||((int)((P1 *)_this)->_5_11_15_91_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_15_91_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_11_15_91_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_91_found = 0;
		/* merge: goto :b75(951, 927, 951) */
		reached[1][927] = 1;
		;
		/* merge: newTask = top_task(951, 931, 951) */
		reached[1][931] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_11_15_91_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[1][932] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_11_15_91_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 930: // STATE 931 - resume_suspend.pml:231 - [newTask = top_task] (0:951:2 - 3)
		IfNotBlocked
		reached[1][931] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_11_15_91_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[1][932] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_11_15_91_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 931: // STATE 934 - resume_suspend.pml:177 - [deq_idx = 0] (0:941:2 - 1)
		IfNotBlocked
		reached[1][934] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_11_15_92_deq_idx);
		((P1 *)_this)->_5_11_15_92_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_11_15_92_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(941, 935, 941) */
		reached[1][935] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_92_deq_idx);
		((P1 *)_this)->_5_11_15_92_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_11_15_92_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[1][942] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 932: // STATE 936 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (941:0:2 - 1)
		IfNotBlocked
		reached[1][936] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_92_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](941, 937, 941) */
		reached[1][937] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_11_15_92_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_11_15_92_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_11_15_92_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_11_15_92_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(941, 938, 941) */
		reached[1][938] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_11_15_92_deq_idx);
		((P1 *)_this)->_5_11_15_92_deq_idx = (((int)((P1 *)_this)->_5_11_15_92_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_11_15_92_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[1][942] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 933: // STATE 939 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][939] = 1;
		if (!((((int)((P1 *)_this)->_5_11_15_92_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_11_15_92_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_11_15_92_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_11_15_92_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 934: // STATE 944 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (955:0:4 - 1)
		IfNotBlocked
		reached[1][944] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(955, 945, 955) */
		reached[1][945] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(955, 946, 955) */
		reached[1][946] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(955, 950, 955) */
		reached[1][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[1][952] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[1][953] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 935: // STATE 948 - resume_suspend.pml:192 - [(1)] (955:0:2 - 1)
		IfNotBlocked
		reached[1][948] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(955, 950, 955) */
		reached[1][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[1][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[1][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 936: // STATE 952 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:955:2 - 3)
		IfNotBlocked
		reached[1][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[1][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 937: // STATE 954 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][954] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 938: // STATE 958 - resume_suspend.pml:493 - [((counter<100))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][958] = 1;
		if (!((((int)((P1 *)_this)->counter)<100)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 939: // STATE 959 - resume_suspend.pml:493 - [((EP==2))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][959] = 1;
		if (!((((int)now.EP)==2)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 940: // STATE 961 - resume_suspend.pml:401 - [interrupted_task = 0] (0:969:6 - 1)
		IfNotBlocked
		reached[1][961] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_interrupted_task);
		((P1 *)_this)->_5_12_16_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_12_16_interrupted_task));
#endif
		;
		/* merge: idx = 0(969, 962, 969) */
		reached[1][962] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_idx);
		((P1 *)_this)->_5_12_16_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_12_16_idx));
#endif
		;
		/* merge: taskId = 0(969, 963, 969) */
		reached[1][963] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_12_16_taskId);
		((P1 *)_this)->_5_12_16_taskId = 0;
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_12_16_taskId));
#endif
		;
		/* merge: needResched = 0(969, 964, 969) */
		reached[1][964] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_12_16_needResched);
		((P1 *)_this)->_5_12_16_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_12_16_needResched));
#endif
		;
		/* merge: interrupted_task = 0(969, 965, 969) */
		reached[1][965] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_12_16_interrupted_task);
		((P1 *)_this)->_5_12_16_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_12_16_interrupted_task));
#endif
		;
		/* merge: needResched = 0(969, 966, 969) */
		reached[1][966] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_12_16_needResched);
		((P1 *)_this)->_5_12_16_needResched = 0;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_12_16_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 941: // STATE 967 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:1026:4 - 1)
		IfNotBlocked
		reached[1][967] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(1026, 968, 1026) */
		reached[1][968] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(1026, 970, 1026) */
		reached[1][970] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(1026, 971, 1026) */
		reached[1][971] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_12_16_idx);
		((P1 *)_this)->_5_12_16_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_12_16_idx));
#endif
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[1][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 942: // STATE 972 - resume_suspend.pml:416 - [((idx<sortLink.count))] (1022:0:1 - 1)
		IfNotBlocked
		reached[1][972] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 973, 1022) */
		reached[1][973] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_12_16_taskId);
		((P1 *)_this)->_5_12_16_taskId = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_12_16_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process2:taskId", ((int)((P1 *)_this)->_5_12_16_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 943: // STATE 974 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (1010:0:2 - 1)
		IfNotBlocked
		reached[1][974] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(1010, 975, 1010) */
		reached[1][975] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_12_16_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(1010, 976, 1010) */
		reached[1][976] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P1 *)_this)->_5_12_16_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process2:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 944: // STATE 977 - resume_suspend.pml:81 - [removePos = 0] (0:991:5 - 1)
		IfNotBlocked
		reached[1][977] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_95_removePos);
		((P1 *)_this)->_5_12_16_95_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_12_16_95_removePos));
#endif
		;
		/* merge: found = 0(991, 978, 991) */
		reached[1][978] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_95_found);
		((P1 *)_this)->_5_12_16_95_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_12_16_95_found));
#endif
		;
		/* merge: shiftIdx = 0(991, 979, 991) */
		reached[1][979] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_12_16_95_shiftIdx);
		((P1 *)_this)->_5_12_16_95_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_12_16_95_shiftIdx));
#endif
		;
		/* merge: removePos = 0(991, 980, 991) */
		reached[1][980] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_12_16_95_removePos);
		((P1 *)_this)->_5_12_16_95_removePos = 0;
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_12_16_95_removePos));
#endif
		;
		/* merge: found = 0(991, 981, 991) */
		reached[1][981] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_12_16_95_found);
		((P1 *)_this)->_5_12_16_95_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_12_16_95_found));
#endif
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[1][992] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 945: // STATE 982 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][982] = 1;
		if (!(((((int)((P1 *)_this)->_5_12_16_95_removePos)<((int)now.sortLink.count))&& !(((int)((P1 *)_this)->_5_12_16_95_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 946: // STATE 983 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (991:0:1 - 1)
		IfNotBlocked
		reached[1][983] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_12_16_95_removePos), 8) ])==((int)((P1 *)_this)->_5_12_16_taskId))))
			continue;
		/* merge: found = 1(0, 984, 991) */
		reached[1][984] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_12_16_95_found);
		((P1 *)_this)->_5_12_16_95_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_12_16_95_found));
#endif
		;
		/* merge: .(goto)(0, 988, 991) */
		reached[1][988] = 1;
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[1][992] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 947: // STATE 986 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][986] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_12_16_95_removePos);
		((P1 *)_this)->_5_12_16_95_removePos = (((int)((P1 *)_this)->_5_12_16_95_removePos)+1);
#ifdef VAR_RANGES
		logval("Process2:removePos", ((int)((P1 *)_this)->_5_12_16_95_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 948: // STATE 994 - resume_suspend.pml:100 - [((found==1))] (1001:0:2 - 1)
		IfNotBlocked
		reached[1][994] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_95_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_12_16_95_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_12_16_95_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_95_found = 0;
		/* merge: shiftIdx = removePos(0, 995, 1001) */
		reached[1][995] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_95_shiftIdx);
		((P1 *)_this)->_5_12_16_95_shiftIdx = ((int)((P1 *)_this)->_5_12_16_95_removePos);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_12_16_95_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[1][1002] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 949: // STATE 996 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (1001:0:2 - 1)
		IfNotBlocked
		reached[1][996] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_95_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](1001, 997, 1001) */
		reached[1][997] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_12_16_95_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P1 *)_this)->_5_12_16_95_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P1 *)_this)->_5_12_16_95_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process2:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P1 *)_this)->_5_12_16_95_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(1001, 998, 1001) */
		reached[1][998] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_95_shiftIdx);
		((P1 *)_this)->_5_12_16_95_shiftIdx = (((int)((P1 *)_this)->_5_12_16_95_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process2:shiftIdx", ((int)((P1 *)_this)->_5_12_16_95_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[1][1002] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 950: // STATE 999 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (1018:0:3 - 1)
		IfNotBlocked
		reached[1][999] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_95_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_12_16_95_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_12_16_95_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_95_shiftIdx = 0;
		/* merge: goto :b79(1018, 1000, 1018) */
		reached[1][1000] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(1018, 1004, 1018) */
		reached[1][1004] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[1][1005] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[1][1009] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 951: // STATE 1004 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:1018:2 - 3)
		IfNotBlocked
		reached[1][1004] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[1][1005] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[1][1009] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 952: // STATE 1011 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (1026:0:4 - 1)
		IfNotBlocked
		reached[1][1011] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(1026, 1012, 1026) */
		reached[1][1012] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_12_16_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_12_16_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_12_16_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tasks[readyQueue[tcb[Process2:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(1026, 1013, 1026) */
		reached[1][1013] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_12_16_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[1][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[1][1019] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_12_16_needResched);
		((P1 *)_this)->_5_12_16_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_12_16_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_12_16_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[1][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[1][1027] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 953: // STATE 1015 - resume_suspend.pml:140 - [assert(0)] (0:1026:2 - 1)
		IfNotBlocked
		reached[1][1015] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[1][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[1][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_needResched);
		((P1 *)_this)->_5_12_16_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_12_16_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_12_16_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[1][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[1][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 954: // STATE 1019 - resume_suspend.pml:433 - [needResched = 1] (0:1026:2 - 3)
		IfNotBlocked
		reached[1][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_needResched);
		((P1 *)_this)->_5_12_16_needResched = 1;
#ifdef VAR_RANGES
		logval("Process2:needResched", ((int)((P1 *)_this)->_5_12_16_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _5_12_16_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[1][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[1][1027] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 955: // STATE 1021 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][1021] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_12_16_idx);
		((P1 *)_this)->_5_12_16_idx = (((int)((P1 *)_this)->_5_12_16_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:idx", ((int)((P1 *)_this)->_5_12_16_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 956: // STATE 1024 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (1042:0:2 - 1)
		IfNotBlocked
		reached[1][1024] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_12_16_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_12_16_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_idx = 0;
		/* merge: goto :b77(1042, 1025, 1042) */
		reached[1][1025] = 1;
		;
		/* merge: interrupted_task = EP(1042, 1029, 1042) */
		reached[1][1029] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_interrupted_task);
		((P1 *)_this)->_5_12_16_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_12_16_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 957: // STATE 1029 - resume_suspend.pml:442 - [interrupted_task = EP] (0:1042:1 - 3)
		IfNotBlocked
		reached[1][1029] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_12_16_interrupted_task);
		((P1 *)_this)->_5_12_16_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process2:interrupted_task", ((int)((P1 *)_this)->_5_12_16_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 958: // STATE 1030 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (1039:0:1 - 1)
		IfNotBlocked
		reached[1][1030] = 1;
		if (!((((((int)((P1 *)_this)->_5_12_16_interrupted_task)>=1)&&(((int)((P1 *)_this)->_5_12_16_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 1031, 1039) */
		reached[1][1031] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].state);
		now.tcb[ Index(((P1 *)_this)->_5_12_16_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process2:interrupted_task].state", ((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 959: // STATE 1032 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (1065:0:2 - 1)
		IfNotBlocked
		reached[1][1032] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(1065, 1033, 1065) */
		reached[1][1033] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_12_16_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_12_16_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P1 *)_this)->_5_12_16_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tasks[readyQueue[tcb[Process2:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(1065, 1034, 1065) */
		reached[1][1034] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P1 *)_this)->_5_12_16_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process2:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P1 *)_this)->_5_12_16_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 1038, 1065) */
		reached[1][1038] = 1;
		;
		/* merge: .(goto)(0, 1043, 1065) */
		reached[1][1043] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 960: // STATE 1036 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[1][1036] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 961: // STATE 1044 - resume_suspend.pml:208 - [prio = 0] (0:1060:6 - 1)
		IfNotBlocked
		reached[1][1044] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_98_prio);
		((P1 *)_this)->_5_12_16_98_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_12_16_98_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1045, 1060) */
		reached[1][1045] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_98_top_task);
		((P1 *)_this)->_5_12_16_98_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_12_16_98_top_task));
#endif
		;
		/* merge: found = 0(1060, 1046, 1060) */
		reached[1][1046] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P1 *)_this)->_5_12_16_98_found);
		((P1 *)_this)->_5_12_16_98_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_12_16_98_found));
#endif
		;
		/* merge: prio = 0(1060, 1047, 1060) */
		reached[1][1047] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P1 *)_this)->_5_12_16_98_prio);
		((P1 *)_this)->_5_12_16_98_prio = 0;
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_12_16_98_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1048, 1060) */
		reached[1][1048] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P1 *)_this)->_5_12_16_98_top_task);
		((P1 *)_this)->_5_12_16_98_top_task = 0;
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_12_16_98_top_task));
#endif
		;
		/* merge: found = 0(1060, 1049, 1060) */
		reached[1][1049] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P1 *)_this)->_5_12_16_98_found);
		((P1 *)_this)->_5_12_16_98_found = 0;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_12_16_98_found));
#endif
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[1][1061] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 962: // STATE 1050 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][1050] = 1;
		if (!(((((int)((P1 *)_this)->_5_12_16_98_prio)<4)&& !(((int)((P1 *)_this)->_5_12_16_98_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 963: // STATE 1051 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (1060:0:2 - 1)
		IfNotBlocked
		reached[1][1051] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_12_16_98_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](1060, 1052, 1060) */
		reached[1][1052] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_98_top_task);
		((P1 *)_this)->_5_12_16_98_top_task = ((int)now.readyQueue[ Index(((int)((P1 *)_this)->_5_12_16_98_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process2:top_task", ((int)((P1 *)_this)->_5_12_16_98_top_task));
#endif
		;
		/* merge: found = 1(1060, 1053, 1060) */
		reached[1][1053] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_98_found);
		((P1 *)_this)->_5_12_16_98_found = 1;
#ifdef VAR_RANGES
		logval("Process2:found", ((int)((P1 *)_this)->_5_12_16_98_found));
#endif
		;
		/* merge: .(goto)(0, 1057, 1060) */
		reached[1][1057] = 1;
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[1][1061] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 964: // STATE 1055 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[1][1055] = 1;
		(trpt+1)->bup.oval = ((int)((P1 *)_this)->_5_12_16_98_prio);
		((P1 *)_this)->_5_12_16_98_prio = (((int)((P1 *)_this)->_5_12_16_98_prio)+1);
#ifdef VAR_RANGES
		logval("Process2:prio", ((int)((P1 *)_this)->_5_12_16_98_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 965: // STATE 1058 - resume_suspend.pml:227 - [(((prio>=4)||found))] (1083:0:3 - 1)
		IfNotBlocked
		reached[1][1058] = 1;
		if (!(((((int)((P1 *)_this)->_5_12_16_98_prio)>=4)||((int)((P1 *)_this)->_5_12_16_98_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_12_16_98_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P1 *)_this)->_5_12_16_98_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_98_found = 0;
		/* merge: goto :b80(1083, 1059, 1083) */
		reached[1][1059] = 1;
		;
		/* merge: newTask = top_task(1083, 1063, 1083) */
		reached[1][1063] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_12_16_98_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[1][1064] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_12_16_98_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 966: // STATE 1063 - resume_suspend.pml:231 - [newTask = top_task] (0:1083:2 - 3)
		IfNotBlocked
		reached[1][1063] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P1 *)_this)->_5_12_16_98_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[1][1064] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P1 *)_this)->_5_12_16_98_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 967: // STATE 1066 - resume_suspend.pml:177 - [deq_idx = 0] (0:1073:2 - 1)
		IfNotBlocked
		reached[1][1066] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P1 *)_this)->_5_12_16_99_deq_idx);
		((P1 *)_this)->_5_12_16_99_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_12_16_99_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(1073, 1067, 1073) */
		reached[1][1067] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_99_deq_idx);
		((P1 *)_this)->_5_12_16_99_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_12_16_99_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[1][1074] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 968: // STATE 1068 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (1073:0:2 - 1)
		IfNotBlocked
		reached[1][1068] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_99_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](1073, 1069, 1073) */
		reached[1][1069] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_12_16_99_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P1 *)_this)->_5_12_16_99_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P1 *)_this)->_5_12_16_99_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process2:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P1 *)_this)->_5_12_16_99_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(1073, 1070, 1073) */
		reached[1][1070] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P1 *)_this)->_5_12_16_99_deq_idx);
		((P1 *)_this)->_5_12_16_99_deq_idx = (((int)((P1 *)_this)->_5_12_16_99_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process2:deq_idx", ((int)((P1 *)_this)->_5_12_16_99_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[1][1074] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 969: // STATE 1071 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[1][1071] = 1;
		if (!((((int)((P1 *)_this)->_5_12_16_99_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _5_12_16_99_deq_idx */  (trpt+1)->bup.oval = ((P1 *)_this)->_5_12_16_99_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P1 *)_this)->_5_12_16_99_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 970: // STATE 1076 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (1087:0:4 - 1)
		IfNotBlocked
		reached[1][1076] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(1087, 1077, 1087) */
		reached[1][1077] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(1087, 1078, 1087) */
		reached[1][1078] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[1][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[1][1084] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[1][1085] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 971: // STATE 1080 - resume_suspend.pml:192 - [(1)] (1087:0:2 - 1)
		IfNotBlocked
		reached[1][1080] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[1][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[1][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[1][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 972: // STATE 1084 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:1087:2 - 3)
		IfNotBlocked
		reached[1][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[1][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 973: // STATE 1086 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[1][1086] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 974: // STATE 1093 - resume_suspend.pml:495 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[1][1093] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC Process1 */
	case 975: // STATE 1 - resume_suspend.pml:474 - [((EP==1))] (130:0:0 - 1)
		IfNotBlocked
		reached[0][1] = 1;
		if (!((((int)now.EP)==1)))
			continue;
		/* merge: printf('Process 1 running, counter=%d\\n',counter)(0, 2, 130) */
		reached[0][2] = 1;
		Printf("Process 1 running, counter=%d\n", ((int)((P0 *)_this)->counter));
		_m = 3; goto P999; /* 1 */
	case 976: // STATE 3 - resume_suspend.pml:401 - [interrupted_task = 0] (0:11:6 - 1)
		IfNotBlocked
		reached[0][3] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_interrupted_task);
		((P0 *)_this)->_4_1_1_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_1_1_interrupted_task));
#endif
		;
		/* merge: idx = 0(11, 4, 11) */
		reached[0][4] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_idx);
		((P0 *)_this)->_4_1_1_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_1_1_idx));
#endif
		;
		/* merge: taskId = 0(11, 5, 11) */
		reached[0][5] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_1_1_taskId);
		((P0 *)_this)->_4_1_1_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_1_1_taskId));
#endif
		;
		/* merge: needResched = 0(11, 6, 11) */
		reached[0][6] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_1_1_needResched);
		((P0 *)_this)->_4_1_1_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_1_1_needResched));
#endif
		;
		/* merge: interrupted_task = 0(11, 7, 11) */
		reached[0][7] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_1_1_interrupted_task);
		((P0 *)_this)->_4_1_1_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_1_1_interrupted_task));
#endif
		;
		/* merge: needResched = 0(11, 8, 11) */
		reached[0][8] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_1_1_needResched);
		((P0 *)_this)->_4_1_1_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_1_1_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 977: // STATE 9 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:68:4 - 1)
		IfNotBlocked
		reached[0][9] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(68, 10, 68) */
		reached[0][10] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(68, 12, 68) */
		reached[0][12] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(68, 13, 68) */
		reached[0][13] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_1_1_idx);
		((P0 *)_this)->_4_1_1_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_1_1_idx));
#endif
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[0][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 978: // STATE 14 - resume_suspend.pml:416 - [((idx<sortLink.count))] (64:0:1 - 1)
		IfNotBlocked
		reached[0][14] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 15, 64) */
		reached[0][15] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_1_1_taskId);
		((P0 *)_this)->_4_1_1_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_1_1_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_1_1_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 979: // STATE 16 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (52:0:2 - 1)
		IfNotBlocked
		reached[0][16] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(52, 17, 52) */
		reached[0][17] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_1_1_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(52, 18, 52) */
		reached[0][18] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_1_1_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 980: // STATE 19 - resume_suspend.pml:81 - [removePos = 0] (0:33:5 - 1)
		IfNotBlocked
		reached[0][19] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_2_removePos);
		((P0 *)_this)->_4_1_1_2_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_1_1_2_removePos));
#endif
		;
		/* merge: found = 0(33, 20, 33) */
		reached[0][20] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_2_found);
		((P0 *)_this)->_4_1_1_2_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_1_1_2_found));
#endif
		;
		/* merge: shiftIdx = 0(33, 21, 33) */
		reached[0][21] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_1_1_2_shiftIdx);
		((P0 *)_this)->_4_1_1_2_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_1_1_2_shiftIdx));
#endif
		;
		/* merge: removePos = 0(33, 22, 33) */
		reached[0][22] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_1_1_2_removePos);
		((P0 *)_this)->_4_1_1_2_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_1_1_2_removePos));
#endif
		;
		/* merge: found = 0(33, 23, 33) */
		reached[0][23] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_1_1_2_found);
		((P0 *)_this)->_4_1_1_2_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_1_1_2_found));
#endif
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[0][34] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 981: // STATE 24 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][24] = 1;
		if (!(((((int)((P0 *)_this)->_4_1_1_2_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_1_1_2_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 982: // STATE 25 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (33:0:1 - 1)
		IfNotBlocked
		reached[0][25] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_1_1_2_removePos), 8) ])==((int)((P0 *)_this)->_4_1_1_taskId))))
			continue;
		/* merge: found = 1(0, 26, 33) */
		reached[0][26] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_1_1_2_found);
		((P0 *)_this)->_4_1_1_2_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_1_1_2_found));
#endif
		;
		/* merge: .(goto)(0, 30, 33) */
		reached[0][30] = 1;
		;
		/* merge: .(goto)(0, 34, 33) */
		reached[0][34] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 983: // STATE 28 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][28] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_1_1_2_removePos);
		((P0 *)_this)->_4_1_1_2_removePos = (((int)((P0 *)_this)->_4_1_1_2_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_1_1_2_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 984: // STATE 36 - resume_suspend.pml:100 - [((found==1))] (43:0:2 - 1)
		IfNotBlocked
		reached[0][36] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_2_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_1_1_2_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_1_1_2_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_2_found = 0;
		/* merge: shiftIdx = removePos(0, 37, 43) */
		reached[0][37] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_2_shiftIdx);
		((P0 *)_this)->_4_1_1_2_shiftIdx = ((int)((P0 *)_this)->_4_1_1_2_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_1_1_2_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[0][44] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 985: // STATE 38 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (43:0:2 - 1)
		IfNotBlocked
		reached[0][38] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_2_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](43, 39, 43) */
		reached[0][39] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_1_1_2_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_1_1_2_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_1_1_2_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_1_1_2_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(43, 40, 43) */
		reached[0][40] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_2_shiftIdx);
		((P0 *)_this)->_4_1_1_2_shiftIdx = (((int)((P0 *)_this)->_4_1_1_2_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_1_1_2_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 44, 43) */
		reached[0][44] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 986: // STATE 41 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (60:0:3 - 1)
		IfNotBlocked
		reached[0][41] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_2_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_1_1_2_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_1_1_2_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_2_shiftIdx = 0;
		/* merge: goto :b3(60, 42, 60) */
		reached[0][42] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(60, 46, 60) */
		reached[0][46] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[0][47] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[0][51] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 987: // STATE 46 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:60:2 - 3)
		IfNotBlocked
		reached[0][46] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(60, 47, 60) */
		reached[0][47] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 51, 60) */
		reached[0][51] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 988: // STATE 53 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (68:0:4 - 1)
		IfNotBlocked
		reached[0][53] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(68, 54, 68) */
		reached[0][54] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_1_1_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_1_1_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_1_1_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(68, 55, 68) */
		reached[0][55] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_1_1_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(68, 59, 68) */
		reached[0][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[0][61] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_1_1_needResched);
		((P0 *)_this)->_4_1_1_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_1_1_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_1_1_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[0][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[0][69] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 989: // STATE 57 - resume_suspend.pml:140 - [assert(0)] (0:68:2 - 1)
		IfNotBlocked
		reached[0][57] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(68, 59, 68) */
		reached[0][59] = 1;
		;
		/* merge: needResched = 1(68, 61, 68) */
		reached[0][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_needResched);
		((P0 *)_this)->_4_1_1_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_1_1_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_1_1_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[0][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[0][69] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 990: // STATE 61 - resume_suspend.pml:433 - [needResched = 1] (0:68:2 - 3)
		IfNotBlocked
		reached[0][61] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_needResched);
		((P0 *)_this)->_4_1_1_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_1_1_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_1_1_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_needResched = 0;
		/* merge: .(goto)(0, 65, 68) */
		reached[0][65] = 1;
		;
		/* merge: .(goto)(0, 69, 68) */
		reached[0][69] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 991: // STATE 63 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][63] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_1_1_idx);
		((P0 *)_this)->_4_1_1_idx = (((int)((P0 *)_this)->_4_1_1_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_1_1_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 992: // STATE 66 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (84:0:2 - 1)
		IfNotBlocked
		reached[0][66] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_1_1_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_1_1_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_idx = 0;
		/* merge: goto :b1(84, 67, 84) */
		reached[0][67] = 1;
		;
		/* merge: interrupted_task = EP(84, 71, 84) */
		reached[0][71] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_interrupted_task);
		((P0 *)_this)->_4_1_1_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_1_1_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 993: // STATE 71 - resume_suspend.pml:442 - [interrupted_task = EP] (0:84:1 - 3)
		IfNotBlocked
		reached[0][71] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_1_1_interrupted_task);
		((P0 *)_this)->_4_1_1_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_1_1_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 994: // STATE 72 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (81:0:1 - 1)
		IfNotBlocked
		reached[0][72] = 1;
		if (!((((((int)((P0 *)_this)->_4_1_1_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_1_1_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 73, 81) */
		reached[0][73] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_1_1_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 995: // STATE 74 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (107:0:2 - 1)
		IfNotBlocked
		reached[0][74] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(107, 75, 107) */
		reached[0][75] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_1_1_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_1_1_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_1_1_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(107, 76, 107) */
		reached[0][76] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_1_1_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_1_1_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 80, 107) */
		reached[0][80] = 1;
		;
		/* merge: .(goto)(0, 85, 107) */
		reached[0][85] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 996: // STATE 78 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][78] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 997: // STATE 86 - resume_suspend.pml:208 - [prio = 0] (0:102:6 - 1)
		IfNotBlocked
		reached[0][86] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_5_prio);
		((P0 *)_this)->_4_1_1_5_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_1_1_5_prio));
#endif
		;
		/* merge: top_task = 0(102, 87, 102) */
		reached[0][87] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_5_top_task);
		((P0 *)_this)->_4_1_1_5_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_1_1_5_top_task));
#endif
		;
		/* merge: found = 0(102, 88, 102) */
		reached[0][88] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_1_1_5_found);
		((P0 *)_this)->_4_1_1_5_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_1_1_5_found));
#endif
		;
		/* merge: prio = 0(102, 89, 102) */
		reached[0][89] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_1_1_5_prio);
		((P0 *)_this)->_4_1_1_5_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_1_1_5_prio));
#endif
		;
		/* merge: top_task = 0(102, 90, 102) */
		reached[0][90] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_1_1_5_top_task);
		((P0 *)_this)->_4_1_1_5_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_1_1_5_top_task));
#endif
		;
		/* merge: found = 0(102, 91, 102) */
		reached[0][91] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_1_1_5_found);
		((P0 *)_this)->_4_1_1_5_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_1_1_5_found));
#endif
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[0][103] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 998: // STATE 92 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][92] = 1;
		if (!(((((int)((P0 *)_this)->_4_1_1_5_prio)<4)&& !(((int)((P0 *)_this)->_4_1_1_5_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 999: // STATE 93 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (102:0:2 - 1)
		IfNotBlocked
		reached[0][93] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_1_1_5_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](102, 94, 102) */
		reached[0][94] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_5_top_task);
		((P0 *)_this)->_4_1_1_5_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_1_1_5_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_1_1_5_top_task));
#endif
		;
		/* merge: found = 1(102, 95, 102) */
		reached[0][95] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_5_found);
		((P0 *)_this)->_4_1_1_5_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_1_1_5_found));
#endif
		;
		/* merge: .(goto)(0, 99, 102) */
		reached[0][99] = 1;
		;
		/* merge: .(goto)(0, 103, 102) */
		reached[0][103] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1000: // STATE 97 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][97] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_1_1_5_prio);
		((P0 *)_this)->_4_1_1_5_prio = (((int)((P0 *)_this)->_4_1_1_5_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_1_1_5_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1001: // STATE 100 - resume_suspend.pml:227 - [(((prio>=4)||found))] (125:0:3 - 1)
		IfNotBlocked
		reached[0][100] = 1;
		if (!(((((int)((P0 *)_this)->_4_1_1_5_prio)>=4)||((int)((P0 *)_this)->_4_1_1_5_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_1_1_5_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_1_1_5_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_5_found = 0;
		/* merge: goto :b4(125, 101, 125) */
		reached[0][101] = 1;
		;
		/* merge: newTask = top_task(125, 105, 125) */
		reached[0][105] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_1_1_5_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[0][106] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_1_1_5_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1002: // STATE 105 - resume_suspend.pml:231 - [newTask = top_task] (0:125:2 - 3)
		IfNotBlocked
		reached[0][105] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_1_1_5_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(125, 106, 125) */
		reached[0][106] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_1_1_5_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1003: // STATE 108 - resume_suspend.pml:177 - [deq_idx = 0] (0:115:2 - 1)
		IfNotBlocked
		reached[0][108] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_1_1_6_deq_idx);
		((P0 *)_this)->_4_1_1_6_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_1_1_6_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(115, 109, 115) */
		reached[0][109] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_6_deq_idx);
		((P0 *)_this)->_4_1_1_6_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_1_1_6_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[0][116] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1004: // STATE 110 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (115:0:2 - 1)
		IfNotBlocked
		reached[0][110] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_6_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](115, 111, 115) */
		reached[0][111] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_1_1_6_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_1_1_6_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_1_1_6_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_1_1_6_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(115, 112, 115) */
		reached[0][112] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_1_1_6_deq_idx);
		((P0 *)_this)->_4_1_1_6_deq_idx = (((int)((P0 *)_this)->_4_1_1_6_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_1_1_6_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 116, 115) */
		reached[0][116] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1005: // STATE 113 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][113] = 1;
		if (!((((int)((P0 *)_this)->_4_1_1_6_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_1_1_6_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_1_1_6_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_1_1_6_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1006: // STATE 118 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (129:0:4 - 1)
		IfNotBlocked
		reached[0][118] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(129, 119, 129) */
		reached[0][119] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(129, 120, 129) */
		reached[0][120] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(129, 124, 129) */
		reached[0][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[0][126] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[0][127] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1007: // STATE 122 - resume_suspend.pml:192 - [(1)] (129:0:2 - 1)
		IfNotBlocked
		reached[0][122] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(129, 124, 129) */
		reached[0][124] = 1;
		;
		/* merge: tcb[newTask].state = 4(129, 126, 129) */
		reached[0][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[0][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1008: // STATE 126 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:129:2 - 3)
		IfNotBlocked
		reached[0][126] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(129, 127, 129) */
		reached[0][127] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1009: // STATE 128 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][128] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1010: // STATE 132 - resume_suspend.pml:475 - [((EP==1))] (261:0:1 - 1)
		IfNotBlocked
		reached[0][132] = 1;
		if (!((((int)now.EP)==1)))
			continue;
		/* merge: counter = (counter+1)(0, 133, 261) */
		reached[0][133] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->counter);
		((P0 *)_this)->counter = (((int)((P0 *)_this)->counter)+1);
#ifdef VAR_RANGES
		logval("Process1:counter", ((int)((P0 *)_this)->counter));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1011: // STATE 134 - resume_suspend.pml:401 - [interrupted_task = 0] (0:142:6 - 1)
		IfNotBlocked
		reached[0][134] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_interrupted_task);
		((P0 *)_this)->_4_2_2_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_2_2_interrupted_task));
#endif
		;
		/* merge: idx = 0(142, 135, 142) */
		reached[0][135] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_idx);
		((P0 *)_this)->_4_2_2_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_2_2_idx));
#endif
		;
		/* merge: taskId = 0(142, 136, 142) */
		reached[0][136] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_2_2_taskId);
		((P0 *)_this)->_4_2_2_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_2_2_taskId));
#endif
		;
		/* merge: needResched = 0(142, 137, 142) */
		reached[0][137] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_2_2_needResched);
		((P0 *)_this)->_4_2_2_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_2_2_needResched));
#endif
		;
		/* merge: interrupted_task = 0(142, 138, 142) */
		reached[0][138] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_2_2_interrupted_task);
		((P0 *)_this)->_4_2_2_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_2_2_interrupted_task));
#endif
		;
		/* merge: needResched = 0(142, 139, 142) */
		reached[0][139] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_2_2_needResched);
		((P0 *)_this)->_4_2_2_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_2_2_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1012: // STATE 140 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:199:4 - 1)
		IfNotBlocked
		reached[0][140] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(199, 141, 199) */
		reached[0][141] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(199, 143, 199) */
		reached[0][143] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(199, 144, 199) */
		reached[0][144] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_2_2_idx);
		((P0 *)_this)->_4_2_2_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_2_2_idx));
#endif
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[0][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1013: // STATE 145 - resume_suspend.pml:416 - [((idx<sortLink.count))] (195:0:1 - 1)
		IfNotBlocked
		reached[0][145] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 146, 195) */
		reached[0][146] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_2_2_taskId);
		((P0 *)_this)->_4_2_2_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_2_2_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_2_2_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1014: // STATE 147 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (183:0:2 - 1)
		IfNotBlocked
		reached[0][147] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(183, 148, 183) */
		reached[0][148] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_2_2_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(183, 149, 183) */
		reached[0][149] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_2_2_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1015: // STATE 150 - resume_suspend.pml:81 - [removePos = 0] (0:164:5 - 1)
		IfNotBlocked
		reached[0][150] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_9_removePos);
		((P0 *)_this)->_4_2_2_9_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_2_2_9_removePos));
#endif
		;
		/* merge: found = 0(164, 151, 164) */
		reached[0][151] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_9_found);
		((P0 *)_this)->_4_2_2_9_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_2_2_9_found));
#endif
		;
		/* merge: shiftIdx = 0(164, 152, 164) */
		reached[0][152] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_2_2_9_shiftIdx);
		((P0 *)_this)->_4_2_2_9_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_2_2_9_shiftIdx));
#endif
		;
		/* merge: removePos = 0(164, 153, 164) */
		reached[0][153] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_2_2_9_removePos);
		((P0 *)_this)->_4_2_2_9_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_2_2_9_removePos));
#endif
		;
		/* merge: found = 0(164, 154, 164) */
		reached[0][154] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_2_2_9_found);
		((P0 *)_this)->_4_2_2_9_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_2_2_9_found));
#endif
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[0][165] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1016: // STATE 155 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][155] = 1;
		if (!(((((int)((P0 *)_this)->_4_2_2_9_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_2_2_9_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1017: // STATE 156 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (164:0:1 - 1)
		IfNotBlocked
		reached[0][156] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_2_2_9_removePos), 8) ])==((int)((P0 *)_this)->_4_2_2_taskId))))
			continue;
		/* merge: found = 1(0, 157, 164) */
		reached[0][157] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_2_2_9_found);
		((P0 *)_this)->_4_2_2_9_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_2_2_9_found));
#endif
		;
		/* merge: .(goto)(0, 161, 164) */
		reached[0][161] = 1;
		;
		/* merge: .(goto)(0, 165, 164) */
		reached[0][165] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1018: // STATE 159 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][159] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_2_2_9_removePos);
		((P0 *)_this)->_4_2_2_9_removePos = (((int)((P0 *)_this)->_4_2_2_9_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_2_2_9_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1019: // STATE 167 - resume_suspend.pml:100 - [((found==1))] (174:0:2 - 1)
		IfNotBlocked
		reached[0][167] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_9_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_2_2_9_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_2_2_9_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_9_found = 0;
		/* merge: shiftIdx = removePos(0, 168, 174) */
		reached[0][168] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_9_shiftIdx);
		((P0 *)_this)->_4_2_2_9_shiftIdx = ((int)((P0 *)_this)->_4_2_2_9_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_2_2_9_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[0][175] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1020: // STATE 169 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (174:0:2 - 1)
		IfNotBlocked
		reached[0][169] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_9_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](174, 170, 174) */
		reached[0][170] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_2_2_9_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_2_2_9_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_2_2_9_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_2_2_9_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(174, 171, 174) */
		reached[0][171] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_9_shiftIdx);
		((P0 *)_this)->_4_2_2_9_shiftIdx = (((int)((P0 *)_this)->_4_2_2_9_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_2_2_9_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 175, 174) */
		reached[0][175] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1021: // STATE 172 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (191:0:3 - 1)
		IfNotBlocked
		reached[0][172] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_9_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_2_2_9_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_2_2_9_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_9_shiftIdx = 0;
		/* merge: goto :b8(191, 173, 191) */
		reached[0][173] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(191, 177, 191) */
		reached[0][177] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[0][178] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[0][182] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1022: // STATE 177 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:191:2 - 3)
		IfNotBlocked
		reached[0][177] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(191, 178, 191) */
		reached[0][178] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 182, 191) */
		reached[0][182] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1023: // STATE 184 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (199:0:4 - 1)
		IfNotBlocked
		reached[0][184] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(199, 185, 199) */
		reached[0][185] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_2_2_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_2_2_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_2_2_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(199, 186, 199) */
		reached[0][186] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_2_2_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(199, 190, 199) */
		reached[0][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[0][192] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_2_2_needResched);
		((P0 *)_this)->_4_2_2_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_2_2_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_2_2_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[0][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[0][200] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1024: // STATE 188 - resume_suspend.pml:140 - [assert(0)] (0:199:2 - 1)
		IfNotBlocked
		reached[0][188] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(199, 190, 199) */
		reached[0][190] = 1;
		;
		/* merge: needResched = 1(199, 192, 199) */
		reached[0][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_needResched);
		((P0 *)_this)->_4_2_2_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_2_2_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_2_2_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[0][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[0][200] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1025: // STATE 192 - resume_suspend.pml:433 - [needResched = 1] (0:199:2 - 3)
		IfNotBlocked
		reached[0][192] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_needResched);
		((P0 *)_this)->_4_2_2_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_2_2_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_2_2_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_needResched = 0;
		/* merge: .(goto)(0, 196, 199) */
		reached[0][196] = 1;
		;
		/* merge: .(goto)(0, 200, 199) */
		reached[0][200] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1026: // STATE 194 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][194] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_2_2_idx);
		((P0 *)_this)->_4_2_2_idx = (((int)((P0 *)_this)->_4_2_2_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_2_2_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1027: // STATE 197 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (215:0:2 - 1)
		IfNotBlocked
		reached[0][197] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_2_2_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_2_2_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_idx = 0;
		/* merge: goto :b6(215, 198, 215) */
		reached[0][198] = 1;
		;
		/* merge: interrupted_task = EP(215, 202, 215) */
		reached[0][202] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_interrupted_task);
		((P0 *)_this)->_4_2_2_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_2_2_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1028: // STATE 202 - resume_suspend.pml:442 - [interrupted_task = EP] (0:215:1 - 3)
		IfNotBlocked
		reached[0][202] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_2_2_interrupted_task);
		((P0 *)_this)->_4_2_2_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_2_2_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1029: // STATE 203 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (212:0:1 - 1)
		IfNotBlocked
		reached[0][203] = 1;
		if (!((((((int)((P0 *)_this)->_4_2_2_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_2_2_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 204, 212) */
		reached[0][204] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_2_2_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1030: // STATE 205 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (238:0:2 - 1)
		IfNotBlocked
		reached[0][205] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(238, 206, 238) */
		reached[0][206] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_2_2_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_2_2_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_2_2_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(238, 207, 238) */
		reached[0][207] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_2_2_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_2_2_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 211, 238) */
		reached[0][211] = 1;
		;
		/* merge: .(goto)(0, 216, 238) */
		reached[0][216] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1031: // STATE 209 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][209] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1032: // STATE 217 - resume_suspend.pml:208 - [prio = 0] (0:233:6 - 1)
		IfNotBlocked
		reached[0][217] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_12_prio);
		((P0 *)_this)->_4_2_2_12_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_2_2_12_prio));
#endif
		;
		/* merge: top_task = 0(233, 218, 233) */
		reached[0][218] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_12_top_task);
		((P0 *)_this)->_4_2_2_12_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_2_2_12_top_task));
#endif
		;
		/* merge: found = 0(233, 219, 233) */
		reached[0][219] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_2_2_12_found);
		((P0 *)_this)->_4_2_2_12_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_2_2_12_found));
#endif
		;
		/* merge: prio = 0(233, 220, 233) */
		reached[0][220] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_2_2_12_prio);
		((P0 *)_this)->_4_2_2_12_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_2_2_12_prio));
#endif
		;
		/* merge: top_task = 0(233, 221, 233) */
		reached[0][221] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_2_2_12_top_task);
		((P0 *)_this)->_4_2_2_12_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_2_2_12_top_task));
#endif
		;
		/* merge: found = 0(233, 222, 233) */
		reached[0][222] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_2_2_12_found);
		((P0 *)_this)->_4_2_2_12_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_2_2_12_found));
#endif
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[0][234] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1033: // STATE 223 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][223] = 1;
		if (!(((((int)((P0 *)_this)->_4_2_2_12_prio)<4)&& !(((int)((P0 *)_this)->_4_2_2_12_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1034: // STATE 224 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (233:0:2 - 1)
		IfNotBlocked
		reached[0][224] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_2_2_12_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](233, 225, 233) */
		reached[0][225] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_12_top_task);
		((P0 *)_this)->_4_2_2_12_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_2_2_12_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_2_2_12_top_task));
#endif
		;
		/* merge: found = 1(233, 226, 233) */
		reached[0][226] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_12_found);
		((P0 *)_this)->_4_2_2_12_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_2_2_12_found));
#endif
		;
		/* merge: .(goto)(0, 230, 233) */
		reached[0][230] = 1;
		;
		/* merge: .(goto)(0, 234, 233) */
		reached[0][234] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1035: // STATE 228 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][228] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_2_2_12_prio);
		((P0 *)_this)->_4_2_2_12_prio = (((int)((P0 *)_this)->_4_2_2_12_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_2_2_12_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1036: // STATE 231 - resume_suspend.pml:227 - [(((prio>=4)||found))] (256:0:3 - 1)
		IfNotBlocked
		reached[0][231] = 1;
		if (!(((((int)((P0 *)_this)->_4_2_2_12_prio)>=4)||((int)((P0 *)_this)->_4_2_2_12_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_2_2_12_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_2_2_12_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_12_found = 0;
		/* merge: goto :b9(256, 232, 256) */
		reached[0][232] = 1;
		;
		/* merge: newTask = top_task(256, 236, 256) */
		reached[0][236] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_2_2_12_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[0][237] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_2_2_12_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1037: // STATE 236 - resume_suspend.pml:231 - [newTask = top_task] (0:256:2 - 3)
		IfNotBlocked
		reached[0][236] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_2_2_12_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(256, 237, 256) */
		reached[0][237] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_2_2_12_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1038: // STATE 239 - resume_suspend.pml:177 - [deq_idx = 0] (0:246:2 - 1)
		IfNotBlocked
		reached[0][239] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_2_2_13_deq_idx);
		((P0 *)_this)->_4_2_2_13_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_2_2_13_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(246, 240, 246) */
		reached[0][240] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_13_deq_idx);
		((P0 *)_this)->_4_2_2_13_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_2_2_13_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[0][247] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1039: // STATE 241 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (246:0:2 - 1)
		IfNotBlocked
		reached[0][241] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_13_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](246, 242, 246) */
		reached[0][242] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_2_2_13_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_2_2_13_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_2_2_13_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_2_2_13_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(246, 243, 246) */
		reached[0][243] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_2_2_13_deq_idx);
		((P0 *)_this)->_4_2_2_13_deq_idx = (((int)((P0 *)_this)->_4_2_2_13_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_2_2_13_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 247, 246) */
		reached[0][247] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1040: // STATE 244 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][244] = 1;
		if (!((((int)((P0 *)_this)->_4_2_2_13_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_2_2_13_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_2_2_13_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_2_2_13_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1041: // STATE 249 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (260:0:4 - 1)
		IfNotBlocked
		reached[0][249] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(260, 250, 260) */
		reached[0][250] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(260, 251, 260) */
		reached[0][251] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(260, 255, 260) */
		reached[0][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[0][257] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[0][258] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1042: // STATE 253 - resume_suspend.pml:192 - [(1)] (260:0:2 - 1)
		IfNotBlocked
		reached[0][253] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(260, 255, 260) */
		reached[0][255] = 1;
		;
		/* merge: tcb[newTask].state = 4(260, 257, 260) */
		reached[0][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[0][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1043: // STATE 257 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:260:2 - 3)
		IfNotBlocked
		reached[0][257] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(260, 258, 260) */
		reached[0][258] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1044: // STATE 259 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][259] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1045: // STATE 263 - resume_suspend.pml:476 - [((EP==1))] (392:0:1 - 1)
		IfNotBlocked
		reached[0][263] = 1;
		if (!((((int)now.EP)==1)))
			continue;
		/* merge: work = ((work+counter)%100)(0, 264, 392) */
		reached[0][264] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->work);
		((P0 *)_this)->work = ((((int)((P0 *)_this)->work)+((int)((P0 *)_this)->counter))%100);
#ifdef VAR_RANGES
		logval("Process1:work", ((int)((P0 *)_this)->work));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1046: // STATE 265 - resume_suspend.pml:401 - [interrupted_task = 0] (0:273:6 - 1)
		IfNotBlocked
		reached[0][265] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_interrupted_task);
		((P0 *)_this)->_4_3_3_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_3_3_interrupted_task));
#endif
		;
		/* merge: idx = 0(273, 266, 273) */
		reached[0][266] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_idx);
		((P0 *)_this)->_4_3_3_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_3_3_idx));
#endif
		;
		/* merge: taskId = 0(273, 267, 273) */
		reached[0][267] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_3_3_taskId);
		((P0 *)_this)->_4_3_3_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_3_3_taskId));
#endif
		;
		/* merge: needResched = 0(273, 268, 273) */
		reached[0][268] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_3_3_needResched);
		((P0 *)_this)->_4_3_3_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_3_3_needResched));
#endif
		;
		/* merge: interrupted_task = 0(273, 269, 273) */
		reached[0][269] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_3_3_interrupted_task);
		((P0 *)_this)->_4_3_3_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_3_3_interrupted_task));
#endif
		;
		/* merge: needResched = 0(273, 270, 273) */
		reached[0][270] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_3_3_needResched);
		((P0 *)_this)->_4_3_3_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_3_3_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1047: // STATE 271 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:330:4 - 1)
		IfNotBlocked
		reached[0][271] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(330, 272, 330) */
		reached[0][272] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(330, 274, 330) */
		reached[0][274] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(330, 275, 330) */
		reached[0][275] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_3_3_idx);
		((P0 *)_this)->_4_3_3_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_3_3_idx));
#endif
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[0][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1048: // STATE 276 - resume_suspend.pml:416 - [((idx<sortLink.count))] (326:0:1 - 1)
		IfNotBlocked
		reached[0][276] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 277, 326) */
		reached[0][277] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_3_3_taskId);
		((P0 *)_this)->_4_3_3_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_3_3_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_3_3_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1049: // STATE 278 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (314:0:2 - 1)
		IfNotBlocked
		reached[0][278] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(314, 279, 314) */
		reached[0][279] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_3_3_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(314, 280, 314) */
		reached[0][280] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_3_3_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1050: // STATE 281 - resume_suspend.pml:81 - [removePos = 0] (0:295:5 - 1)
		IfNotBlocked
		reached[0][281] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_16_removePos);
		((P0 *)_this)->_4_3_3_16_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_3_3_16_removePos));
#endif
		;
		/* merge: found = 0(295, 282, 295) */
		reached[0][282] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_16_found);
		((P0 *)_this)->_4_3_3_16_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_3_3_16_found));
#endif
		;
		/* merge: shiftIdx = 0(295, 283, 295) */
		reached[0][283] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_3_3_16_shiftIdx);
		((P0 *)_this)->_4_3_3_16_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_3_3_16_shiftIdx));
#endif
		;
		/* merge: removePos = 0(295, 284, 295) */
		reached[0][284] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_3_3_16_removePos);
		((P0 *)_this)->_4_3_3_16_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_3_3_16_removePos));
#endif
		;
		/* merge: found = 0(295, 285, 295) */
		reached[0][285] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_3_3_16_found);
		((P0 *)_this)->_4_3_3_16_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_3_3_16_found));
#endif
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[0][296] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1051: // STATE 286 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][286] = 1;
		if (!(((((int)((P0 *)_this)->_4_3_3_16_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_3_3_16_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1052: // STATE 287 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (295:0:1 - 1)
		IfNotBlocked
		reached[0][287] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_3_3_16_removePos), 8) ])==((int)((P0 *)_this)->_4_3_3_taskId))))
			continue;
		/* merge: found = 1(0, 288, 295) */
		reached[0][288] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_3_3_16_found);
		((P0 *)_this)->_4_3_3_16_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_3_3_16_found));
#endif
		;
		/* merge: .(goto)(0, 292, 295) */
		reached[0][292] = 1;
		;
		/* merge: .(goto)(0, 296, 295) */
		reached[0][296] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1053: // STATE 290 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][290] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_3_3_16_removePos);
		((P0 *)_this)->_4_3_3_16_removePos = (((int)((P0 *)_this)->_4_3_3_16_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_3_3_16_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1054: // STATE 298 - resume_suspend.pml:100 - [((found==1))] (305:0:2 - 1)
		IfNotBlocked
		reached[0][298] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_16_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_3_3_16_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_3_3_16_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_16_found = 0;
		/* merge: shiftIdx = removePos(0, 299, 305) */
		reached[0][299] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_16_shiftIdx);
		((P0 *)_this)->_4_3_3_16_shiftIdx = ((int)((P0 *)_this)->_4_3_3_16_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_3_3_16_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[0][306] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1055: // STATE 300 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (305:0:2 - 1)
		IfNotBlocked
		reached[0][300] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_16_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](305, 301, 305) */
		reached[0][301] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_3_3_16_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_3_3_16_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_3_3_16_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_3_3_16_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(305, 302, 305) */
		reached[0][302] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_16_shiftIdx);
		((P0 *)_this)->_4_3_3_16_shiftIdx = (((int)((P0 *)_this)->_4_3_3_16_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_3_3_16_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 306, 305) */
		reached[0][306] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1056: // STATE 303 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (322:0:3 - 1)
		IfNotBlocked
		reached[0][303] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_16_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_3_3_16_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_3_3_16_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_16_shiftIdx = 0;
		/* merge: goto :b13(322, 304, 322) */
		reached[0][304] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(322, 308, 322) */
		reached[0][308] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[0][309] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[0][313] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1057: // STATE 308 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:322:2 - 3)
		IfNotBlocked
		reached[0][308] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(322, 309, 322) */
		reached[0][309] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 313, 322) */
		reached[0][313] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1058: // STATE 315 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (330:0:4 - 1)
		IfNotBlocked
		reached[0][315] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(330, 316, 330) */
		reached[0][316] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_3_3_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_3_3_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_3_3_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(330, 317, 330) */
		reached[0][317] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_3_3_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(330, 321, 330) */
		reached[0][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[0][323] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_3_3_needResched);
		((P0 *)_this)->_4_3_3_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_3_3_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_3_3_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[0][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[0][331] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1059: // STATE 319 - resume_suspend.pml:140 - [assert(0)] (0:330:2 - 1)
		IfNotBlocked
		reached[0][319] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(330, 321, 330) */
		reached[0][321] = 1;
		;
		/* merge: needResched = 1(330, 323, 330) */
		reached[0][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_needResched);
		((P0 *)_this)->_4_3_3_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_3_3_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_3_3_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[0][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[0][331] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1060: // STATE 323 - resume_suspend.pml:433 - [needResched = 1] (0:330:2 - 3)
		IfNotBlocked
		reached[0][323] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_needResched);
		((P0 *)_this)->_4_3_3_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_3_3_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_3_3_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_needResched = 0;
		/* merge: .(goto)(0, 327, 330) */
		reached[0][327] = 1;
		;
		/* merge: .(goto)(0, 331, 330) */
		reached[0][331] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1061: // STATE 325 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][325] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_3_3_idx);
		((P0 *)_this)->_4_3_3_idx = (((int)((P0 *)_this)->_4_3_3_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_3_3_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1062: // STATE 328 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (346:0:2 - 1)
		IfNotBlocked
		reached[0][328] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_3_3_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_3_3_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_idx = 0;
		/* merge: goto :b11(346, 329, 346) */
		reached[0][329] = 1;
		;
		/* merge: interrupted_task = EP(346, 333, 346) */
		reached[0][333] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_interrupted_task);
		((P0 *)_this)->_4_3_3_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_3_3_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1063: // STATE 333 - resume_suspend.pml:442 - [interrupted_task = EP] (0:346:1 - 3)
		IfNotBlocked
		reached[0][333] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_3_3_interrupted_task);
		((P0 *)_this)->_4_3_3_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_3_3_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1064: // STATE 334 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (343:0:1 - 1)
		IfNotBlocked
		reached[0][334] = 1;
		if (!((((((int)((P0 *)_this)->_4_3_3_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_3_3_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 335, 343) */
		reached[0][335] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_3_3_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1065: // STATE 336 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (369:0:2 - 1)
		IfNotBlocked
		reached[0][336] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(369, 337, 369) */
		reached[0][337] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_3_3_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_3_3_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_3_3_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(369, 338, 369) */
		reached[0][338] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_3_3_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_3_3_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 342, 369) */
		reached[0][342] = 1;
		;
		/* merge: .(goto)(0, 347, 369) */
		reached[0][347] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1066: // STATE 340 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][340] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1067: // STATE 348 - resume_suspend.pml:208 - [prio = 0] (0:364:6 - 1)
		IfNotBlocked
		reached[0][348] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_19_prio);
		((P0 *)_this)->_4_3_3_19_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_3_3_19_prio));
#endif
		;
		/* merge: top_task = 0(364, 349, 364) */
		reached[0][349] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_19_top_task);
		((P0 *)_this)->_4_3_3_19_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_3_3_19_top_task));
#endif
		;
		/* merge: found = 0(364, 350, 364) */
		reached[0][350] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_3_3_19_found);
		((P0 *)_this)->_4_3_3_19_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_3_3_19_found));
#endif
		;
		/* merge: prio = 0(364, 351, 364) */
		reached[0][351] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_3_3_19_prio);
		((P0 *)_this)->_4_3_3_19_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_3_3_19_prio));
#endif
		;
		/* merge: top_task = 0(364, 352, 364) */
		reached[0][352] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_3_3_19_top_task);
		((P0 *)_this)->_4_3_3_19_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_3_3_19_top_task));
#endif
		;
		/* merge: found = 0(364, 353, 364) */
		reached[0][353] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_3_3_19_found);
		((P0 *)_this)->_4_3_3_19_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_3_3_19_found));
#endif
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[0][365] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1068: // STATE 354 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][354] = 1;
		if (!(((((int)((P0 *)_this)->_4_3_3_19_prio)<4)&& !(((int)((P0 *)_this)->_4_3_3_19_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1069: // STATE 355 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (364:0:2 - 1)
		IfNotBlocked
		reached[0][355] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_3_3_19_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](364, 356, 364) */
		reached[0][356] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_19_top_task);
		((P0 *)_this)->_4_3_3_19_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_3_3_19_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_3_3_19_top_task));
#endif
		;
		/* merge: found = 1(364, 357, 364) */
		reached[0][357] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_19_found);
		((P0 *)_this)->_4_3_3_19_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_3_3_19_found));
#endif
		;
		/* merge: .(goto)(0, 361, 364) */
		reached[0][361] = 1;
		;
		/* merge: .(goto)(0, 365, 364) */
		reached[0][365] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1070: // STATE 359 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][359] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_3_3_19_prio);
		((P0 *)_this)->_4_3_3_19_prio = (((int)((P0 *)_this)->_4_3_3_19_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_3_3_19_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1071: // STATE 362 - resume_suspend.pml:227 - [(((prio>=4)||found))] (387:0:3 - 1)
		IfNotBlocked
		reached[0][362] = 1;
		if (!(((((int)((P0 *)_this)->_4_3_3_19_prio)>=4)||((int)((P0 *)_this)->_4_3_3_19_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_3_3_19_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_3_3_19_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_19_found = 0;
		/* merge: goto :b14(387, 363, 387) */
		reached[0][363] = 1;
		;
		/* merge: newTask = top_task(387, 367, 387) */
		reached[0][367] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_3_3_19_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[0][368] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_3_3_19_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1072: // STATE 367 - resume_suspend.pml:231 - [newTask = top_task] (0:387:2 - 3)
		IfNotBlocked
		reached[0][367] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_3_3_19_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(387, 368, 387) */
		reached[0][368] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_3_3_19_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1073: // STATE 370 - resume_suspend.pml:177 - [deq_idx = 0] (0:377:2 - 1)
		IfNotBlocked
		reached[0][370] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_3_3_20_deq_idx);
		((P0 *)_this)->_4_3_3_20_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_3_3_20_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(377, 371, 377) */
		reached[0][371] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_20_deq_idx);
		((P0 *)_this)->_4_3_3_20_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_3_3_20_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[0][378] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1074: // STATE 372 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (377:0:2 - 1)
		IfNotBlocked
		reached[0][372] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_20_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](377, 373, 377) */
		reached[0][373] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_3_3_20_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_3_3_20_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_3_3_20_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_3_3_20_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(377, 374, 377) */
		reached[0][374] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_3_3_20_deq_idx);
		((P0 *)_this)->_4_3_3_20_deq_idx = (((int)((P0 *)_this)->_4_3_3_20_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_3_3_20_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 378, 377) */
		reached[0][378] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1075: // STATE 375 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][375] = 1;
		if (!((((int)((P0 *)_this)->_4_3_3_20_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_3_3_20_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_3_3_20_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_3_3_20_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1076: // STATE 380 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (391:0:4 - 1)
		IfNotBlocked
		reached[0][380] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(391, 381, 391) */
		reached[0][381] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(391, 382, 391) */
		reached[0][382] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(391, 386, 391) */
		reached[0][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[0][388] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[0][389] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1077: // STATE 384 - resume_suspend.pml:192 - [(1)] (391:0:2 - 1)
		IfNotBlocked
		reached[0][384] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(391, 386, 391) */
		reached[0][386] = 1;
		;
		/* merge: tcb[newTask].state = 4(391, 388, 391) */
		reached[0][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[0][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1078: // STATE 388 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:391:2 - 3)
		IfNotBlocked
		reached[0][388] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(391, 389, 391) */
		reached[0][389] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1079: // STATE 390 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][390] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1080: // STATE 394 - resume_suspend.pml:477 - [((EP==1))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][394] = 1;
		if (!((((int)now.EP)==1)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1081: // STATE 395 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[0][395] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_currentTask);
		((P0 *)_this)->_4_4_4_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process1:currentTask", ((int)((P0 *)_this)->_4_4_4_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1082: // STATE 396 - resume_suspend.pml:377 - [((((2>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][396] = 1;
		if (!((((2>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1083: // STATE 397 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:411:6 - 1)
		IfNotBlocked
		reached[0][397] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(411, 398, 411) */
		reached[0][398] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(411, 400, 411) */
		reached[0][400] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_4_currentTask);
		((P0 *)_this)->_4_4_4_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:currentTask", ((int)((P0 *)_this)->_4_4_4_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(411, 401, 411) */
		reached[0][401] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_currentTask), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_4_4_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process1:currentTask].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+2)(411, 402, 411) */
		reached[0][402] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P0 *)_this)->_4_4_4_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+2);
#ifdef VAR_RANGES
		logval("tcb[Process1:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 2(411, 403, 411) */
		reached[0][403] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_4_4_currentTask, 5) ].delayTicks = 2;
#ifdef VAR_RANGES
		logval("tcb[Process1:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1084: // STATE 404 - resume_suspend.pml:70 - [((sortLink.count<8))] (539:0:2 - 1)
		IfNotBlocked
		reached[0][404] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(539, 405, 539) */
		reached[0][405] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P0 *)_this)->_4_4_4_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(539, 406, 539) */
		reached[0][406] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 410, 539) */
		reached[0][410] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1085: // STATE 408 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][408] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1086: // STATE 412 - resume_suspend.pml:401 - [interrupted_task = 0] (0:420:6 - 1)
		IfNotBlocked
		reached[0][412] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_interrupted_task);
		((P0 *)_this)->_4_4_4_24_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_4_24_interrupted_task));
#endif
		;
		/* merge: idx = 0(420, 413, 420) */
		reached[0][413] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_idx);
		((P0 *)_this)->_4_4_4_24_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_4_4_24_idx));
#endif
		;
		/* merge: taskId = 0(420, 414, 420) */
		reached[0][414] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_4_24_taskId);
		((P0 *)_this)->_4_4_4_24_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_4_4_24_taskId));
#endif
		;
		/* merge: needResched = 0(420, 415, 420) */
		reached[0][415] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_4_24_needResched);
		((P0 *)_this)->_4_4_4_24_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_4_24_needResched));
#endif
		;
		/* merge: interrupted_task = 0(420, 416, 420) */
		reached[0][416] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_4_4_24_interrupted_task);
		((P0 *)_this)->_4_4_4_24_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_4_24_interrupted_task));
#endif
		;
		/* merge: needResched = 0(420, 417, 420) */
		reached[0][417] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_4_4_24_needResched);
		((P0 *)_this)->_4_4_4_24_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_4_24_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1087: // STATE 418 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:477:4 - 1)
		IfNotBlocked
		reached[0][418] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(477, 419, 477) */
		reached[0][419] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(477, 421, 477) */
		reached[0][421] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(477, 422, 477) */
		reached[0][422] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_4_24_idx);
		((P0 *)_this)->_4_4_4_24_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_4_4_24_idx));
#endif
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[0][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1088: // STATE 423 - resume_suspend.pml:416 - [((idx<sortLink.count))] (473:0:1 - 1)
		IfNotBlocked
		reached[0][423] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 424, 473) */
		reached[0][424] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_24_taskId);
		((P0 *)_this)->_4_4_4_24_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_4_24_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_4_4_24_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1089: // STATE 425 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (461:0:2 - 1)
		IfNotBlocked
		reached[0][425] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(461, 426, 461) */
		reached[0][426] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_4_4_24_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(461, 427, 461) */
		reached[0][427] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_4_4_24_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1090: // STATE 428 - resume_suspend.pml:81 - [removePos = 0] (0:442:5 - 1)
		IfNotBlocked
		reached[0][428] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_2_removePos);
		((P0 *)_this)->_4_4_4_24_2_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_4_4_24_2_removePos));
#endif
		;
		/* merge: found = 0(442, 429, 442) */
		reached[0][429] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_2_found);
		((P0 *)_this)->_4_4_4_24_2_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_4_24_2_found));
#endif
		;
		/* merge: shiftIdx = 0(442, 430, 442) */
		reached[0][430] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx);
		((P0 *)_this)->_4_4_4_24_2_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx));
#endif
		;
		/* merge: removePos = 0(442, 431, 442) */
		reached[0][431] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_4_24_2_removePos);
		((P0 *)_this)->_4_4_4_24_2_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_4_4_24_2_removePos));
#endif
		;
		/* merge: found = 0(442, 432, 442) */
		reached[0][432] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_4_4_24_2_found);
		((P0 *)_this)->_4_4_4_24_2_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_4_24_2_found));
#endif
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[0][443] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1091: // STATE 433 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][433] = 1;
		if (!(((((int)((P0 *)_this)->_4_4_4_24_2_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_4_4_24_2_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1092: // STATE 434 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (442:0:1 - 1)
		IfNotBlocked
		reached[0][434] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_4_24_2_removePos), 8) ])==((int)((P0 *)_this)->_4_4_4_24_taskId))))
			continue;
		/* merge: found = 1(0, 435, 442) */
		reached[0][435] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_24_2_found);
		((P0 *)_this)->_4_4_4_24_2_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_4_24_2_found));
#endif
		;
		/* merge: .(goto)(0, 439, 442) */
		reached[0][439] = 1;
		;
		/* merge: .(goto)(0, 443, 442) */
		reached[0][443] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1093: // STATE 437 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][437] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_24_2_removePos);
		((P0 *)_this)->_4_4_4_24_2_removePos = (((int)((P0 *)_this)->_4_4_4_24_2_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_4_4_24_2_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1094: // STATE 445 - resume_suspend.pml:100 - [((found==1))] (452:0:2 - 1)
		IfNotBlocked
		reached[0][445] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_2_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_4_24_2_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_4_24_2_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_2_found = 0;
		/* merge: shiftIdx = removePos(0, 446, 452) */
		reached[0][446] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx);
		((P0 *)_this)->_4_4_4_24_2_shiftIdx = ((int)((P0 *)_this)->_4_4_4_24_2_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[0][453] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1095: // STATE 447 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (452:0:2 - 1)
		IfNotBlocked
		reached[0][447] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](452, 448, 452) */
		reached[0][448] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_4_4_24_2_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(452, 449, 452) */
		reached[0][449] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx);
		((P0 *)_this)->_4_4_4_24_2_shiftIdx = (((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 453, 452) */
		reached[0][453] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1096: // STATE 450 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (469:0:3 - 1)
		IfNotBlocked
		reached[0][450] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_2_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_4_24_2_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_4_24_2_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_2_shiftIdx = 0;
		/* merge: goto :b18(469, 451, 469) */
		reached[0][451] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(469, 455, 469) */
		reached[0][455] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[0][456] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[0][460] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1097: // STATE 455 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:469:2 - 3)
		IfNotBlocked
		reached[0][455] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(469, 456, 469) */
		reached[0][456] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 460, 469) */
		reached[0][460] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1098: // STATE 462 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (477:0:4 - 1)
		IfNotBlocked
		reached[0][462] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(477, 463, 477) */
		reached[0][463] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_4_24_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_4_24_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_4_4_24_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(477, 464, 477) */
		reached[0][464] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_4_24_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(477, 468, 477) */
		reached[0][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[0][470] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_4_24_needResched);
		((P0 *)_this)->_4_4_4_24_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_4_24_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_4_4_24_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[0][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[0][478] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1099: // STATE 466 - resume_suspend.pml:140 - [assert(0)] (0:477:2 - 1)
		IfNotBlocked
		reached[0][466] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(477, 468, 477) */
		reached[0][468] = 1;
		;
		/* merge: needResched = 1(477, 470, 477) */
		reached[0][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_needResched);
		((P0 *)_this)->_4_4_4_24_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_4_24_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_4_4_24_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[0][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[0][478] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1100: // STATE 470 - resume_suspend.pml:433 - [needResched = 1] (0:477:2 - 3)
		IfNotBlocked
		reached[0][470] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_needResched);
		((P0 *)_this)->_4_4_4_24_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_4_24_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_4_4_24_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_needResched = 0;
		/* merge: .(goto)(0, 474, 477) */
		reached[0][474] = 1;
		;
		/* merge: .(goto)(0, 478, 477) */
		reached[0][478] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1101: // STATE 472 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][472] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_24_idx);
		((P0 *)_this)->_4_4_4_24_idx = (((int)((P0 *)_this)->_4_4_4_24_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_4_4_24_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1102: // STATE 475 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (493:0:2 - 1)
		IfNotBlocked
		reached[0][475] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_4_24_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_4_24_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_idx = 0;
		/* merge: goto :b16(493, 476, 493) */
		reached[0][476] = 1;
		;
		/* merge: interrupted_task = EP(493, 480, 493) */
		reached[0][480] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_interrupted_task);
		((P0 *)_this)->_4_4_4_24_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_4_24_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1103: // STATE 480 - resume_suspend.pml:442 - [interrupted_task = EP] (0:493:1 - 3)
		IfNotBlocked
		reached[0][480] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_24_interrupted_task);
		((P0 *)_this)->_4_4_4_24_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_4_24_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1104: // STATE 481 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (490:0:1 - 1)
		IfNotBlocked
		reached[0][481] = 1;
		if (!((((((int)((P0 *)_this)->_4_4_4_24_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_4_4_24_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 482, 490) */
		reached[0][482] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_4_4_24_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1105: // STATE 483 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (516:0:2 - 1)
		IfNotBlocked
		reached[0][483] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(516, 484, 516) */
		reached[0][484] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_4_24_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_4_24_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_4_4_24_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(516, 485, 516) */
		reached[0][485] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_4_24_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_4_24_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 489, 516) */
		reached[0][489] = 1;
		;
		/* merge: .(goto)(0, 494, 516) */
		reached[0][494] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1106: // STATE 487 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][487] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1107: // STATE 495 - resume_suspend.pml:208 - [prio = 0] (0:511:6 - 1)
		IfNotBlocked
		reached[0][495] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_5_prio);
		((P0 *)_this)->_4_4_4_24_5_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_4_4_24_5_prio));
#endif
		;
		/* merge: top_task = 0(511, 496, 511) */
		reached[0][496] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_5_top_task);
		((P0 *)_this)->_4_4_4_24_5_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_4_4_24_5_top_task));
#endif
		;
		/* merge: found = 0(511, 497, 511) */
		reached[0][497] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_4_24_5_found);
		((P0 *)_this)->_4_4_4_24_5_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_4_24_5_found));
#endif
		;
		/* merge: prio = 0(511, 498, 511) */
		reached[0][498] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_4_24_5_prio);
		((P0 *)_this)->_4_4_4_24_5_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_4_4_24_5_prio));
#endif
		;
		/* merge: top_task = 0(511, 499, 511) */
		reached[0][499] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_4_4_24_5_top_task);
		((P0 *)_this)->_4_4_4_24_5_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_4_4_24_5_top_task));
#endif
		;
		/* merge: found = 0(511, 500, 511) */
		reached[0][500] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_4_4_24_5_found);
		((P0 *)_this)->_4_4_4_24_5_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_4_24_5_found));
#endif
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[0][512] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1108: // STATE 501 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][501] = 1;
		if (!(((((int)((P0 *)_this)->_4_4_4_24_5_prio)<4)&& !(((int)((P0 *)_this)->_4_4_4_24_5_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1109: // STATE 502 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (511:0:2 - 1)
		IfNotBlocked
		reached[0][502] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_4_4_24_5_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](511, 503, 511) */
		reached[0][503] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_5_top_task);
		((P0 *)_this)->_4_4_4_24_5_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_4_4_24_5_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_4_4_24_5_top_task));
#endif
		;
		/* merge: found = 1(511, 504, 511) */
		reached[0][504] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_5_found);
		((P0 *)_this)->_4_4_4_24_5_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_4_24_5_found));
#endif
		;
		/* merge: .(goto)(0, 508, 511) */
		reached[0][508] = 1;
		;
		/* merge: .(goto)(0, 512, 511) */
		reached[0][512] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1110: // STATE 506 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][506] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_4_24_5_prio);
		((P0 *)_this)->_4_4_4_24_5_prio = (((int)((P0 *)_this)->_4_4_4_24_5_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_4_4_24_5_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1111: // STATE 509 - resume_suspend.pml:227 - [(((prio>=4)||found))] (534:0:3 - 1)
		IfNotBlocked
		reached[0][509] = 1;
		if (!(((((int)((P0 *)_this)->_4_4_4_24_5_prio)>=4)||((int)((P0 *)_this)->_4_4_4_24_5_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_4_24_5_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_4_24_5_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_5_found = 0;
		/* merge: goto :b19(534, 510, 534) */
		reached[0][510] = 1;
		;
		/* merge: newTask = top_task(534, 514, 534) */
		reached[0][514] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_4_4_24_5_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[0][515] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_4_4_24_5_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1112: // STATE 514 - resume_suspend.pml:231 - [newTask = top_task] (0:534:2 - 3)
		IfNotBlocked
		reached[0][514] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_4_4_24_5_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(534, 515, 534) */
		reached[0][515] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_4_4_24_5_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1113: // STATE 517 - resume_suspend.pml:177 - [deq_idx = 0] (0:524:2 - 1)
		IfNotBlocked
		reached[0][517] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_4_24_6_deq_idx);
		((P0 *)_this)->_4_4_4_24_6_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_4_4_24_6_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(524, 518, 524) */
		reached[0][518] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_6_deq_idx);
		((P0 *)_this)->_4_4_4_24_6_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_4_4_24_6_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[0][525] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1114: // STATE 519 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (524:0:2 - 1)
		IfNotBlocked
		reached[0][519] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_6_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](524, 520, 524) */
		reached[0][520] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_4_4_24_6_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_4_4_24_6_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_4_4_24_6_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_4_4_24_6_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(524, 521, 524) */
		reached[0][521] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_4_24_6_deq_idx);
		((P0 *)_this)->_4_4_4_24_6_deq_idx = (((int)((P0 *)_this)->_4_4_4_24_6_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_4_4_24_6_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 525, 524) */
		reached[0][525] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1115: // STATE 522 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][522] = 1;
		if (!((((int)((P0 *)_this)->_4_4_4_24_6_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_4_24_6_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_4_4_24_6_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_4_24_6_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1116: // STATE 527 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (538:0:4 - 1)
		IfNotBlocked
		reached[0][527] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(538, 528, 538) */
		reached[0][528] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(538, 529, 538) */
		reached[0][529] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(538, 533, 538) */
		reached[0][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[0][535] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[0][536] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1117: // STATE 531 - resume_suspend.pml:192 - [(1)] (538:0:2 - 1)
		IfNotBlocked
		reached[0][531] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(538, 533, 538) */
		reached[0][533] = 1;
		;
		/* merge: tcb[newTask].state = 4(538, 535, 538) */
		reached[0][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[0][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1118: // STATE 535 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:538:2 - 3)
		IfNotBlocked
		reached[0][535] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(538, 536, 538) */
		reached[0][536] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1119: // STATE 537 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][537] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1120: // STATE 540 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][540] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1121: // STATE 547 - resume_suspend.pml:401 - [interrupted_task = 0] (0:555:6 - 1)
		IfNotBlocked
		reached[0][547] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_interrupted_task);
		((P0 *)_this)->_4_4_5_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_5_interrupted_task));
#endif
		;
		/* merge: idx = 0(555, 548, 555) */
		reached[0][548] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_idx);
		((P0 *)_this)->_4_4_5_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_4_5_idx));
#endif
		;
		/* merge: taskId = 0(555, 549, 555) */
		reached[0][549] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_5_taskId);
		((P0 *)_this)->_4_4_5_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_4_5_taskId));
#endif
		;
		/* merge: needResched = 0(555, 550, 555) */
		reached[0][550] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_5_needResched);
		((P0 *)_this)->_4_4_5_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_5_needResched));
#endif
		;
		/* merge: interrupted_task = 0(555, 551, 555) */
		reached[0][551] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_4_5_interrupted_task);
		((P0 *)_this)->_4_4_5_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_5_interrupted_task));
#endif
		;
		/* merge: needResched = 0(555, 552, 555) */
		reached[0][552] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_4_5_needResched);
		((P0 *)_this)->_4_4_5_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_5_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1122: // STATE 553 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:612:4 - 1)
		IfNotBlocked
		reached[0][553] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(612, 554, 612) */
		reached[0][554] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(612, 556, 612) */
		reached[0][556] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(612, 557, 612) */
		reached[0][557] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_5_idx);
		((P0 *)_this)->_4_4_5_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_4_5_idx));
#endif
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[0][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1123: // STATE 558 - resume_suspend.pml:416 - [((idx<sortLink.count))] (608:0:1 - 1)
		IfNotBlocked
		reached[0][558] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 559, 608) */
		reached[0][559] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_5_taskId);
		((P0 *)_this)->_4_4_5_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_5_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_4_5_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1124: // STATE 560 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (596:0:2 - 1)
		IfNotBlocked
		reached[0][560] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(596, 561, 596) */
		reached[0][561] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_4_5_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(596, 562, 596) */
		reached[0][562] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_4_5_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1125: // STATE 563 - resume_suspend.pml:81 - [removePos = 0] (0:577:5 - 1)
		IfNotBlocked
		reached[0][563] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_27_removePos);
		((P0 *)_this)->_4_4_5_27_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_4_5_27_removePos));
#endif
		;
		/* merge: found = 0(577, 564, 577) */
		reached[0][564] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_27_found);
		((P0 *)_this)->_4_4_5_27_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_5_27_found));
#endif
		;
		/* merge: shiftIdx = 0(577, 565, 577) */
		reached[0][565] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_5_27_shiftIdx);
		((P0 *)_this)->_4_4_5_27_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_4_5_27_shiftIdx));
#endif
		;
		/* merge: removePos = 0(577, 566, 577) */
		reached[0][566] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_5_27_removePos);
		((P0 *)_this)->_4_4_5_27_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_4_5_27_removePos));
#endif
		;
		/* merge: found = 0(577, 567, 577) */
		reached[0][567] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_4_5_27_found);
		((P0 *)_this)->_4_4_5_27_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_5_27_found));
#endif
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[0][578] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1126: // STATE 568 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][568] = 1;
		if (!(((((int)((P0 *)_this)->_4_4_5_27_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_4_5_27_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1127: // STATE 569 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (577:0:1 - 1)
		IfNotBlocked
		reached[0][569] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_5_27_removePos), 8) ])==((int)((P0 *)_this)->_4_4_5_taskId))))
			continue;
		/* merge: found = 1(0, 570, 577) */
		reached[0][570] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_5_27_found);
		((P0 *)_this)->_4_4_5_27_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_5_27_found));
#endif
		;
		/* merge: .(goto)(0, 574, 577) */
		reached[0][574] = 1;
		;
		/* merge: .(goto)(0, 578, 577) */
		reached[0][578] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1128: // STATE 572 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][572] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_5_27_removePos);
		((P0 *)_this)->_4_4_5_27_removePos = (((int)((P0 *)_this)->_4_4_5_27_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_4_5_27_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1129: // STATE 580 - resume_suspend.pml:100 - [((found==1))] (587:0:2 - 1)
		IfNotBlocked
		reached[0][580] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_27_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_5_27_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_5_27_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_27_found = 0;
		/* merge: shiftIdx = removePos(0, 581, 587) */
		reached[0][581] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_27_shiftIdx);
		((P0 *)_this)->_4_4_5_27_shiftIdx = ((int)((P0 *)_this)->_4_4_5_27_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_4_5_27_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[0][588] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1130: // STATE 582 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (587:0:2 - 1)
		IfNotBlocked
		reached[0][582] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_27_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](587, 583, 587) */
		reached[0][583] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_5_27_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_4_5_27_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_4_5_27_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_4_5_27_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(587, 584, 587) */
		reached[0][584] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_27_shiftIdx);
		((P0 *)_this)->_4_4_5_27_shiftIdx = (((int)((P0 *)_this)->_4_4_5_27_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_4_5_27_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 588, 587) */
		reached[0][588] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1131: // STATE 585 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (604:0:3 - 1)
		IfNotBlocked
		reached[0][585] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_27_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_5_27_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_5_27_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_27_shiftIdx = 0;
		/* merge: goto :b23(604, 586, 604) */
		reached[0][586] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(604, 590, 604) */
		reached[0][590] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[0][591] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[0][595] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1132: // STATE 590 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:604:2 - 3)
		IfNotBlocked
		reached[0][590] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(604, 591, 604) */
		reached[0][591] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 595, 604) */
		reached[0][595] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1133: // STATE 597 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (612:0:4 - 1)
		IfNotBlocked
		reached[0][597] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(612, 598, 612) */
		reached[0][598] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_5_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_5_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_4_5_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(612, 599, 612) */
		reached[0][599] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_5_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(612, 603, 612) */
		reached[0][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[0][605] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_5_needResched);
		((P0 *)_this)->_4_4_5_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_5_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_4_5_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[0][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[0][613] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1134: // STATE 601 - resume_suspend.pml:140 - [assert(0)] (0:612:2 - 1)
		IfNotBlocked
		reached[0][601] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(612, 603, 612) */
		reached[0][603] = 1;
		;
		/* merge: needResched = 1(612, 605, 612) */
		reached[0][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_needResched);
		((P0 *)_this)->_4_4_5_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_5_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_4_5_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[0][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[0][613] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1135: // STATE 605 - resume_suspend.pml:433 - [needResched = 1] (0:612:2 - 3)
		IfNotBlocked
		reached[0][605] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_needResched);
		((P0 *)_this)->_4_4_5_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_4_5_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_4_5_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_needResched = 0;
		/* merge: .(goto)(0, 609, 612) */
		reached[0][609] = 1;
		;
		/* merge: .(goto)(0, 613, 612) */
		reached[0][613] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1136: // STATE 607 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][607] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_5_idx);
		((P0 *)_this)->_4_4_5_idx = (((int)((P0 *)_this)->_4_4_5_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_4_5_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1137: // STATE 610 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (628:0:2 - 1)
		IfNotBlocked
		reached[0][610] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_5_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_5_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_idx = 0;
		/* merge: goto :b21(628, 611, 628) */
		reached[0][611] = 1;
		;
		/* merge: interrupted_task = EP(628, 615, 628) */
		reached[0][615] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_interrupted_task);
		((P0 *)_this)->_4_4_5_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_5_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1138: // STATE 615 - resume_suspend.pml:442 - [interrupted_task = EP] (0:628:1 - 3)
		IfNotBlocked
		reached[0][615] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_5_interrupted_task);
		((P0 *)_this)->_4_4_5_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_4_5_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1139: // STATE 616 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (625:0:1 - 1)
		IfNotBlocked
		reached[0][616] = 1;
		if (!((((((int)((P0 *)_this)->_4_4_5_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_4_5_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 617, 625) */
		reached[0][617] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_4_5_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1140: // STATE 618 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (651:0:2 - 1)
		IfNotBlocked
		reached[0][618] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(651, 619, 651) */
		reached[0][619] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_5_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_5_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_4_5_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(651, 620, 651) */
		reached[0][620] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_4_5_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_4_5_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 624, 651) */
		reached[0][624] = 1;
		;
		/* merge: .(goto)(0, 629, 651) */
		reached[0][629] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1141: // STATE 622 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][622] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1142: // STATE 630 - resume_suspend.pml:208 - [prio = 0] (0:646:6 - 1)
		IfNotBlocked
		reached[0][630] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_30_prio);
		((P0 *)_this)->_4_4_5_30_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_4_5_30_prio));
#endif
		;
		/* merge: top_task = 0(646, 631, 646) */
		reached[0][631] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_30_top_task);
		((P0 *)_this)->_4_4_5_30_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_4_5_30_top_task));
#endif
		;
		/* merge: found = 0(646, 632, 646) */
		reached[0][632] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_4_5_30_found);
		((P0 *)_this)->_4_4_5_30_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_5_30_found));
#endif
		;
		/* merge: prio = 0(646, 633, 646) */
		reached[0][633] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_4_5_30_prio);
		((P0 *)_this)->_4_4_5_30_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_4_5_30_prio));
#endif
		;
		/* merge: top_task = 0(646, 634, 646) */
		reached[0][634] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_4_5_30_top_task);
		((P0 *)_this)->_4_4_5_30_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_4_5_30_top_task));
#endif
		;
		/* merge: found = 0(646, 635, 646) */
		reached[0][635] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_4_5_30_found);
		((P0 *)_this)->_4_4_5_30_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_5_30_found));
#endif
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[0][647] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1143: // STATE 636 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][636] = 1;
		if (!(((((int)((P0 *)_this)->_4_4_5_30_prio)<4)&& !(((int)((P0 *)_this)->_4_4_5_30_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1144: // STATE 637 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (646:0:2 - 1)
		IfNotBlocked
		reached[0][637] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_4_5_30_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](646, 638, 646) */
		reached[0][638] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_30_top_task);
		((P0 *)_this)->_4_4_5_30_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_4_5_30_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_4_5_30_top_task));
#endif
		;
		/* merge: found = 1(646, 639, 646) */
		reached[0][639] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_30_found);
		((P0 *)_this)->_4_4_5_30_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_4_5_30_found));
#endif
		;
		/* merge: .(goto)(0, 643, 646) */
		reached[0][643] = 1;
		;
		/* merge: .(goto)(0, 647, 646) */
		reached[0][647] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1145: // STATE 641 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][641] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_4_5_30_prio);
		((P0 *)_this)->_4_4_5_30_prio = (((int)((P0 *)_this)->_4_4_5_30_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_4_5_30_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1146: // STATE 644 - resume_suspend.pml:227 - [(((prio>=4)||found))] (669:0:3 - 1)
		IfNotBlocked
		reached[0][644] = 1;
		if (!(((((int)((P0 *)_this)->_4_4_5_30_prio)>=4)||((int)((P0 *)_this)->_4_4_5_30_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_5_30_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_4_5_30_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_30_found = 0;
		/* merge: goto :b24(669, 645, 669) */
		reached[0][645] = 1;
		;
		/* merge: newTask = top_task(669, 649, 669) */
		reached[0][649] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_4_5_30_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[0][650] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_4_5_30_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1147: // STATE 649 - resume_suspend.pml:231 - [newTask = top_task] (0:669:2 - 3)
		IfNotBlocked
		reached[0][649] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_4_5_30_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(669, 650, 669) */
		reached[0][650] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_4_5_30_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1148: // STATE 652 - resume_suspend.pml:177 - [deq_idx = 0] (0:659:2 - 1)
		IfNotBlocked
		reached[0][652] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_4_5_31_deq_idx);
		((P0 *)_this)->_4_4_5_31_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_4_5_31_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(659, 653, 659) */
		reached[0][653] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_31_deq_idx);
		((P0 *)_this)->_4_4_5_31_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_4_5_31_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[0][660] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1149: // STATE 654 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (659:0:2 - 1)
		IfNotBlocked
		reached[0][654] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_31_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](659, 655, 659) */
		reached[0][655] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_4_5_31_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_4_5_31_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_4_5_31_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_4_5_31_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(659, 656, 659) */
		reached[0][656] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_4_5_31_deq_idx);
		((P0 *)_this)->_4_4_5_31_deq_idx = (((int)((P0 *)_this)->_4_4_5_31_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_4_5_31_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 660, 659) */
		reached[0][660] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1150: // STATE 657 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][657] = 1;
		if (!((((int)((P0 *)_this)->_4_4_5_31_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_4_5_31_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_4_5_31_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_4_5_31_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1151: // STATE 662 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (673:0:4 - 1)
		IfNotBlocked
		reached[0][662] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(673, 663, 673) */
		reached[0][663] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(673, 664, 673) */
		reached[0][664] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(673, 668, 673) */
		reached[0][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[0][670] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[0][671] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1152: // STATE 666 - resume_suspend.pml:192 - [(1)] (673:0:2 - 1)
		IfNotBlocked
		reached[0][666] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(673, 668, 673) */
		reached[0][668] = 1;
		;
		/* merge: tcb[newTask].state = 4(673, 670, 673) */
		reached[0][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[0][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1153: // STATE 670 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:673:2 - 3)
		IfNotBlocked
		reached[0][670] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(673, 671, 673) */
		reached[0][671] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1154: // STATE 672 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][672] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1155: // STATE 676 - resume_suspend.pml:478 - [((EP==1))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][676] = 1;
		if (!((((int)now.EP)==1)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1156: // STATE 677 - resume_suspend.pml:376 - [currentTask = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[0][677] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_currentTask);
		((P0 *)_this)->_4_5_6_currentTask = 0;
#ifdef VAR_RANGES
		logval("Process1:currentTask", ((int)((P0 *)_this)->_4_5_6_currentTask));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1157: // STATE 678 - resume_suspend.pml:377 - [((((3>0)&&(EP>=1))&&(EP<=4)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][678] = 1;
		if (!((((3>0)&&(((int)now.EP)>=1))&&(((int)now.EP)<=4))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1158: // STATE 679 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:693:6 - 1)
		IfNotBlocked
		reached[0][679] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(693, 680, 693) */
		reached[0][680] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: currentTask = EP(693, 682, 693) */
		reached[0][682] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_6_currentTask);
		((P0 *)_this)->_4_5_6_currentTask = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:currentTask", ((int)((P0 *)_this)->_4_5_6_currentTask));
#endif
		;
		/* merge: tcb[currentTask].state = 2(693, 683, 693) */
		reached[0][683] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_currentTask), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_5_6_currentTask, 5) ].state = 2;
#ifdef VAR_RANGES
		logval("tcb[Process1:currentTask].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_currentTask), 5) ].state));
#endif
		;
		/* merge: tcb[currentTask].wakeupTime = (tickCount+3)(693, 684, 693) */
		reached[0][684] = 1;
		(trpt+1)->bup.ovals[4] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_currentTask), 5) ].wakeupTime);
		now.tcb[ Index(((P0 *)_this)->_4_5_6_currentTask, 5) ].wakeupTime = (((int)now.tickCount)+3);
#ifdef VAR_RANGES
		logval("tcb[Process1:currentTask].wakeupTime", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_currentTask), 5) ].wakeupTime));
#endif
		;
		/* merge: tcb[currentTask].delayTicks = 3(693, 685, 693) */
		reached[0][685] = 1;
		(trpt+1)->bup.ovals[5] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_currentTask), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_5_6_currentTask, 5) ].delayTicks = 3;
#ifdef VAR_RANGES
		logval("tcb[Process1:currentTask].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_currentTask), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1159: // STATE 686 - resume_suspend.pml:70 - [((sortLink.count<8))] (821:0:2 - 1)
		IfNotBlocked
		reached[0][686] = 1;
		if (!((((int)now.sortLink.count)<8)))
			continue;
		/* merge: sortLink.tasks[sortLink.count] = currentTask(821, 687, 821) */
		reached[0][687] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]);
		now.sortLink.tasks[ Index(now.sortLink.count, 8) ] = ((int)((P0 *)_this)->_4_5_6_currentTask);
#ifdef VAR_RANGES
		logval("sortLink.tasks[sortLink.count]", ((int)now.sortLink.tasks[ Index(((int)now.sortLink.count), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count+1)(821, 688, 821) */
		reached[0][688] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)+1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 692, 821) */
		reached[0][692] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1160: // STATE 690 - resume_suspend.pml:74 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][690] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1161: // STATE 694 - resume_suspend.pml:401 - [interrupted_task = 0] (0:702:6 - 1)
		IfNotBlocked
		reached[0][694] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_interrupted_task);
		((P0 *)_this)->_4_5_6_35_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_6_35_interrupted_task));
#endif
		;
		/* merge: idx = 0(702, 695, 702) */
		reached[0][695] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_idx);
		((P0 *)_this)->_4_5_6_35_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_5_6_35_idx));
#endif
		;
		/* merge: taskId = 0(702, 696, 702) */
		reached[0][696] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_6_35_taskId);
		((P0 *)_this)->_4_5_6_35_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_5_6_35_taskId));
#endif
		;
		/* merge: needResched = 0(702, 697, 702) */
		reached[0][697] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_6_35_needResched);
		((P0 *)_this)->_4_5_6_35_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_6_35_needResched));
#endif
		;
		/* merge: interrupted_task = 0(702, 698, 702) */
		reached[0][698] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_5_6_35_interrupted_task);
		((P0 *)_this)->_4_5_6_35_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_6_35_interrupted_task));
#endif
		;
		/* merge: needResched = 0(702, 699, 702) */
		reached[0][699] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_5_6_35_needResched);
		((P0 *)_this)->_4_5_6_35_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_6_35_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1162: // STATE 700 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:759:4 - 1)
		IfNotBlocked
		reached[0][700] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(759, 701, 759) */
		reached[0][701] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(759, 703, 759) */
		reached[0][703] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(759, 704, 759) */
		reached[0][704] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_6_35_idx);
		((P0 *)_this)->_4_5_6_35_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_5_6_35_idx));
#endif
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[0][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1163: // STATE 705 - resume_suspend.pml:416 - [((idx<sortLink.count))] (755:0:1 - 1)
		IfNotBlocked
		reached[0][705] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 706, 755) */
		reached[0][706] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_35_taskId);
		((P0 *)_this)->_4_5_6_35_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_6_35_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_5_6_35_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1164: // STATE 707 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (743:0:2 - 1)
		IfNotBlocked
		reached[0][707] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(743, 708, 743) */
		reached[0][708] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_5_6_35_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(743, 709, 743) */
		reached[0][709] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_5_6_35_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1165: // STATE 710 - resume_suspend.pml:81 - [removePos = 0] (0:724:5 - 1)
		IfNotBlocked
		reached[0][710] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_9_removePos);
		((P0 *)_this)->_4_5_6_35_9_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_5_6_35_9_removePos));
#endif
		;
		/* merge: found = 0(724, 711, 724) */
		reached[0][711] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_9_found);
		((P0 *)_this)->_4_5_6_35_9_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_6_35_9_found));
#endif
		;
		/* merge: shiftIdx = 0(724, 712, 724) */
		reached[0][712] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx);
		((P0 *)_this)->_4_5_6_35_9_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx));
#endif
		;
		/* merge: removePos = 0(724, 713, 724) */
		reached[0][713] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_6_35_9_removePos);
		((P0 *)_this)->_4_5_6_35_9_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_5_6_35_9_removePos));
#endif
		;
		/* merge: found = 0(724, 714, 724) */
		reached[0][714] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_5_6_35_9_found);
		((P0 *)_this)->_4_5_6_35_9_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_6_35_9_found));
#endif
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[0][725] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1166: // STATE 715 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][715] = 1;
		if (!(((((int)((P0 *)_this)->_4_5_6_35_9_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_5_6_35_9_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1167: // STATE 716 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (724:0:1 - 1)
		IfNotBlocked
		reached[0][716] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_6_35_9_removePos), 8) ])==((int)((P0 *)_this)->_4_5_6_35_taskId))))
			continue;
		/* merge: found = 1(0, 717, 724) */
		reached[0][717] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_35_9_found);
		((P0 *)_this)->_4_5_6_35_9_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_6_35_9_found));
#endif
		;
		/* merge: .(goto)(0, 721, 724) */
		reached[0][721] = 1;
		;
		/* merge: .(goto)(0, 725, 724) */
		reached[0][725] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1168: // STATE 719 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][719] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_35_9_removePos);
		((P0 *)_this)->_4_5_6_35_9_removePos = (((int)((P0 *)_this)->_4_5_6_35_9_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_5_6_35_9_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1169: // STATE 727 - resume_suspend.pml:100 - [((found==1))] (734:0:2 - 1)
		IfNotBlocked
		reached[0][727] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_9_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_6_35_9_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_6_35_9_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_9_found = 0;
		/* merge: shiftIdx = removePos(0, 728, 734) */
		reached[0][728] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx);
		((P0 *)_this)->_4_5_6_35_9_shiftIdx = ((int)((P0 *)_this)->_4_5_6_35_9_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[0][735] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1170: // STATE 729 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (734:0:2 - 1)
		IfNotBlocked
		reached[0][729] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](734, 730, 734) */
		reached[0][730] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_5_6_35_9_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(734, 731, 734) */
		reached[0][731] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx);
		((P0 *)_this)->_4_5_6_35_9_shiftIdx = (((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 735, 734) */
		reached[0][735] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1171: // STATE 732 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (751:0:3 - 1)
		IfNotBlocked
		reached[0][732] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_9_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_6_35_9_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_6_35_9_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_9_shiftIdx = 0;
		/* merge: goto :b28(751, 733, 751) */
		reached[0][733] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(751, 737, 751) */
		reached[0][737] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[0][738] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[0][742] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1172: // STATE 737 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:751:2 - 3)
		IfNotBlocked
		reached[0][737] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(751, 738, 751) */
		reached[0][738] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 742, 751) */
		reached[0][742] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1173: // STATE 744 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (759:0:4 - 1)
		IfNotBlocked
		reached[0][744] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(759, 745, 759) */
		reached[0][745] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_6_35_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_6_35_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_5_6_35_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(759, 746, 759) */
		reached[0][746] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_6_35_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(759, 750, 759) */
		reached[0][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[0][752] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_6_35_needResched);
		((P0 *)_this)->_4_5_6_35_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_6_35_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_5_6_35_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[0][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[0][760] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1174: // STATE 748 - resume_suspend.pml:140 - [assert(0)] (0:759:2 - 1)
		IfNotBlocked
		reached[0][748] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(759, 750, 759) */
		reached[0][750] = 1;
		;
		/* merge: needResched = 1(759, 752, 759) */
		reached[0][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_needResched);
		((P0 *)_this)->_4_5_6_35_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_6_35_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_5_6_35_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[0][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[0][760] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1175: // STATE 752 - resume_suspend.pml:433 - [needResched = 1] (0:759:2 - 3)
		IfNotBlocked
		reached[0][752] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_needResched);
		((P0 *)_this)->_4_5_6_35_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_6_35_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_5_6_35_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_needResched = 0;
		/* merge: .(goto)(0, 756, 759) */
		reached[0][756] = 1;
		;
		/* merge: .(goto)(0, 760, 759) */
		reached[0][760] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1176: // STATE 754 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][754] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_35_idx);
		((P0 *)_this)->_4_5_6_35_idx = (((int)((P0 *)_this)->_4_5_6_35_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_5_6_35_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1177: // STATE 757 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (775:0:2 - 1)
		IfNotBlocked
		reached[0][757] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_6_35_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_6_35_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_idx = 0;
		/* merge: goto :b26(775, 758, 775) */
		reached[0][758] = 1;
		;
		/* merge: interrupted_task = EP(775, 762, 775) */
		reached[0][762] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_interrupted_task);
		((P0 *)_this)->_4_5_6_35_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_6_35_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1178: // STATE 762 - resume_suspend.pml:442 - [interrupted_task = EP] (0:775:1 - 3)
		IfNotBlocked
		reached[0][762] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_35_interrupted_task);
		((P0 *)_this)->_4_5_6_35_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_6_35_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1179: // STATE 763 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (772:0:1 - 1)
		IfNotBlocked
		reached[0][763] = 1;
		if (!((((((int)((P0 *)_this)->_4_5_6_35_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_5_6_35_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 764, 772) */
		reached[0][764] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_5_6_35_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1180: // STATE 765 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (798:0:2 - 1)
		IfNotBlocked
		reached[0][765] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(798, 766, 798) */
		reached[0][766] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_6_35_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_6_35_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_5_6_35_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(798, 767, 798) */
		reached[0][767] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_6_35_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_6_35_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 771, 798) */
		reached[0][771] = 1;
		;
		/* merge: .(goto)(0, 776, 798) */
		reached[0][776] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1181: // STATE 769 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][769] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1182: // STATE 777 - resume_suspend.pml:208 - [prio = 0] (0:793:6 - 1)
		IfNotBlocked
		reached[0][777] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_12_prio);
		((P0 *)_this)->_4_5_6_35_12_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_5_6_35_12_prio));
#endif
		;
		/* merge: top_task = 0(793, 778, 793) */
		reached[0][778] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_12_top_task);
		((P0 *)_this)->_4_5_6_35_12_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_5_6_35_12_top_task));
#endif
		;
		/* merge: found = 0(793, 779, 793) */
		reached[0][779] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_6_35_12_found);
		((P0 *)_this)->_4_5_6_35_12_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_6_35_12_found));
#endif
		;
		/* merge: prio = 0(793, 780, 793) */
		reached[0][780] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_6_35_12_prio);
		((P0 *)_this)->_4_5_6_35_12_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_5_6_35_12_prio));
#endif
		;
		/* merge: top_task = 0(793, 781, 793) */
		reached[0][781] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_5_6_35_12_top_task);
		((P0 *)_this)->_4_5_6_35_12_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_5_6_35_12_top_task));
#endif
		;
		/* merge: found = 0(793, 782, 793) */
		reached[0][782] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_5_6_35_12_found);
		((P0 *)_this)->_4_5_6_35_12_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_6_35_12_found));
#endif
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[0][794] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1183: // STATE 783 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][783] = 1;
		if (!(((((int)((P0 *)_this)->_4_5_6_35_12_prio)<4)&& !(((int)((P0 *)_this)->_4_5_6_35_12_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1184: // STATE 784 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (793:0:2 - 1)
		IfNotBlocked
		reached[0][784] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_5_6_35_12_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](793, 785, 793) */
		reached[0][785] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_12_top_task);
		((P0 *)_this)->_4_5_6_35_12_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_5_6_35_12_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_5_6_35_12_top_task));
#endif
		;
		/* merge: found = 1(793, 786, 793) */
		reached[0][786] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_12_found);
		((P0 *)_this)->_4_5_6_35_12_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_6_35_12_found));
#endif
		;
		/* merge: .(goto)(0, 790, 793) */
		reached[0][790] = 1;
		;
		/* merge: .(goto)(0, 794, 793) */
		reached[0][794] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1185: // STATE 788 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][788] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_6_35_12_prio);
		((P0 *)_this)->_4_5_6_35_12_prio = (((int)((P0 *)_this)->_4_5_6_35_12_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_5_6_35_12_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1186: // STATE 791 - resume_suspend.pml:227 - [(((prio>=4)||found))] (816:0:3 - 1)
		IfNotBlocked
		reached[0][791] = 1;
		if (!(((((int)((P0 *)_this)->_4_5_6_35_12_prio)>=4)||((int)((P0 *)_this)->_4_5_6_35_12_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_6_35_12_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_6_35_12_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_12_found = 0;
		/* merge: goto :b29(816, 792, 816) */
		reached[0][792] = 1;
		;
		/* merge: newTask = top_task(816, 796, 816) */
		reached[0][796] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_5_6_35_12_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[0][797] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_5_6_35_12_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1187: // STATE 796 - resume_suspend.pml:231 - [newTask = top_task] (0:816:2 - 3)
		IfNotBlocked
		reached[0][796] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_5_6_35_12_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(816, 797, 816) */
		reached[0][797] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_5_6_35_12_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1188: // STATE 799 - resume_suspend.pml:177 - [deq_idx = 0] (0:806:2 - 1)
		IfNotBlocked
		reached[0][799] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_6_35_13_deq_idx);
		((P0 *)_this)->_4_5_6_35_13_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_5_6_35_13_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(806, 800, 806) */
		reached[0][800] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_13_deq_idx);
		((P0 *)_this)->_4_5_6_35_13_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_5_6_35_13_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[0][807] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1189: // STATE 801 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (806:0:2 - 1)
		IfNotBlocked
		reached[0][801] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_13_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](806, 802, 806) */
		reached[0][802] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_5_6_35_13_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_5_6_35_13_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_5_6_35_13_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_5_6_35_13_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(806, 803, 806) */
		reached[0][803] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_6_35_13_deq_idx);
		((P0 *)_this)->_4_5_6_35_13_deq_idx = (((int)((P0 *)_this)->_4_5_6_35_13_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_5_6_35_13_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 807, 806) */
		reached[0][807] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1190: // STATE 804 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][804] = 1;
		if (!((((int)((P0 *)_this)->_4_5_6_35_13_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_6_35_13_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_5_6_35_13_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_6_35_13_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1191: // STATE 809 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (820:0:4 - 1)
		IfNotBlocked
		reached[0][809] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(820, 810, 820) */
		reached[0][810] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(820, 811, 820) */
		reached[0][811] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(820, 815, 820) */
		reached[0][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[0][817] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[0][818] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1192: // STATE 813 - resume_suspend.pml:192 - [(1)] (820:0:2 - 1)
		IfNotBlocked
		reached[0][813] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(820, 815, 820) */
		reached[0][815] = 1;
		;
		/* merge: tcb[newTask].state = 4(820, 817, 820) */
		reached[0][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[0][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1193: // STATE 817 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:820:2 - 3)
		IfNotBlocked
		reached[0][817] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(820, 818, 820) */
		reached[0][818] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1194: // STATE 819 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][819] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1195: // STATE 822 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][822] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1196: // STATE 829 - resume_suspend.pml:401 - [interrupted_task = 0] (0:837:6 - 1)
		IfNotBlocked
		reached[0][829] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_interrupted_task);
		((P0 *)_this)->_4_5_7_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_7_interrupted_task));
#endif
		;
		/* merge: idx = 0(837, 830, 837) */
		reached[0][830] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_idx);
		((P0 *)_this)->_4_5_7_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_5_7_idx));
#endif
		;
		/* merge: taskId = 0(837, 831, 837) */
		reached[0][831] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_7_taskId);
		((P0 *)_this)->_4_5_7_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_5_7_taskId));
#endif
		;
		/* merge: needResched = 0(837, 832, 837) */
		reached[0][832] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_7_needResched);
		((P0 *)_this)->_4_5_7_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_7_needResched));
#endif
		;
		/* merge: interrupted_task = 0(837, 833, 837) */
		reached[0][833] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_5_7_interrupted_task);
		((P0 *)_this)->_4_5_7_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_7_interrupted_task));
#endif
		;
		/* merge: needResched = 0(837, 834, 837) */
		reached[0][834] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_5_7_needResched);
		((P0 *)_this)->_4_5_7_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_7_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1197: // STATE 835 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:894:4 - 1)
		IfNotBlocked
		reached[0][835] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(894, 836, 894) */
		reached[0][836] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(894, 838, 894) */
		reached[0][838] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(894, 839, 894) */
		reached[0][839] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_7_idx);
		((P0 *)_this)->_4_5_7_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_5_7_idx));
#endif
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[0][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1198: // STATE 840 - resume_suspend.pml:416 - [((idx<sortLink.count))] (890:0:1 - 1)
		IfNotBlocked
		reached[0][840] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 841, 890) */
		reached[0][841] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_7_taskId);
		((P0 *)_this)->_4_5_7_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_7_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_5_7_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1199: // STATE 842 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (878:0:2 - 1)
		IfNotBlocked
		reached[0][842] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(878, 843, 878) */
		reached[0][843] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_5_7_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(878, 844, 878) */
		reached[0][844] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_5_7_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1200: // STATE 845 - resume_suspend.pml:81 - [removePos = 0] (0:859:5 - 1)
		IfNotBlocked
		reached[0][845] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_38_removePos);
		((P0 *)_this)->_4_5_7_38_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_5_7_38_removePos));
#endif
		;
		/* merge: found = 0(859, 846, 859) */
		reached[0][846] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_38_found);
		((P0 *)_this)->_4_5_7_38_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_7_38_found));
#endif
		;
		/* merge: shiftIdx = 0(859, 847, 859) */
		reached[0][847] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_7_38_shiftIdx);
		((P0 *)_this)->_4_5_7_38_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_5_7_38_shiftIdx));
#endif
		;
		/* merge: removePos = 0(859, 848, 859) */
		reached[0][848] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_7_38_removePos);
		((P0 *)_this)->_4_5_7_38_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_5_7_38_removePos));
#endif
		;
		/* merge: found = 0(859, 849, 859) */
		reached[0][849] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_5_7_38_found);
		((P0 *)_this)->_4_5_7_38_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_7_38_found));
#endif
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[0][860] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1201: // STATE 850 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][850] = 1;
		if (!(((((int)((P0 *)_this)->_4_5_7_38_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_5_7_38_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1202: // STATE 851 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (859:0:1 - 1)
		IfNotBlocked
		reached[0][851] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_7_38_removePos), 8) ])==((int)((P0 *)_this)->_4_5_7_taskId))))
			continue;
		/* merge: found = 1(0, 852, 859) */
		reached[0][852] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_7_38_found);
		((P0 *)_this)->_4_5_7_38_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_7_38_found));
#endif
		;
		/* merge: .(goto)(0, 856, 859) */
		reached[0][856] = 1;
		;
		/* merge: .(goto)(0, 860, 859) */
		reached[0][860] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1203: // STATE 854 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][854] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_7_38_removePos);
		((P0 *)_this)->_4_5_7_38_removePos = (((int)((P0 *)_this)->_4_5_7_38_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_5_7_38_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1204: // STATE 862 - resume_suspend.pml:100 - [((found==1))] (869:0:2 - 1)
		IfNotBlocked
		reached[0][862] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_38_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_7_38_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_7_38_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_38_found = 0;
		/* merge: shiftIdx = removePos(0, 863, 869) */
		reached[0][863] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_38_shiftIdx);
		((P0 *)_this)->_4_5_7_38_shiftIdx = ((int)((P0 *)_this)->_4_5_7_38_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_5_7_38_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[0][870] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1205: // STATE 864 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (869:0:2 - 1)
		IfNotBlocked
		reached[0][864] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_38_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](869, 865, 869) */
		reached[0][865] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_7_38_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_5_7_38_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_5_7_38_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_5_7_38_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(869, 866, 869) */
		reached[0][866] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_38_shiftIdx);
		((P0 *)_this)->_4_5_7_38_shiftIdx = (((int)((P0 *)_this)->_4_5_7_38_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_5_7_38_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 870, 869) */
		reached[0][870] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1206: // STATE 867 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (886:0:3 - 1)
		IfNotBlocked
		reached[0][867] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_38_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_7_38_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_7_38_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_38_shiftIdx = 0;
		/* merge: goto :b33(886, 868, 886) */
		reached[0][868] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(886, 872, 886) */
		reached[0][872] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[0][873] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[0][877] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1207: // STATE 872 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:886:2 - 3)
		IfNotBlocked
		reached[0][872] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(886, 873, 886) */
		reached[0][873] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 877, 886) */
		reached[0][877] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1208: // STATE 879 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (894:0:4 - 1)
		IfNotBlocked
		reached[0][879] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(894, 880, 894) */
		reached[0][880] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_7_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_7_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_5_7_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(894, 881, 894) */
		reached[0][881] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_7_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(894, 885, 894) */
		reached[0][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[0][887] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_7_needResched);
		((P0 *)_this)->_4_5_7_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_7_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_5_7_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[0][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[0][895] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1209: // STATE 883 - resume_suspend.pml:140 - [assert(0)] (0:894:2 - 1)
		IfNotBlocked
		reached[0][883] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(894, 885, 894) */
		reached[0][885] = 1;
		;
		/* merge: needResched = 1(894, 887, 894) */
		reached[0][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_needResched);
		((P0 *)_this)->_4_5_7_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_7_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_5_7_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[0][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[0][895] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1210: // STATE 887 - resume_suspend.pml:433 - [needResched = 1] (0:894:2 - 3)
		IfNotBlocked
		reached[0][887] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_needResched);
		((P0 *)_this)->_4_5_7_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_5_7_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_5_7_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_needResched = 0;
		/* merge: .(goto)(0, 891, 894) */
		reached[0][891] = 1;
		;
		/* merge: .(goto)(0, 895, 894) */
		reached[0][895] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1211: // STATE 889 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][889] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_7_idx);
		((P0 *)_this)->_4_5_7_idx = (((int)((P0 *)_this)->_4_5_7_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_5_7_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1212: // STATE 892 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (910:0:2 - 1)
		IfNotBlocked
		reached[0][892] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_7_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_7_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_idx = 0;
		/* merge: goto :b31(910, 893, 910) */
		reached[0][893] = 1;
		;
		/* merge: interrupted_task = EP(910, 897, 910) */
		reached[0][897] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_interrupted_task);
		((P0 *)_this)->_4_5_7_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_7_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1213: // STATE 897 - resume_suspend.pml:442 - [interrupted_task = EP] (0:910:1 - 3)
		IfNotBlocked
		reached[0][897] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_7_interrupted_task);
		((P0 *)_this)->_4_5_7_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_5_7_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1214: // STATE 898 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (907:0:1 - 1)
		IfNotBlocked
		reached[0][898] = 1;
		if (!((((((int)((P0 *)_this)->_4_5_7_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_5_7_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 899, 907) */
		reached[0][899] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_5_7_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1215: // STATE 900 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (933:0:2 - 1)
		IfNotBlocked
		reached[0][900] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(933, 901, 933) */
		reached[0][901] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_7_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_7_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_5_7_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(933, 902, 933) */
		reached[0][902] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_5_7_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_5_7_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 906, 933) */
		reached[0][906] = 1;
		;
		/* merge: .(goto)(0, 911, 933) */
		reached[0][911] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1216: // STATE 904 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][904] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1217: // STATE 912 - resume_suspend.pml:208 - [prio = 0] (0:928:6 - 1)
		IfNotBlocked
		reached[0][912] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_41_prio);
		((P0 *)_this)->_4_5_7_41_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_5_7_41_prio));
#endif
		;
		/* merge: top_task = 0(928, 913, 928) */
		reached[0][913] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_41_top_task);
		((P0 *)_this)->_4_5_7_41_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_5_7_41_top_task));
#endif
		;
		/* merge: found = 0(928, 914, 928) */
		reached[0][914] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_5_7_41_found);
		((P0 *)_this)->_4_5_7_41_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_7_41_found));
#endif
		;
		/* merge: prio = 0(928, 915, 928) */
		reached[0][915] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_5_7_41_prio);
		((P0 *)_this)->_4_5_7_41_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_5_7_41_prio));
#endif
		;
		/* merge: top_task = 0(928, 916, 928) */
		reached[0][916] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_5_7_41_top_task);
		((P0 *)_this)->_4_5_7_41_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_5_7_41_top_task));
#endif
		;
		/* merge: found = 0(928, 917, 928) */
		reached[0][917] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_5_7_41_found);
		((P0 *)_this)->_4_5_7_41_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_7_41_found));
#endif
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[0][929] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1218: // STATE 918 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][918] = 1;
		if (!(((((int)((P0 *)_this)->_4_5_7_41_prio)<4)&& !(((int)((P0 *)_this)->_4_5_7_41_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1219: // STATE 919 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (928:0:2 - 1)
		IfNotBlocked
		reached[0][919] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_5_7_41_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](928, 920, 928) */
		reached[0][920] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_41_top_task);
		((P0 *)_this)->_4_5_7_41_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_5_7_41_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_5_7_41_top_task));
#endif
		;
		/* merge: found = 1(928, 921, 928) */
		reached[0][921] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_41_found);
		((P0 *)_this)->_4_5_7_41_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_5_7_41_found));
#endif
		;
		/* merge: .(goto)(0, 925, 928) */
		reached[0][925] = 1;
		;
		/* merge: .(goto)(0, 929, 928) */
		reached[0][929] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1220: // STATE 923 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][923] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_5_7_41_prio);
		((P0 *)_this)->_4_5_7_41_prio = (((int)((P0 *)_this)->_4_5_7_41_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_5_7_41_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1221: // STATE 926 - resume_suspend.pml:227 - [(((prio>=4)||found))] (951:0:3 - 1)
		IfNotBlocked
		reached[0][926] = 1;
		if (!(((((int)((P0 *)_this)->_4_5_7_41_prio)>=4)||((int)((P0 *)_this)->_4_5_7_41_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_7_41_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_5_7_41_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_41_found = 0;
		/* merge: goto :b34(951, 927, 951) */
		reached[0][927] = 1;
		;
		/* merge: newTask = top_task(951, 931, 951) */
		reached[0][931] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_5_7_41_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[0][932] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_5_7_41_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1222: // STATE 931 - resume_suspend.pml:231 - [newTask = top_task] (0:951:2 - 3)
		IfNotBlocked
		reached[0][931] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_5_7_41_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(951, 932, 951) */
		reached[0][932] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_5_7_41_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1223: // STATE 934 - resume_suspend.pml:177 - [deq_idx = 0] (0:941:2 - 1)
		IfNotBlocked
		reached[0][934] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_5_7_42_deq_idx);
		((P0 *)_this)->_4_5_7_42_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_5_7_42_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(941, 935, 941) */
		reached[0][935] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_42_deq_idx);
		((P0 *)_this)->_4_5_7_42_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_5_7_42_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[0][942] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1224: // STATE 936 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (941:0:2 - 1)
		IfNotBlocked
		reached[0][936] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_42_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](941, 937, 941) */
		reached[0][937] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_5_7_42_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_5_7_42_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_5_7_42_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_5_7_42_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(941, 938, 941) */
		reached[0][938] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_5_7_42_deq_idx);
		((P0 *)_this)->_4_5_7_42_deq_idx = (((int)((P0 *)_this)->_4_5_7_42_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_5_7_42_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 942, 941) */
		reached[0][942] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1225: // STATE 939 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][939] = 1;
		if (!((((int)((P0 *)_this)->_4_5_7_42_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_5_7_42_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_5_7_42_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_5_7_42_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1226: // STATE 944 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (955:0:4 - 1)
		IfNotBlocked
		reached[0][944] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(955, 945, 955) */
		reached[0][945] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(955, 946, 955) */
		reached[0][946] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(955, 950, 955) */
		reached[0][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[0][952] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[0][953] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1227: // STATE 948 - resume_suspend.pml:192 - [(1)] (955:0:2 - 1)
		IfNotBlocked
		reached[0][948] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(955, 950, 955) */
		reached[0][950] = 1;
		;
		/* merge: tcb[newTask].state = 4(955, 952, 955) */
		reached[0][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[0][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1228: // STATE 952 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:955:2 - 3)
		IfNotBlocked
		reached[0][952] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(955, 953, 955) */
		reached[0][953] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1229: // STATE 954 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][954] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1230: // STATE 958 - resume_suspend.pml:479 - [((counter<100))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][958] = 1;
		if (!((((int)((P0 *)_this)->counter)<100)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1231: // STATE 959 - resume_suspend.pml:479 - [((EP==1))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][959] = 1;
		if (!((((int)now.EP)==1)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1232: // STATE 961 - resume_suspend.pml:401 - [interrupted_task = 0] (0:969:6 - 1)
		IfNotBlocked
		reached[0][961] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_interrupted_task);
		((P0 *)_this)->_4_6_8_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_6_8_interrupted_task));
#endif
		;
		/* merge: idx = 0(969, 962, 969) */
		reached[0][962] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_idx);
		((P0 *)_this)->_4_6_8_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_6_8_idx));
#endif
		;
		/* merge: taskId = 0(969, 963, 969) */
		reached[0][963] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_6_8_taskId);
		((P0 *)_this)->_4_6_8_taskId = 0;
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_6_8_taskId));
#endif
		;
		/* merge: needResched = 0(969, 964, 969) */
		reached[0][964] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_6_8_needResched);
		((P0 *)_this)->_4_6_8_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_6_8_needResched));
#endif
		;
		/* merge: interrupted_task = 0(969, 965, 969) */
		reached[0][965] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_6_8_interrupted_task);
		((P0 *)_this)->_4_6_8_interrupted_task = 0;
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_6_8_interrupted_task));
#endif
		;
		/* merge: needResched = 0(969, 966, 969) */
		reached[0][966] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_6_8_needResched);
		((P0 *)_this)->_4_6_8_needResched = 0;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_6_8_needResched));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1233: // STATE 967 - resume_suspend.pml:238 - [int_save = int_ctrl_reg] (0:1026:4 - 1)
		IfNotBlocked
		reached[0][967] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.int_save);
		now.int_save = ((int)now.int_ctrl_reg);
#ifdef VAR_RANGES
		logval("int_save", ((int)now.int_save));
#endif
		;
		/* merge: int_ctrl_reg = 1(1026, 968, 1026) */
		reached[0][968] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = 1;
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		/* merge: tickCount = (tickCount+1)(1026, 970, 1026) */
		reached[0][970] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tickCount);
		now.tickCount = (((int)now.tickCount)+1);
#ifdef VAR_RANGES
		logval("tickCount", ((int)now.tickCount));
#endif
		;
		/* merge: idx = 0(1026, 971, 1026) */
		reached[0][971] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_6_8_idx);
		((P0 *)_this)->_4_6_8_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_6_8_idx));
#endif
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[0][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1234: // STATE 972 - resume_suspend.pml:416 - [((idx<sortLink.count))] (1022:0:1 - 1)
		IfNotBlocked
		reached[0][972] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_idx)<((int)now.sortLink.count))))
			continue;
		/* merge: taskId = sortLink.tasks[idx](0, 973, 1022) */
		reached[0][973] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_6_8_taskId);
		((P0 *)_this)->_4_6_8_taskId = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_6_8_idx), 8) ]);
#ifdef VAR_RANGES
		logval("Process1:taskId", ((int)((P0 *)_this)->_4_6_8_taskId));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1235: // STATE 974 - resume_suspend.pml:422 - [(((tcb[taskId].state==2)&&(tickCount>=tcb[taskId].wakeupTime)))] (1010:0:2 - 1)
		IfNotBlocked
		reached[0][974] = 1;
		if (!(((((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].state)==2)&&(((int)now.tickCount)>=((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].wakeupTime)))))
			continue;
		/* merge: tcb[taskId].state = 1(1010, 975, 1010) */
		reached[0][975] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_6_8_taskId, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].state));
#endif
		;
		/* merge: tcb[taskId].delayTicks = 0(1010, 976, 1010) */
		reached[0][976] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].delayTicks);
		now.tcb[ Index(((P0 *)_this)->_4_6_8_taskId, 5) ].delayTicks = 0;
#ifdef VAR_RANGES
		logval("tcb[Process1:taskId].delayTicks", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].delayTicks));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1236: // STATE 977 - resume_suspend.pml:81 - [removePos = 0] (0:991:5 - 1)
		IfNotBlocked
		reached[0][977] = 1;
		(trpt+1)->bup.ovals = grab_ints(5);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_45_removePos);
		((P0 *)_this)->_4_6_8_45_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_6_8_45_removePos));
#endif
		;
		/* merge: found = 0(991, 978, 991) */
		reached[0][978] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_45_found);
		((P0 *)_this)->_4_6_8_45_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_6_8_45_found));
#endif
		;
		/* merge: shiftIdx = 0(991, 979, 991) */
		reached[0][979] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_6_8_45_shiftIdx);
		((P0 *)_this)->_4_6_8_45_shiftIdx = 0;
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_6_8_45_shiftIdx));
#endif
		;
		/* merge: removePos = 0(991, 980, 991) */
		reached[0][980] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_6_8_45_removePos);
		((P0 *)_this)->_4_6_8_45_removePos = 0;
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_6_8_45_removePos));
#endif
		;
		/* merge: found = 0(991, 981, 991) */
		reached[0][981] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_6_8_45_found);
		((P0 *)_this)->_4_6_8_45_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_6_8_45_found));
#endif
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[0][992] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 1237: // STATE 982 - resume_suspend.pml:89 - [(((removePos<sortLink.count)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][982] = 1;
		if (!(((((int)((P0 *)_this)->_4_6_8_45_removePos)<((int)now.sortLink.count))&& !(((int)((P0 *)_this)->_4_6_8_45_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1238: // STATE 983 - resume_suspend.pml:91 - [((sortLink.tasks[removePos]==taskId))] (991:0:1 - 1)
		IfNotBlocked
		reached[0][983] = 1;
		if (!((((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_6_8_45_removePos), 8) ])==((int)((P0 *)_this)->_4_6_8_taskId))))
			continue;
		/* merge: found = 1(0, 984, 991) */
		reached[0][984] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_6_8_45_found);
		((P0 *)_this)->_4_6_8_45_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_6_8_45_found));
#endif
		;
		/* merge: .(goto)(0, 988, 991) */
		reached[0][988] = 1;
		;
		/* merge: .(goto)(0, 992, 991) */
		reached[0][992] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1239: // STATE 986 - resume_suspend.pml:94 - [removePos = (removePos+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][986] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_6_8_45_removePos);
		((P0 *)_this)->_4_6_8_45_removePos = (((int)((P0 *)_this)->_4_6_8_45_removePos)+1);
#ifdef VAR_RANGES
		logval("Process1:removePos", ((int)((P0 *)_this)->_4_6_8_45_removePos));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1240: // STATE 994 - resume_suspend.pml:100 - [((found==1))] (1001:0:2 - 1)
		IfNotBlocked
		reached[0][994] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_45_found)==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_6_8_45_found */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_6_8_45_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_45_found = 0;
		/* merge: shiftIdx = removePos(0, 995, 1001) */
		reached[0][995] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_45_shiftIdx);
		((P0 *)_this)->_4_6_8_45_shiftIdx = ((int)((P0 *)_this)->_4_6_8_45_removePos);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_6_8_45_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[0][1002] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1241: // STATE 996 - resume_suspend.pml:104 - [((shiftIdx<(sortLink.count-1)))] (1001:0:2 - 1)
		IfNotBlocked
		reached[0][996] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_45_shiftIdx)<(((int)now.sortLink.count)-1))))
			continue;
		/* merge: sortLink.tasks[shiftIdx] = sortLink.tasks[(shiftIdx+1)](1001, 997, 1001) */
		reached[0][997] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_6_8_45_shiftIdx), 8) ]);
		now.sortLink.tasks[ Index(((P0 *)_this)->_4_6_8_45_shiftIdx, 8) ] = ((int)now.sortLink.tasks[ Index((((int)((P0 *)_this)->_4_6_8_45_shiftIdx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("sortLink.tasks[Process1:shiftIdx]", ((int)now.sortLink.tasks[ Index(((int)((P0 *)_this)->_4_6_8_45_shiftIdx), 8) ]));
#endif
		;
		/* merge: shiftIdx = (shiftIdx+1)(1001, 998, 1001) */
		reached[0][998] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_45_shiftIdx);
		((P0 *)_this)->_4_6_8_45_shiftIdx = (((int)((P0 *)_this)->_4_6_8_45_shiftIdx)+1);
#ifdef VAR_RANGES
		logval("Process1:shiftIdx", ((int)((P0 *)_this)->_4_6_8_45_shiftIdx));
#endif
		;
		/* merge: .(goto)(0, 1002, 1001) */
		reached[0][1002] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1242: // STATE 999 - resume_suspend.pml:107 - [((shiftIdx>=(sortLink.count-1)))] (1018:0:3 - 1)
		IfNotBlocked
		reached[0][999] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_45_shiftIdx)>=(((int)now.sortLink.count)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_6_8_45_shiftIdx */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_6_8_45_shiftIdx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_45_shiftIdx = 0;
		/* merge: goto :b38(1018, 1000, 1018) */
		reached[0][1000] = 1;
		;
		/* merge: sortLink.tasks[(sortLink.count-1)] = 255(1018, 1004, 1018) */
		reached[0][1004] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[0][1005] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[0][1009] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1243: // STATE 1004 - resume_suspend.pml:111 - [sortLink.tasks[(sortLink.count-1)] = 255] (0:1018:2 - 3)
		IfNotBlocked
		reached[0][1004] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]);
		now.sortLink.tasks[ Index((now.sortLink.count-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("sortLink.tasks[(sortLink.count-1)]", ((int)now.sortLink.tasks[ Index((((int)now.sortLink.count)-1), 8) ]));
#endif
		;
		/* merge: sortLink.count = (sortLink.count-1)(1018, 1005, 1018) */
		reached[0][1005] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.sortLink.count);
		now.sortLink.count = (((int)now.sortLink.count)-1);
#ifdef VAR_RANGES
		logval("sortLink.count", ((int)now.sortLink.count));
#endif
		;
		/* merge: .(goto)(0, 1009, 1018) */
		reached[0][1009] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1244: // STATE 1011 - resume_suspend.pml:137 - [((readyQueue[tcb[taskId].prio].tailIndex<8))] (1026:0:4 - 1)
		IfNotBlocked
		reached[0][1011] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[taskId].prio].tasks[readyQueue[tcb[taskId].prio].tailIndex] = taskId(1026, 1012, 1026) */
		reached[0][1012] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_6_8_taskId, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_6_8_taskId, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_6_8_taskId);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tasks[readyQueue[tcb[Process1:taskId].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[taskId].prio].tailIndex = (readyQueue[tcb[taskId].prio].tailIndex+1)(1026, 1013, 1026) */
		reached[0][1013] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_6_8_taskId, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:taskId].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_taskId), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[0][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[0][1019] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_6_8_needResched);
		((P0 *)_this)->_4_6_8_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_6_8_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_6_8_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[0][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[0][1027] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1245: // STATE 1015 - resume_suspend.pml:140 - [assert(0)] (0:1026:2 - 1)
		IfNotBlocked
		reached[0][1015] = 1;
		spin_assert(0, "0", II, tt, t);
		/* merge: .(goto)(1026, 1017, 1026) */
		reached[0][1017] = 1;
		;
		/* merge: needResched = 1(1026, 1019, 1026) */
		reached[0][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_needResched);
		((P0 *)_this)->_4_6_8_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_6_8_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_6_8_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[0][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[0][1027] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1246: // STATE 1019 - resume_suspend.pml:433 - [needResched = 1] (0:1026:2 - 3)
		IfNotBlocked
		reached[0][1019] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_needResched);
		((P0 *)_this)->_4_6_8_needResched = 1;
#ifdef VAR_RANGES
		logval("Process1:needResched", ((int)((P0 *)_this)->_4_6_8_needResched));
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: _4_6_8_needResched */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_needResched = 0;
		/* merge: .(goto)(0, 1023, 1026) */
		reached[0][1023] = 1;
		;
		/* merge: .(goto)(0, 1027, 1026) */
		reached[0][1027] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1247: // STATE 1021 - resume_suspend.pml:436 - [idx = (idx+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][1021] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_6_8_idx);
		((P0 *)_this)->_4_6_8_idx = (((int)((P0 *)_this)->_4_6_8_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:idx", ((int)((P0 *)_this)->_4_6_8_idx));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1248: // STATE 1024 - resume_suspend.pml:438 - [((idx>=sortLink.count))] (1042:0:2 - 1)
		IfNotBlocked
		reached[0][1024] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_idx)>=((int)now.sortLink.count))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_6_8_idx */  (trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_6_8_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_idx = 0;
		/* merge: goto :b36(1042, 1025, 1042) */
		reached[0][1025] = 1;
		;
		/* merge: interrupted_task = EP(1042, 1029, 1042) */
		reached[0][1029] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_interrupted_task);
		((P0 *)_this)->_4_6_8_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_6_8_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 2 */
	case 1249: // STATE 1029 - resume_suspend.pml:442 - [interrupted_task = EP] (0:1042:1 - 3)
		IfNotBlocked
		reached[0][1029] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_6_8_interrupted_task);
		((P0 *)_this)->_4_6_8_interrupted_task = ((int)now.EP);
#ifdef VAR_RANGES
		logval("Process1:interrupted_task", ((int)((P0 *)_this)->_4_6_8_interrupted_task));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1250: // STATE 1030 - resume_suspend.pml:447 - [((((interrupted_task>=1)&&(interrupted_task<=4))&&(tcb[interrupted_task].state!=2)))] (1039:0:1 - 1)
		IfNotBlocked
		reached[0][1030] = 1;
		if (!((((((int)((P0 *)_this)->_4_6_8_interrupted_task)>=1)&&(((int)((P0 *)_this)->_4_6_8_interrupted_task)<=4))&&(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].state)!=2))))
			continue;
		/* merge: tcb[interrupted_task].state = 1(0, 1031, 1039) */
		reached[0][1031] = 1;
		(trpt+1)->bup.oval = ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].state);
		now.tcb[ Index(((P0 *)_this)->_4_6_8_interrupted_task, 5) ].state = 1;
#ifdef VAR_RANGES
		logval("tcb[Process1:interrupted_task].state", ((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].state));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1251: // STATE 1032 - resume_suspend.pml:137 - [((readyQueue[tcb[interrupted_task].prio].tailIndex<8))] (1065:0:2 - 1)
		IfNotBlocked
		reached[0][1032] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tailIndex)<8)))
			continue;
		/* merge: readyQueue[tcb[interrupted_task].prio].tasks[readyQueue[tcb[interrupted_task].prio].tailIndex] = interrupted_task(1065, 1033, 1065) */
		reached[0][1033] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_6_8_interrupted_task, 5) ].prio, 4) ].tasks[ Index(now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_6_8_interrupted_task, 5) ].prio, 4) ].tailIndex, 8) ] = ((int)((P0 *)_this)->_4_6_8_interrupted_task);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tasks[readyQueue[tcb[Process1:interrupted_task].prio].tailIndex]", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tasks[ Index(((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tailIndex), 8) ]));
#endif
		;
		/* merge: readyQueue[tcb[interrupted_task].prio].tailIndex = (readyQueue[tcb[interrupted_task].prio].tailIndex+1)(1065, 1034, 1065) */
		reached[0][1034] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tailIndex);
		now.readyQueue[ Index(now.tcb[ Index(((P0 *)_this)->_4_6_8_interrupted_task, 5) ].prio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tailIndex)+1);
#ifdef VAR_RANGES
		logval("readyQueue[tcb[Process1:interrupted_task].prio].tailIndex", ((int)now.readyQueue[ Index(((int)now.tcb[ Index(((int)((P0 *)_this)->_4_6_8_interrupted_task), 5) ].prio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(0, 1038, 1065) */
		reached[0][1038] = 1;
		;
		/* merge: .(goto)(0, 1043, 1065) */
		reached[0][1043] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1252: // STATE 1036 - resume_suspend.pml:140 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][1036] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 1253: // STATE 1044 - resume_suspend.pml:208 - [prio = 0] (0:1060:6 - 1)
		IfNotBlocked
		reached[0][1044] = 1;
		(trpt+1)->bup.ovals = grab_ints(6);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_48_prio);
		((P0 *)_this)->_4_6_8_48_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_6_8_48_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1045, 1060) */
		reached[0][1045] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_48_top_task);
		((P0 *)_this)->_4_6_8_48_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_6_8_48_top_task));
#endif
		;
		/* merge: found = 0(1060, 1046, 1060) */
		reached[0][1046] = 1;
		(trpt+1)->bup.ovals[2] = ((int)((P0 *)_this)->_4_6_8_48_found);
		((P0 *)_this)->_4_6_8_48_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_6_8_48_found));
#endif
		;
		/* merge: prio = 0(1060, 1047, 1060) */
		reached[0][1047] = 1;
		(trpt+1)->bup.ovals[3] = ((int)((P0 *)_this)->_4_6_8_48_prio);
		((P0 *)_this)->_4_6_8_48_prio = 0;
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_6_8_48_prio));
#endif
		;
		/* merge: top_task = 0(1060, 1048, 1060) */
		reached[0][1048] = 1;
		(trpt+1)->bup.ovals[4] = ((int)((P0 *)_this)->_4_6_8_48_top_task);
		((P0 *)_this)->_4_6_8_48_top_task = 0;
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_6_8_48_top_task));
#endif
		;
		/* merge: found = 0(1060, 1049, 1060) */
		reached[0][1049] = 1;
		(trpt+1)->bup.ovals[5] = ((int)((P0 *)_this)->_4_6_8_48_found);
		((P0 *)_this)->_4_6_8_48_found = 0;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_6_8_48_found));
#endif
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[0][1061] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 1254: // STATE 1050 - resume_suspend.pml:217 - [(((prio<4)&&!(found)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][1050] = 1;
		if (!(((((int)((P0 *)_this)->_4_6_8_48_prio)<4)&& !(((int)((P0 *)_this)->_4_6_8_48_found)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1255: // STATE 1051 - resume_suspend.pml:219 - [((readyQueue[prio].tailIndex>0))] (1060:0:2 - 1)
		IfNotBlocked
		reached[0][1051] = 1;
		if (!((((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_6_8_48_prio), 4) ].tailIndex)>0)))
			continue;
		/* merge: top_task = readyQueue[prio].tasks[0](1060, 1052, 1060) */
		reached[0][1052] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_48_top_task);
		((P0 *)_this)->_4_6_8_48_top_task = ((int)now.readyQueue[ Index(((int)((P0 *)_this)->_4_6_8_48_prio), 4) ].tasks[0]);
#ifdef VAR_RANGES
		logval("Process1:top_task", ((int)((P0 *)_this)->_4_6_8_48_top_task));
#endif
		;
		/* merge: found = 1(1060, 1053, 1060) */
		reached[0][1053] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_48_found);
		((P0 *)_this)->_4_6_8_48_found = 1;
#ifdef VAR_RANGES
		logval("Process1:found", ((int)((P0 *)_this)->_4_6_8_48_found));
#endif
		;
		/* merge: .(goto)(0, 1057, 1060) */
		reached[0][1057] = 1;
		;
		/* merge: .(goto)(0, 1061, 1060) */
		reached[0][1061] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 1256: // STATE 1055 - resume_suspend.pml:225 - [prio = (prio+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][1055] = 1;
		(trpt+1)->bup.oval = ((int)((P0 *)_this)->_4_6_8_48_prio);
		((P0 *)_this)->_4_6_8_48_prio = (((int)((P0 *)_this)->_4_6_8_48_prio)+1);
#ifdef VAR_RANGES
		logval("Process1:prio", ((int)((P0 *)_this)->_4_6_8_48_prio));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1257: // STATE 1058 - resume_suspend.pml:227 - [(((prio>=4)||found))] (1083:0:3 - 1)
		IfNotBlocked
		reached[0][1058] = 1;
		if (!(((((int)((P0 *)_this)->_4_6_8_48_prio)>=4)||((int)((P0 *)_this)->_4_6_8_48_found))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_6_8_48_found */  (trpt+1)->bup.ovals = grab_ints(3);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->_4_6_8_48_found;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_48_found = 0;
		/* merge: goto :b39(1083, 1059, 1083) */
		reached[0][1059] = 1;
		;
		/* merge: newTask = top_task(1083, 1063, 1083) */
		reached[0][1063] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_6_8_48_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[0][1064] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_6_8_48_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1258: // STATE 1063 - resume_suspend.pml:231 - [newTask = top_task] (0:1083:2 - 3)
		IfNotBlocked
		reached[0][1063] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.newTask);
		now.newTask = ((int)((P0 *)_this)->_4_6_8_48_top_task);
#ifdef VAR_RANGES
		logval("newTask", ((int)now.newTask));
#endif
		;
		/* merge: topPrio = prio(1083, 1064, 1083) */
		reached[0][1064] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.topPrio);
		now.topPrio = ((int)((P0 *)_this)->_4_6_8_48_prio);
#ifdef VAR_RANGES
		logval("topPrio", ((int)now.topPrio));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1259: // STATE 1066 - resume_suspend.pml:177 - [deq_idx = 0] (0:1073:2 - 1)
		IfNotBlocked
		reached[0][1066] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)((P0 *)_this)->_4_6_8_49_deq_idx);
		((P0 *)_this)->_4_6_8_49_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_6_8_49_deq_idx));
#endif
		;
		/* merge: deq_idx = 0(1073, 1067, 1073) */
		reached[0][1067] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_49_deq_idx);
		((P0 *)_this)->_4_6_8_49_deq_idx = 0;
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_6_8_49_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[0][1074] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1260: // STATE 1068 - resume_suspend.pml:181 - [((deq_idx<(readyQueue[topPrio].tailIndex-1)))] (1073:0:2 - 1)
		IfNotBlocked
		reached[0][1068] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_49_deq_idx)<(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		/* merge: readyQueue[topPrio].tasks[deq_idx] = readyQueue[topPrio].tasks[(deq_idx+1)](1073, 1069, 1073) */
		reached[0][1069] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_6_8_49_deq_idx), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index(((P0 *)_this)->_4_6_8_49_deq_idx, 8) ] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)((P0 *)_this)->_4_6_8_49_deq_idx)+1), 8) ]);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[Process1:deq_idx]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index(((int)((P0 *)_this)->_4_6_8_49_deq_idx), 8) ]));
#endif
		;
		/* merge: deq_idx = (deq_idx+1)(1073, 1070, 1073) */
		reached[0][1070] = 1;
		(trpt+1)->bup.ovals[1] = ((int)((P0 *)_this)->_4_6_8_49_deq_idx);
		((P0 *)_this)->_4_6_8_49_deq_idx = (((int)((P0 *)_this)->_4_6_8_49_deq_idx)+1);
#ifdef VAR_RANGES
		logval("Process1:deq_idx", ((int)((P0 *)_this)->_4_6_8_49_deq_idx));
#endif
		;
		/* merge: .(goto)(0, 1074, 1073) */
		reached[0][1074] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 1261: // STATE 1071 - resume_suspend.pml:184 - [((deq_idx>=(readyQueue[topPrio].tailIndex-1)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][1071] = 1;
		if (!((((int)((P0 *)_this)->_4_6_8_49_deq_idx)>=(((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: _4_6_8_49_deq_idx */  (trpt+1)->bup.oval = ((P0 *)_this)->_4_6_8_49_deq_idx;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->_4_6_8_49_deq_idx = 0;
		_m = 3; goto P999; /* 0 */
	case 1262: // STATE 1076 - resume_suspend.pml:189 - [((readyQueue[topPrio].tailIndex>0))] (1087:0:4 - 1)
		IfNotBlocked
		reached[0][1076] = 1;
		if (!((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)>0)))
			continue;
		/* merge: readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)] = 255(1087, 1077, 1087) */
		reached[0][1077] = 1;
		(trpt+1)->bup.ovals = grab_ints(4);
		(trpt+1)->bup.ovals[0] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]);
		now.readyQueue[ Index(now.topPrio, 4) ].tasks[ Index((now.readyQueue[ Index(now.topPrio, 4) ].tailIndex-1), 8) ] = 255;
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tasks[(readyQueue[topPrio].tailIndex-1)]", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tasks[ Index((((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1), 8) ]));
#endif
		;
		/* merge: readyQueue[topPrio].tailIndex = (readyQueue[topPrio].tailIndex-1)(1087, 1078, 1087) */
		reached[0][1078] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex);
		now.readyQueue[ Index(now.topPrio, 4) ].tailIndex = (((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex)-1);
#ifdef VAR_RANGES
		logval("readyQueue[topPrio].tailIndex", ((int)now.readyQueue[ Index(((int)now.topPrio), 4) ].tailIndex));
#endif
		;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[0][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[0][1084] = 1;
		(trpt+1)->bup.ovals[2] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[0][1085] = 1;
		(trpt+1)->bup.ovals[3] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 5 */
	case 1263: // STATE 1080 - resume_suspend.pml:192 - [(1)] (1087:0:2 - 1)
		IfNotBlocked
		reached[0][1080] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(1087, 1082, 1087) */
		reached[0][1082] = 1;
		;
		/* merge: tcb[newTask].state = 4(1087, 1084, 1087) */
		reached[0][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[0][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 3 */
	case 1264: // STATE 1084 - resume_suspend.pml:458 - [tcb[newTask].state = 4] (0:1087:2 - 3)
		IfNotBlocked
		reached[0][1084] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.tcb[ Index(((int)now.newTask), 5) ].state);
		now.tcb[ Index(now.newTask, 5) ].state = 4;
#ifdef VAR_RANGES
		logval("tcb[newTask].state", ((int)now.tcb[ Index(((int)now.newTask), 5) ].state));
#endif
		;
		/* merge: EP = newTask(1087, 1085, 1087) */
		reached[0][1085] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.EP);
		now.EP = ((int)now.newTask);
#ifdef VAR_RANGES
		logval("EP", ((int)now.EP));
#endif
		;
		_m = 3; goto P999; /* 1 */
	case 1265: // STATE 1086 - resume_suspend.pml:242 - [int_ctrl_reg = int_save] (0:0:1 - 1)
		IfNotBlocked
		reached[0][1086] = 1;
		(trpt+1)->bup.oval = ((int)now.int_ctrl_reg);
		now.int_ctrl_reg = ((int)now.int_save);
#ifdef VAR_RANGES
		logval("int_ctrl_reg", ((int)now.int_ctrl_reg));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 1266: // STATE 1093 - resume_suspend.pml:481 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[0][1093] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */
	case  _T5:	/* np_ */
		if (!((!(trpt->o_pm&4) && !(trpt->tau&128))))
			continue;
		/* else fall through */
	case  _T2:	/* true */
		_m = 3; goto P999;
#undef rand
	}

